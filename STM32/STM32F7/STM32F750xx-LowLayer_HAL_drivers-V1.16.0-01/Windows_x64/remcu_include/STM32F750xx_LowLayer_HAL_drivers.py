# -*- coding: utf-8 -*-
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# To improve the quality of the software, users are encouraged to share modifications, enhancements or bug fixes with
# remotemcu.com (remcu@remotemcu.com)
#
# It is python header file for using REMCU library
#
#
# word size : 32 bit
#
#


import ctypes



__version__ = "v1.16.0-bd91f9a4"
__RUN = 0
__HALT = 1
__ERROR = 0
__WARNING = 1
__INFO = 2
__DEBUG = 3
__ALL_LOG = 4
DEFAULT_OPENOCD_PORT = 6666
DEFAULT_GDB_PORT = 3333
# file stm32f7xx_ll_fmc.h : 

# empty define __STM32F7xx_LL_FMC_H
# Skip FMC_NORSRAM_TypeDef : no need parse
# Skip FMC_NORSRAM_EXTENDED_TypeDef : no need parse
# Skip FMC_NAND_TypeDef : no need parse
# Skip FMC_SDRAM_TypeDef : no need parse
FMC_NORSRAM_DEVICE = 0xA0000000
FMC_NORSRAM_EXTENDED_DEVICE = 0xA0000104
FMC_NAND_DEVICE = 0xA0000080
FMC_SDRAM_DEVICE = 0xA0000140
FMC_NORSRAM_BANK1 = 0x0
FMC_NORSRAM_BANK2 = 0x2
FMC_NORSRAM_BANK3 = 0x4
FMC_NORSRAM_BANK4 = 0x6
FMC_DATA_ADDRESS_MUX_DISABLE = 0x0
FMC_DATA_ADDRESS_MUX_ENABLE = 0x2
FMC_MEMORY_TYPE_SRAM = 0x0
FMC_MEMORY_TYPE_PSRAM = 0x4
FMC_MEMORY_TYPE_NOR = 0x8
FMC_NORSRAM_MEM_BUS_WIDTH_8 = 0x0
FMC_NORSRAM_MEM_BUS_WIDTH_16 = 0x10
FMC_NORSRAM_MEM_BUS_WIDTH_32 = 0x20
FMC_NORSRAM_FLASH_ACCESS_ENABLE = 0x40
FMC_NORSRAM_FLASH_ACCESS_DISABLE = 0x0
FMC_BURST_ACCESS_MODE_DISABLE = 0x0
FMC_BURST_ACCESS_MODE_ENABLE = 0x100
FMC_WAIT_SIGNAL_POLARITY_LOW = 0x0
FMC_WAIT_SIGNAL_POLARITY_HIGH = 0x200
FMC_WAIT_TIMING_BEFORE_WS = 0x0
FMC_WAIT_TIMING_DURING_WS = 0x800
FMC_WRITE_OPERATION_DISABLE = 0x0
FMC_WRITE_OPERATION_ENABLE = 0x1000
FMC_WAIT_SIGNAL_DISABLE = 0x0
FMC_WAIT_SIGNAL_ENABLE = 0x2000
FMC_EXTENDED_MODE_DISABLE = 0x0
FMC_EXTENDED_MODE_ENABLE = 0x4000
FMC_ASYNCHRONOUS_WAIT_DISABLE = 0x0
FMC_ASYNCHRONOUS_WAIT_ENABLE = 0x8000
FMC_PAGE_SIZE_NONE = 0x0
FMC_PAGE_SIZE_128 = 0x10000
FMC_PAGE_SIZE_256 = 0x20000
FMC_PAGE_SIZE_512 = 0x30000
FMC_PAGE_SIZE_1024 = 0x40000
FMC_WRITE_BURST_DISABLE = 0x0
FMC_WRITE_BURST_ENABLE = 0x80000
FMC_CONTINUOUS_CLOCK_SYNC_ONLY = 0x0
FMC_CONTINUOUS_CLOCK_SYNC_ASYNC = 0x100000
FMC_WRITE_FIFO_DISABLE = 0x200000
FMC_WRITE_FIFO_ENABLE = 0x0
FMC_ACCESS_MODE_A = 0x0
FMC_ACCESS_MODE_B = 0x10000000
FMC_ACCESS_MODE_C = 0x20000000
FMC_ACCESS_MODE_D = 0x30000000
FMC_NAND_BANK3 = 0x100
FMC_NAND_WAIT_FEATURE_DISABLE = 0x0
FMC_NAND_WAIT_FEATURE_ENABLE = 0x2
FMC_PCR_MEMORY_TYPE_NAND = 0x8
FMC_NAND_MEM_BUS_WIDTH_8 = 0x0
FMC_NAND_MEM_BUS_WIDTH_16 = 0x10
FMC_NAND_ECC_DISABLE = 0x0
FMC_NAND_ECC_ENABLE = 0x40
FMC_NAND_ECC_PAGE_SIZE_256BYTE = 0x0
FMC_NAND_ECC_PAGE_SIZE_512BYTE = 0x20000
FMC_NAND_ECC_PAGE_SIZE_1024BYTE = 0x40000
FMC_NAND_ECC_PAGE_SIZE_2048BYTE = 0x60000
FMC_NAND_ECC_PAGE_SIZE_4096BYTE = 0x80000
FMC_NAND_ECC_PAGE_SIZE_8192BYTE = 0xA0000
FMC_SDRAM_BANK1 = 0x0
FMC_SDRAM_BANK2 = 0x1
FMC_SDRAM_COLUMN_BITS_NUM_8 = 0x0
FMC_SDRAM_COLUMN_BITS_NUM_9 = 0x1
FMC_SDRAM_COLUMN_BITS_NUM_10 = 0x2
FMC_SDRAM_COLUMN_BITS_NUM_11 = 0x3
FMC_SDRAM_ROW_BITS_NUM_11 = 0x0
FMC_SDRAM_ROW_BITS_NUM_12 = 0x4
FMC_SDRAM_ROW_BITS_NUM_13 = 0x8
FMC_SDRAM_MEM_BUS_WIDTH_8 = 0x0
FMC_SDRAM_MEM_BUS_WIDTH_16 = 0x10
FMC_SDRAM_MEM_BUS_WIDTH_32 = 0x20
FMC_SDRAM_INTERN_BANKS_NUM_2 = 0x0
FMC_SDRAM_INTERN_BANKS_NUM_4 = 0x40
FMC_SDRAM_CAS_LATENCY_1 = 0x80
FMC_SDRAM_CAS_LATENCY_2 = 0x100
FMC_SDRAM_CAS_LATENCY_3 = 0x180
FMC_SDRAM_WRITE_PROTECTION_DISABLE = 0x0
FMC_SDRAM_WRITE_PROTECTION_ENABLE = 0x200
FMC_SDRAM_CLOCK_DISABLE = 0x0
FMC_SDRAM_CLOCK_PERIOD_2 = 0x800
FMC_SDRAM_CLOCK_PERIOD_3 = 0xC00
FMC_SDRAM_RBURST_DISABLE = 0x0
FMC_SDRAM_RBURST_ENABLE = 0x1000
FMC_SDRAM_RPIPE_DELAY_0 = 0x0
FMC_SDRAM_RPIPE_DELAY_1 = 0x2000
FMC_SDRAM_RPIPE_DELAY_2 = 0x4000
FMC_SDRAM_CMD_NORMAL_MODE = 0x0
FMC_SDRAM_CMD_CLK_ENABLE = 0x1
FMC_SDRAM_CMD_PALL = 0x2
FMC_SDRAM_CMD_AUTOREFRESH_MODE = 0x3
FMC_SDRAM_CMD_LOAD_MODE = 0x4
FMC_SDRAM_CMD_SELFREFRESH_MODE = 0x5
FMC_SDRAM_CMD_POWERDOWN_MODE = 0x6
FMC_SDRAM_CMD_TARGET_BANK2 = 0x8
FMC_SDRAM_CMD_TARGET_BANK1 = 0x10
FMC_SDRAM_CMD_TARGET_BANK1_2 = 0x18
FMC_SDRAM_NORMAL_MODE = 0x0
FMC_SDRAM_SELF_REFRESH_MODE = 0x2
FMC_SDRAM_POWER_DOWN_MODE = 0x4
FMC_IT_RISING_EDGE = 0x8
FMC_IT_LEVEL = 0x10
FMC_IT_FALLING_EDGE = 0x20
FMC_IT_REFRESH_ERROR = 0x4000
FMC_FLAG_RISING_EDGE = 0x1
FMC_FLAG_LEVEL = 0x2
FMC_FLAG_FALLING_EDGE = 0x4
FMC_FLAG_FEMPT = 0x40
FMC_SDRAM_FLAG_REFRESH_IT = 0x1
FMC_SDRAM_FLAG_BUSY = 0x20
FMC_SDRAM_FLAG_REFRESH_ERROR = 0x1
# struct FMC_NORSRAM_InitTypeDef

class FMC_NORSRAM_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('NSBank',	ctypes.c_uint32),
		('DataAddressMux',	ctypes.c_uint32),
		('MemoryType',	ctypes.c_uint32),
		('MemoryDataWidth',	ctypes.c_uint32),
		('BurstAccessMode',	ctypes.c_uint32),
		('WaitSignalPolarity',	ctypes.c_uint32),
		('WaitSignalActive',	ctypes.c_uint32),
		('WriteOperation',	ctypes.c_uint32),
		('WaitSignal',	ctypes.c_uint32),
		('ExtendedMode',	ctypes.c_uint32),
		('AsynchronousWait',	ctypes.c_uint32),
		('WriteBurst',	ctypes.c_uint32),
		('ContinuousClock',	ctypes.c_uint32),
		('WriteFifo',	ctypes.c_uint32),
		('PageSize',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct FMC_NORSRAM_TimingTypeDef

class FMC_NORSRAM_TimingTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('AddressSetupTime',	ctypes.c_uint32),
		('AddressHoldTime',	ctypes.c_uint32),
		('DataSetupTime',	ctypes.c_uint32),
		('BusTurnAroundDuration',	ctypes.c_uint32),
		('CLKDivision',	ctypes.c_uint32),
		('DataLatency',	ctypes.c_uint32),
		('AccessMode',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct FMC_NAND_InitTypeDef

class FMC_NAND_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('NandBank',	ctypes.c_uint32),
		('Waitfeature',	ctypes.c_uint32),
		('MemoryDataWidth',	ctypes.c_uint32),
		('EccComputation',	ctypes.c_uint32),
		('ECCPageSize',	ctypes.c_uint32),
		('TCLRSetupTime',	ctypes.c_uint32),
		('TARSetupTime',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct FMC_NAND_PCC_TimingTypeDef

class FMC_NAND_PCC_TimingTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('SetupTime',	ctypes.c_uint32),
		('WaitSetupTime',	ctypes.c_uint32),
		('HoldSetupTime',	ctypes.c_uint32),
		('HiZSetupTime',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct FMC_SDRAM_InitTypeDef

class FMC_SDRAM_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('SDBank',	ctypes.c_uint32),
		('ColumnBitsNumber',	ctypes.c_uint32),
		('RowBitsNumber',	ctypes.c_uint32),
		('MemoryDataWidth',	ctypes.c_uint32),
		('InternalBankNumber',	ctypes.c_uint32),
		('CASLatency',	ctypes.c_uint32),
		('WriteProtection',	ctypes.c_uint32),
		('SDClockPeriod',	ctypes.c_uint32),
		('ReadBurst',	ctypes.c_uint32),
		('ReadPipeDelay',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct FMC_SDRAM_TimingTypeDef

class FMC_SDRAM_TimingTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('LoadToActiveDelay',	ctypes.c_uint32),
		('ExitSelfRefreshDelay',	ctypes.c_uint32),
		('SelfRefreshTime',	ctypes.c_uint32),
		('RowCycleDelay',	ctypes.c_uint32),
		('WriteRecoveryTime',	ctypes.c_uint32),
		('RPDelay',	ctypes.c_uint32),
		('RCDDelay',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct FMC_SDRAM_CommandTypeDef

class FMC_SDRAM_CommandTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('CommandMode',	ctypes.c_uint32),
		('CommandTarget',	ctypes.c_uint32),
		('AutoRefreshNumber',	ctypes.c_uint32),
		('ModeRegisterDefinition',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------

# file stm32f7xx_ll_adc.h : 

# empty define __STM32F7xx_LL_ADC_H
ADC_SQR1_REGOFFSET = 0x0
ADC_SQR2_REGOFFSET = 0x100
ADC_SQR3_REGOFFSET = 0x200
ADC_SQR4_REGOFFSET = 0x300
ADC_REG_SQRX_REGOFFSET_MASK = 0x300
ADC_REG_RANK_ID_SQRX_MASK = 0x1F
ADC_REG_RANK_1_SQRX_BITOFFSET_POS = 0x0
ADC_REG_RANK_2_SQRX_BITOFFSET_POS = 0x5
ADC_REG_RANK_3_SQRX_BITOFFSET_POS = 0xA
ADC_REG_RANK_4_SQRX_BITOFFSET_POS = 0xF
ADC_REG_RANK_5_SQRX_BITOFFSET_POS = 0x14
ADC_REG_RANK_6_SQRX_BITOFFSET_POS = 0x19
ADC_REG_RANK_7_SQRX_BITOFFSET_POS = 0x0
ADC_REG_RANK_8_SQRX_BITOFFSET_POS = 0x5
ADC_REG_RANK_9_SQRX_BITOFFSET_POS = 0xA
ADC_REG_RANK_10_SQRX_BITOFFSET_POS = 0xF
ADC_REG_RANK_11_SQRX_BITOFFSET_POS = 0x14
ADC_REG_RANK_12_SQRX_BITOFFSET_POS = 0x19
ADC_REG_RANK_13_SQRX_BITOFFSET_POS = 0x0
ADC_REG_RANK_14_SQRX_BITOFFSET_POS = 0x5
ADC_REG_RANK_15_SQRX_BITOFFSET_POS = 0xA
ADC_REG_RANK_16_SQRX_BITOFFSET_POS = 0xF
ADC_JDR1_REGOFFSET = 0x0
ADC_JDR2_REGOFFSET = 0x100
ADC_JDR3_REGOFFSET = 0x200
ADC_JDR4_REGOFFSET = 0x300
ADC_JOFR1_REGOFFSET = 0x0
ADC_JOFR2_REGOFFSET = 0x1000
ADC_JOFR3_REGOFFSET = 0x2000
ADC_JOFR4_REGOFFSET = 0x3000
ADC_INJ_JDRX_REGOFFSET_MASK = 0x300
ADC_INJ_JOFRX_REGOFFSET_MASK = 0x3000
ADC_INJ_RANK_ID_JSQR_MASK = 0x1F
ADC_REG_TRIG_EXT_EDGE_DEFAULT = 0x10000000
ADC_REG_TRIG_SOURCE_MASK = 0xFFF000
ADC_REG_TRIG_EDGE_MASK = 0x1110000
ADC_REG_TRIG_EXTSEL_BITOFFSET_POS = 0x18
ADC_REG_TRIG_EXTEN_BITOFFSET_POS = 0x1C
ADC_INJ_TRIG_EXT_EDGE_DEFAULT = 0x100000
ADC_INJ_TRIG_SOURCE_MASK = 0xFFF0
ADC_INJ_TRIG_EDGE_MASK = 0x11100
ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS = 0x10
ADC_INJ_TRIG_EXTEN_BITOFFSET_POS = 0x14
ADC_CHANNEL_ID_NUMBER_MASK = 0x1F
ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS = 0x0
ADC_CHANNEL_ID_MASK = 0xD000001F
ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 = 0x1F
ADC_CHANNEL_ID_INTERNAL_CH = 0x80000000
ADC_CHANNEL_ID_INTERNAL_CH_2 = 0x40000000
ADC_CHANNEL_DIFFERENCIATION_TEMPSENSOR_VBAT = 0x10000000
ADC_CHANNEL_ID_INTERNAL_CH_MASK = 0xD0000000
ADC_SMPR1_REGOFFSET = 0x0
ADC_SMPR2_REGOFFSET = 0x2000000
ADC_CHANNEL_SMPRX_REGOFFSET_MASK = 0x2000000
ADC_CHANNEL_SMPx_BITOFFSET_MASK = 0x1F00000
ADC_CHANNEL_SMPx_BITOFFSET_POS = 0x14
ADC_CHANNEL_0_NUMBER = 0x0
ADC_CHANNEL_1_NUMBER = 0x1
ADC_CHANNEL_2_NUMBER = 0x2
ADC_CHANNEL_3_NUMBER = 0x3
ADC_CHANNEL_4_NUMBER = 0x4
ADC_CHANNEL_5_NUMBER = 0x5
ADC_CHANNEL_6_NUMBER = 0x6
ADC_CHANNEL_7_NUMBER = 0x7
ADC_CHANNEL_8_NUMBER = 0x8
ADC_CHANNEL_9_NUMBER = 0x9
ADC_CHANNEL_10_NUMBER = 0xA
ADC_CHANNEL_11_NUMBER = 0xB
ADC_CHANNEL_12_NUMBER = 0xC
ADC_CHANNEL_13_NUMBER = 0xD
ADC_CHANNEL_14_NUMBER = 0xE
ADC_CHANNEL_15_NUMBER = 0xF
ADC_CHANNEL_16_NUMBER = 0x10
ADC_CHANNEL_17_NUMBER = 0x11
ADC_CHANNEL_18_NUMBER = 0x12
ADC_CHANNEL_0_SMP = 0x2000000
ADC_CHANNEL_1_SMP = 0x2300000
ADC_CHANNEL_2_SMP = 0x2600000
ADC_CHANNEL_3_SMP = 0x2900000
ADC_CHANNEL_4_SMP = 0x2C00000
ADC_CHANNEL_5_SMP = 0x2F00000
ADC_CHANNEL_6_SMP = 0x3200000
ADC_CHANNEL_7_SMP = 0x3500000
ADC_CHANNEL_8_SMP = 0x3800000
ADC_CHANNEL_9_SMP = 0x3B00000
ADC_CHANNEL_10_SMP = 0x0
ADC_CHANNEL_11_SMP = 0x300000
ADC_CHANNEL_12_SMP = 0x600000
ADC_CHANNEL_13_SMP = 0x900000
ADC_CHANNEL_14_SMP = 0xC00000
ADC_CHANNEL_15_SMP = 0xF00000
ADC_CHANNEL_16_SMP = 0x1200000
ADC_CHANNEL_17_SMP = 0x1500000
ADC_CHANNEL_18_SMP = 0x1800000
ADC_AWD_CR1_REGOFFSET = 0x0
ADC_AWD_CRX_REGOFFSET_MASK = 0x0
ADC_AWD_CR1_CHANNEL_MASK = 0xC0021F
ADC_AWD_CR_ALL_CHANNEL_MASK = 0xC0021F
ADC_AWD_TR1_HIGH_REGOFFSET = 0x0
ADC_AWD_TR1_LOW_REGOFFSET = 0x1
ADC_AWD_TRX_REGOFFSET_MASK = 0x1
ADC_CR1_RES_BITOFFSET_POS = 0x18
ADC_TR_HT_BITOFFSET_POS = 0x10
VREFINT_CAL_ADDR = 0x1FF0F44A
VREFINT_CAL_VREF = 0xCE4
TEMPSENSOR_CAL1_ADDR = 0x1FF0F44C
TEMPSENSOR_CAL2_ADDR = 0x1FF0F44E
TEMPSENSOR_CAL1_TEMP = 0x1E
TEMPSENSOR_CAL2_TEMP = 0x6E
TEMPSENSOR_CAL_VREFANALOG = 0xCE4
LL_ADC_FLAG_STRT = 0x10
LL_ADC_FLAG_EOCS = 0x2
LL_ADC_FLAG_OVR = 0x20
LL_ADC_FLAG_JSTRT = 0x8
LL_ADC_FLAG_JEOS = 0x4
LL_ADC_FLAG_AWD1 = 0x1
LL_ADC_FLAG_EOCS_MST = 0x2
LL_ADC_FLAG_EOCS_SLV1 = 0x200
LL_ADC_FLAG_EOCS_SLV2 = 0x20000
LL_ADC_FLAG_OVR_MST = 0x20
LL_ADC_FLAG_OVR_SLV1 = 0x2000
LL_ADC_FLAG_OVR_SLV2 = 0x200000
LL_ADC_FLAG_JEOS_MST = 0x4
LL_ADC_FLAG_JEOS_SLV1 = 0x400
LL_ADC_FLAG_JEOS_SLV2 = 0x40000
LL_ADC_FLAG_AWD1_MST = 0x1
LL_ADC_FLAG_AWD1_SLV1 = 0x100
LL_ADC_FLAG_AWD1_SLV2 = 0x10000
LL_ADC_IT_EOCS = 0x20
LL_ADC_IT_OVR = 0x4000000
LL_ADC_IT_JEOS = 0x80
LL_ADC_IT_AWD1 = 0x40
LL_ADC_DMA_REG_REGULAR_DATA = 0x0
LL_ADC_DMA_REG_REGULAR_DATA_MULTI = 0x1
LL_ADC_CLOCK_SYNC_PCLK_DIV2 = 0x0
LL_ADC_CLOCK_SYNC_PCLK_DIV4 = 0x10000
LL_ADC_CLOCK_SYNC_PCLK_DIV6 = 0x20000
LL_ADC_CLOCK_SYNC_PCLK_DIV8 = 0x30000
LL_ADC_PATH_INTERNAL_NONE = 0x0
LL_ADC_PATH_INTERNAL_VREFINT = 0x800000
LL_ADC_PATH_INTERNAL_TEMPSENSOR = 0x800000
LL_ADC_PATH_INTERNAL_VBAT = 0x400000
LL_ADC_RESOLUTION_12B = 0x0
LL_ADC_RESOLUTION_10B = 0x1000000
LL_ADC_RESOLUTION_8B = 0x2000000
LL_ADC_RESOLUTION_6B = 0x3000000
LL_ADC_DATA_ALIGN_RIGHT = 0x0
LL_ADC_DATA_ALIGN_LEFT = 0x800
LL_ADC_SEQ_SCAN_DISABLE = 0x0
LL_ADC_SEQ_SCAN_ENABLE = 0x100
LL_ADC_GROUP_REGULAR = 0x1
LL_ADC_GROUP_INJECTED = 0x2
LL_ADC_GROUP_REGULAR_INJECTED = 0x3
LL_ADC_CHANNEL_0 = 0x2000000
LL_ADC_CHANNEL_1 = 0x2300001
LL_ADC_CHANNEL_2 = 0x2600002
LL_ADC_CHANNEL_3 = 0x2900003
LL_ADC_CHANNEL_4 = 0x2C00004
LL_ADC_CHANNEL_5 = 0x2F00005
LL_ADC_CHANNEL_6 = 0x3200006
LL_ADC_CHANNEL_7 = 0x3500007
LL_ADC_CHANNEL_8 = 0x3800008
LL_ADC_CHANNEL_9 = 0x3B00009
LL_ADC_CHANNEL_10 = 0xA
LL_ADC_CHANNEL_11 = 0x30000B
LL_ADC_CHANNEL_12 = 0x60000C
LL_ADC_CHANNEL_13 = 0x90000D
LL_ADC_CHANNEL_14 = 0xC0000E
LL_ADC_CHANNEL_15 = 0xF0000F
LL_ADC_CHANNEL_16 = 0x1200010
LL_ADC_CHANNEL_17 = 0x1500011
LL_ADC_CHANNEL_18 = 0x1800012
LL_ADC_CHANNEL_VREFINT = 0x81500011
LL_ADC_CHANNEL_VBAT = 0x81800012
LL_ADC_CHANNEL_TEMPSENSOR = 0x81800012
LL_ADC_REG_TRIG_SOFTWARE = 0x0
LL_ADC_REG_TRIG_EXT_TIM1_CH1 = 0x10000000
LL_ADC_REG_TRIG_EXT_TIM1_CH2 = 0x11000000
LL_ADC_REG_TRIG_EXT_TIM1_CH3 = 0x12000000
LL_ADC_REG_TRIG_EXT_TIM2_CH2 = 0x13000000
LL_ADC_REG_TRIG_EXT_TIM5_TRGO = 0x14000000
LL_ADC_REG_TRIG_EXT_TIM4_CH4 = 0x15000000
LL_ADC_REG_TRIG_EXT_TIM3_CH4 = 0x16000000
LL_ADC_REG_TRIG_EXT_TIM8_TRGO = 0x17000000
LL_ADC_REG_TRIG_EXT_TIM8_TRGO2 = 0x18000000
LL_ADC_REG_TRIG_EXT_TIM1_TRGO = 0x19000000
LL_ADC_REG_TRIG_EXT_TIM1_TRGO2 = 0x1A000000
LL_ADC_REG_TRIG_EXT_TIM2_TRGO = 0x1B000000
LL_ADC_REG_TRIG_EXT_TIM4_TRGO = 0x1C000000
LL_ADC_REG_TRIG_EXT_TIM6_TRGO = 0x1D000000
LL_ADC_REG_TRIG_EXT_EXTI_LINE11 = 0x1F000000
LL_ADC_REG_TRIG_EXT_RISING = 0x10000000
LL_ADC_REG_TRIG_EXT_FALLING = 0x20000000
LL_ADC_REG_TRIG_EXT_RISINGFALLING = 0x30000000
LL_ADC_REG_CONV_SINGLE = 0x0
LL_ADC_REG_CONV_CONTINUOUS = 0x2
LL_ADC_REG_DMA_TRANSFER_NONE = 0x0
LL_ADC_REG_DMA_TRANSFER_LIMITED = 0x100
LL_ADC_REG_DMA_TRANSFER_UNLIMITED = 0x300
LL_ADC_REG_FLAG_EOC_SEQUENCE_CONV = 0x0
LL_ADC_REG_FLAG_EOC_UNITARY_CONV = 0x400
LL_ADC_REG_SEQ_SCAN_DISABLE = 0x0
LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS = 0x100000
LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS = 0x200000
LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS = 0x300000
LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS = 0x400000
LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS = 0x500000
LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS = 0x600000
LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS = 0x700000
LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS = 0x800000
LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS = 0x900000
LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS = 0xA00000
LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS = 0xB00000
LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS = 0xC00000
LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS = 0xD00000
LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS = 0xE00000
LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS = 0xF00000
LL_ADC_REG_SEQ_DISCONT_DISABLE = 0x0
LL_ADC_REG_SEQ_DISCONT_1RANK = 0x800
LL_ADC_REG_SEQ_DISCONT_2RANKS = 0x2800
LL_ADC_REG_SEQ_DISCONT_3RANKS = 0x4800
LL_ADC_REG_SEQ_DISCONT_4RANKS = 0x6800
LL_ADC_REG_SEQ_DISCONT_5RANKS = 0x8800
LL_ADC_REG_SEQ_DISCONT_6RANKS = 0xA800
LL_ADC_REG_SEQ_DISCONT_7RANKS = 0xC800
LL_ADC_REG_SEQ_DISCONT_8RANKS = 0xE800
LL_ADC_REG_RANK_1 = 0x200
LL_ADC_REG_RANK_2 = 0x205
LL_ADC_REG_RANK_3 = 0x20A
LL_ADC_REG_RANK_4 = 0x20F
LL_ADC_REG_RANK_5 = 0x214
LL_ADC_REG_RANK_6 = 0x219
LL_ADC_REG_RANK_7 = 0x100
LL_ADC_REG_RANK_8 = 0x105
LL_ADC_REG_RANK_9 = 0x10A
LL_ADC_REG_RANK_10 = 0x10F
LL_ADC_REG_RANK_11 = 0x114
LL_ADC_REG_RANK_12 = 0x119
LL_ADC_REG_RANK_13 = 0x0
LL_ADC_REG_RANK_14 = 0x5
LL_ADC_REG_RANK_15 = 0xA
LL_ADC_REG_RANK_16 = 0xF
LL_ADC_INJ_TRIG_SOFTWARE = 0x0
LL_ADC_INJ_TRIG_EXT_TIM1_TRGO = 0x100000
LL_ADC_INJ_TRIG_EXT_TIM1_CH4 = 0x110000
LL_ADC_INJ_TRIG_EXT_TIM2_TRGO = 0x120000
LL_ADC_INJ_TRIG_EXT_TIM2_CH1 = 0x130000
LL_ADC_INJ_TRIG_EXT_TIM3_CH4 = 0x140000
LL_ADC_INJ_TRIG_EXT_TIM4_TRGO = 0x150000
LL_ADC_INJ_TRIG_EXT_TIM8_CH4 = 0x170000
LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2 = 0x180000
LL_ADC_INJ_TRIG_EXT_TIM8_TRGO = 0x190000
LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2 = 0x1A0000
LL_ADC_INJ_TRIG_EXT_TIM3_CH3 = 0x1B0000
LL_ADC_INJ_TRIG_EXT_TIM5_TRGO = 0x1C0000
LL_ADC_INJ_TRIG_EXT_TIM3_CH1 = 0x1D0000
LL_ADC_INJ_TRIG_EXT_TIM6_TRGO = 0x1E0000
LL_ADC_INJ_TRIG_EXT_RISING = 0x100000
LL_ADC_INJ_TRIG_EXT_FALLING = 0x200000
LL_ADC_INJ_TRIG_EXT_RISINGFALLING = 0x300000
LL_ADC_INJ_TRIG_INDEPENDENT = 0x0
LL_ADC_INJ_TRIG_FROM_GRP_REGULAR = 0x400
LL_ADC_INJ_SEQ_SCAN_DISABLE = 0x0
LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS = 0x100000
LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS = 0x200000
LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS = 0x300000
LL_ADC_INJ_SEQ_DISCONT_DISABLE = 0x0
LL_ADC_INJ_SEQ_DISCONT_1RANK = 0x1000
LL_ADC_INJ_RANK_1 = 0x1
LL_ADC_INJ_RANK_2 = 0x1102
LL_ADC_INJ_RANK_3 = 0x2203
LL_ADC_INJ_RANK_4 = 0x3304
LL_ADC_SAMPLINGTIME_3CYCLES = 0x0
LL_ADC_SAMPLINGTIME_15CYCLES = 0x1
LL_ADC_SAMPLINGTIME_28CYCLES = 0x2
LL_ADC_SAMPLINGTIME_56CYCLES = 0x3
LL_ADC_SAMPLINGTIME_84CYCLES = 0x4
LL_ADC_SAMPLINGTIME_112CYCLES = 0x5
LL_ADC_SAMPLINGTIME_144CYCLES = 0x6
LL_ADC_SAMPLINGTIME_480CYCLES = 0x7
LL_ADC_AWD1 = 0xC0021F
LL_ADC_AWD_DISABLE = 0x0
LL_ADC_AWD_ALL_CHANNELS_REG = 0x800000
LL_ADC_AWD_ALL_CHANNELS_INJ = 0x400000
LL_ADC_AWD_ALL_CHANNELS_REG_INJ = 0xC00000
LL_ADC_AWD_CHANNEL_0_REG = 0x800200
LL_ADC_AWD_CHANNEL_0_INJ = 0x400200
LL_ADC_AWD_CHANNEL_0_REG_INJ = 0xC00200
LL_ADC_AWD_CHANNEL_1_REG = 0x800201
LL_ADC_AWD_CHANNEL_1_INJ = 0x400201
LL_ADC_AWD_CHANNEL_1_REG_INJ = 0xC00201
LL_ADC_AWD_CHANNEL_2_REG = 0x800202
LL_ADC_AWD_CHANNEL_2_INJ = 0x400202
LL_ADC_AWD_CHANNEL_2_REG_INJ = 0xC00202
LL_ADC_AWD_CHANNEL_3_REG = 0x800203
LL_ADC_AWD_CHANNEL_3_INJ = 0x400203
LL_ADC_AWD_CHANNEL_3_REG_INJ = 0xC00203
LL_ADC_AWD_CHANNEL_4_REG = 0x800204
LL_ADC_AWD_CHANNEL_4_INJ = 0x400204
LL_ADC_AWD_CHANNEL_4_REG_INJ = 0xC00204
LL_ADC_AWD_CHANNEL_5_REG = 0x800205
LL_ADC_AWD_CHANNEL_5_INJ = 0x400205
LL_ADC_AWD_CHANNEL_5_REG_INJ = 0xC00205
LL_ADC_AWD_CHANNEL_6_REG = 0x800206
LL_ADC_AWD_CHANNEL_6_INJ = 0x400206
LL_ADC_AWD_CHANNEL_6_REG_INJ = 0xC00206
LL_ADC_AWD_CHANNEL_7_REG = 0x800207
LL_ADC_AWD_CHANNEL_7_INJ = 0x400207
LL_ADC_AWD_CHANNEL_7_REG_INJ = 0xC00207
LL_ADC_AWD_CHANNEL_8_REG = 0x800208
LL_ADC_AWD_CHANNEL_8_INJ = 0x400208
LL_ADC_AWD_CHANNEL_8_REG_INJ = 0xC00208
LL_ADC_AWD_CHANNEL_9_REG = 0x800209
LL_ADC_AWD_CHANNEL_9_INJ = 0x400209
LL_ADC_AWD_CHANNEL_9_REG_INJ = 0xC00209
LL_ADC_AWD_CHANNEL_10_REG = 0x80020A
LL_ADC_AWD_CHANNEL_10_INJ = 0x40020A
LL_ADC_AWD_CHANNEL_10_REG_INJ = 0xC0020A
LL_ADC_AWD_CHANNEL_11_REG = 0x80020B
LL_ADC_AWD_CHANNEL_11_INJ = 0x40020B
LL_ADC_AWD_CHANNEL_11_REG_INJ = 0xC0020B
LL_ADC_AWD_CHANNEL_12_REG = 0x80020C
LL_ADC_AWD_CHANNEL_12_INJ = 0x40020C
LL_ADC_AWD_CHANNEL_12_REG_INJ = 0xC0020C
LL_ADC_AWD_CHANNEL_13_REG = 0x80020D
LL_ADC_AWD_CHANNEL_13_INJ = 0x40020D
LL_ADC_AWD_CHANNEL_13_REG_INJ = 0xC0020D
LL_ADC_AWD_CHANNEL_14_REG = 0x80020E
LL_ADC_AWD_CHANNEL_14_INJ = 0x40020E
LL_ADC_AWD_CHANNEL_14_REG_INJ = 0xC0020E
LL_ADC_AWD_CHANNEL_15_REG = 0x80020F
LL_ADC_AWD_CHANNEL_15_INJ = 0x40020F
LL_ADC_AWD_CHANNEL_15_REG_INJ = 0xC0020F
LL_ADC_AWD_CHANNEL_16_REG = 0x800210
LL_ADC_AWD_CHANNEL_16_INJ = 0x400210
LL_ADC_AWD_CHANNEL_16_REG_INJ = 0xC00210
LL_ADC_AWD_CHANNEL_17_REG = 0x800211
LL_ADC_AWD_CHANNEL_17_INJ = 0x400211
LL_ADC_AWD_CHANNEL_17_REG_INJ = 0xC00211
LL_ADC_AWD_CHANNEL_18_REG = 0x800212
LL_ADC_AWD_CHANNEL_18_INJ = 0x400212
LL_ADC_AWD_CHANNEL_18_REG_INJ = 0xC00212
LL_ADC_AWD_CH_VREFINT_REG = 0x80800211
LL_ADC_AWD_CH_VREFINT_INJ = 0x80400211
LL_ADC_AWD_CH_VREFINT_REG_INJ = 0x80C00211
LL_ADC_AWD_CH_VBAT_REG = 0x80800212
LL_ADC_AWD_CH_VBAT_INJ = 0x80400212
LL_ADC_AWD_CH_VBAT_REG_INJ = 0x80C00212
LL_ADC_AWD_CH_TEMPSENSOR_REG = 0x80800212
LL_ADC_AWD_CH_TEMPSENSOR_INJ = 0x80400212
LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ = 0x80C00212
LL_ADC_AWD_THRESHOLD_HIGH = 0x0
LL_ADC_AWD_THRESHOLD_LOW = 0x1
LL_ADC_MULTI_INDEPENDENT = 0x0
LL_ADC_MULTI_DUAL_REG_SIMULT = 0x6
LL_ADC_MULTI_DUAL_REG_INTERL = 0x7
LL_ADC_MULTI_DUAL_INJ_SIMULT = 0x5
LL_ADC_MULTI_DUAL_INJ_ALTERN = 0x9
LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM = 0x1
LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT = 0x2
LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM = 0x3
LL_ADC_MULTI_TRIPLE_REG_SIM_INJ_SIM = 0x11
LL_ADC_MULTI_TRIPLE_REG_SIM_INJ_ALT = 0x12
LL_ADC_MULTI_TRIPLE_INJ_SIMULT = 0x15
LL_ADC_MULTI_TRIPLE_REG_SIMULT = 0x16
LL_ADC_MULTI_TRIPLE_REG_INTERL = 0x17
LL_ADC_MULTI_TRIPLE_INJ_ALTERN = 0x11
LL_ADC_MULTI_REG_DMA_EACH_ADC = 0x0
LL_ADC_MULTI_REG_DMA_LIMIT_1 = 0x4000
LL_ADC_MULTI_REG_DMA_LIMIT_2 = 0x8000
LL_ADC_MULTI_REG_DMA_LIMIT_3 = 0x4000
LL_ADC_MULTI_REG_DMA_UNLMT_1 = 0x6000
LL_ADC_MULTI_REG_DMA_UNLMT_2 = 0xA000
LL_ADC_MULTI_REG_DMA_UNLMT_3 = 0x6000
LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES = 0x0
LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES = 0x100
LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES = 0x200
LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES = 0x300
LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES = 0x400
LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES = 0x500
LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES = 0x600
LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES = 0x700
LL_ADC_MULTI_TWOSMP_DELAY_13CYCLES = 0x800
LL_ADC_MULTI_TWOSMP_DELAY_14CYCLES = 0x900
LL_ADC_MULTI_TWOSMP_DELAY_15CYCLES = 0xA00
LL_ADC_MULTI_TWOSMP_DELAY_16CYCLES = 0xB00
LL_ADC_MULTI_TWOSMP_DELAY_17CYCLES = 0xC00
LL_ADC_MULTI_TWOSMP_DELAY_18CYCLES = 0xD00
LL_ADC_MULTI_TWOSMP_DELAY_19CYCLES = 0xE00
LL_ADC_MULTI_TWOSMP_DELAY_20CYCLES = 0xF00
LL_ADC_MULTI_MASTER = 0xFFFF
LL_ADC_MULTI_SLAVE = 0xFFFF0000
LL_ADC_MULTI_MASTER_SLAVE = 0xFFFFFFFF
LL_ADC_DELAY_VREFINT_STAB_US = 0xA
LL_ADC_DELAY_TEMPSENSOR_STAB_US = 0xA
# struct LL_ADC_CommonInitTypeDef

class LL_ADC_CommonInitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('CommonClock',	ctypes.c_uint32),
		('Multimode',	ctypes.c_uint32),
		('MultiDMATransfer',	ctypes.c_uint32),
		('MultiTwoSamplingDelay',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_ADC_InitTypeDef

class LL_ADC_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('Resolution',	ctypes.c_uint32),
		('DataAlignment',	ctypes.c_uint32),
		('SequencersScanMode',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_ADC_REG_InitTypeDef

class LL_ADC_REG_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('TriggerSource',	ctypes.c_uint32),
		('SequencerLength',	ctypes.c_uint32),
		('SequencerDiscont',	ctypes.c_uint32),
		('ContinuousMode',	ctypes.c_uint32),
		('DMATransfer',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_ADC_INJ_InitTypeDef

class LL_ADC_INJ_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('TriggerSource',	ctypes.c_uint32),
		('SequencerLength',	ctypes.c_uint32),
		('SequencerDiscont',	ctypes.c_uint32),
		('TrigAuto',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------

# file stm32f7xx_ll_rcc.h : 

# empty define __STM32F7xx_LL_RCC_H
HSE_VALUE = 0x17D7840
HSI_VALUE = 0xF42400
LSE_VALUE = 0x8000
LSI_VALUE = 0x7D00
EXTERNAL_CLOCK_VALUE = 0xBB8000
EXTERNAL_SAI1_CLOCK_VALUE = 0xBB80
EXTERNAL_SAI2_CLOCK_VALUE = 0xBB80
LL_RCC_CIR_LSIRDYC = 0x10000
LL_RCC_CIR_LSERDYC = 0x20000
LL_RCC_CIR_HSIRDYC = 0x40000
LL_RCC_CIR_HSERDYC = 0x80000
LL_RCC_CIR_PLLRDYC = 0x100000
LL_RCC_CIR_PLLI2SRDYC = 0x200000
LL_RCC_CIR_PLLSAIRDYC = 0x400000
LL_RCC_CIR_CSSC = 0x800000
LL_RCC_CIR_LSIRDYF = 0x1
LL_RCC_CIR_LSERDYF = 0x2
LL_RCC_CIR_HSIRDYF = 0x4
LL_RCC_CIR_HSERDYF = 0x8
LL_RCC_CIR_PLLRDYF = 0x10
LL_RCC_CIR_PLLI2SRDYF = 0x20
LL_RCC_CIR_PLLSAIRDYF = 0x40
LL_RCC_CIR_CSSF = 0x80
LL_RCC_CSR_LPWRRSTF = 0x80000000
LL_RCC_CSR_PINRSTF = 0x4000000
LL_RCC_CSR_PORRSTF = 0x8000000
LL_RCC_CSR_SFTRSTF = 0x10000000
LL_RCC_CSR_IWDGRSTF = 0x20000000
LL_RCC_CSR_WWDGRSTF = 0x40000000
LL_RCC_CSR_BORRSTF = 0x2000000
LL_RCC_CIR_LSIRDYIE = 0x100
LL_RCC_CIR_LSERDYIE = 0x200
LL_RCC_CIR_HSIRDYIE = 0x400
LL_RCC_CIR_HSERDYIE = 0x800
LL_RCC_CIR_PLLRDYIE = 0x1000
LL_RCC_CIR_PLLI2SRDYIE = 0x2000
LL_RCC_CIR_PLLSAIRDYIE = 0x4000
LL_RCC_LSEDRIVE_LOW = 0x0
LL_RCC_LSEDRIVE_MEDIUMHIGH = 0x8
LL_RCC_LSEDRIVE_MEDIUMLOW = 0x10
LL_RCC_LSEDRIVE_HIGH = 0x18
LL_RCC_SYS_CLKSOURCE_HSI = 0x0
LL_RCC_SYS_CLKSOURCE_HSE = 0x1
LL_RCC_SYS_CLKSOURCE_PLL = 0x2
LL_RCC_SYS_CLKSOURCE_STATUS_HSI = 0x0
LL_RCC_SYS_CLKSOURCE_STATUS_HSE = 0x4
LL_RCC_SYS_CLKSOURCE_STATUS_PLL = 0x8
LL_RCC_SYSCLK_DIV_1 = 0x0
LL_RCC_SYSCLK_DIV_2 = 0x80
LL_RCC_SYSCLK_DIV_4 = 0x90
LL_RCC_SYSCLK_DIV_8 = 0xA0
LL_RCC_SYSCLK_DIV_16 = 0xB0
LL_RCC_SYSCLK_DIV_64 = 0xC0
LL_RCC_SYSCLK_DIV_128 = 0xD0
LL_RCC_SYSCLK_DIV_256 = 0xE0
LL_RCC_SYSCLK_DIV_512 = 0xF0
LL_RCC_APB1_DIV_1 = 0x0
LL_RCC_APB1_DIV_2 = 0x1000
LL_RCC_APB1_DIV_4 = 0x1400
LL_RCC_APB1_DIV_8 = 0x1800
LL_RCC_APB1_DIV_16 = 0x1C00
LL_RCC_APB2_DIV_1 = 0x0
LL_RCC_APB2_DIV_2 = 0x8000
LL_RCC_APB2_DIV_4 = 0xA000
LL_RCC_APB2_DIV_8 = 0xC000
LL_RCC_APB2_DIV_16 = 0xE000
LL_RCC_MCO1SOURCE_HSI = 0x600000
LL_RCC_MCO1SOURCE_LSE = 0x600020
LL_RCC_MCO1SOURCE_HSE = 0x600040
LL_RCC_MCO1SOURCE_PLLCLK = 0x600060
LL_RCC_MCO2SOURCE_SYSCLK = 0xC0000000
LL_RCC_MCO2SOURCE_PLLI2S = 0xC0004000
LL_RCC_MCO2SOURCE_HSE = 0xC0008000
LL_RCC_MCO2SOURCE_PLLCLK = 0xC000C000
LL_RCC_MCO1_DIV_1 = 0x7000000
LL_RCC_MCO1_DIV_2 = 0x7000400
LL_RCC_MCO1_DIV_3 = 0x7000500
LL_RCC_MCO1_DIV_4 = 0x7000600
LL_RCC_MCO1_DIV_5 = 0x7000700
LL_RCC_MCO2_DIV_1 = 0x38000000
LL_RCC_MCO2_DIV_2 = 0x38002000
LL_RCC_MCO2_DIV_3 = 0x38002800
LL_RCC_MCO2_DIV_4 = 0x38003000
LL_RCC_MCO2_DIV_5 = 0x38003800
LL_RCC_RTC_NOCLOCK = 0x0
LL_RCC_RTC_HSE_DIV_2 = 0x20000
LL_RCC_RTC_HSE_DIV_3 = 0x30000
LL_RCC_RTC_HSE_DIV_4 = 0x40000
LL_RCC_RTC_HSE_DIV_5 = 0x50000
LL_RCC_RTC_HSE_DIV_6 = 0x60000
LL_RCC_RTC_HSE_DIV_7 = 0x70000
LL_RCC_RTC_HSE_DIV_8 = 0x80000
LL_RCC_RTC_HSE_DIV_9 = 0x90000
LL_RCC_RTC_HSE_DIV_10 = 0xA0000
LL_RCC_RTC_HSE_DIV_11 = 0xB0000
LL_RCC_RTC_HSE_DIV_12 = 0xC0000
LL_RCC_RTC_HSE_DIV_13 = 0xD0000
LL_RCC_RTC_HSE_DIV_14 = 0xE0000
LL_RCC_RTC_HSE_DIV_15 = 0xF0000
LL_RCC_RTC_HSE_DIV_16 = 0x100000
LL_RCC_RTC_HSE_DIV_17 = 0x110000
LL_RCC_RTC_HSE_DIV_18 = 0x120000
LL_RCC_RTC_HSE_DIV_19 = 0x130000
LL_RCC_RTC_HSE_DIV_20 = 0x140000
LL_RCC_RTC_HSE_DIV_21 = 0x150000
LL_RCC_RTC_HSE_DIV_22 = 0x160000
LL_RCC_RTC_HSE_DIV_23 = 0x170000
LL_RCC_RTC_HSE_DIV_24 = 0x180000
LL_RCC_RTC_HSE_DIV_25 = 0x190000
LL_RCC_RTC_HSE_DIV_26 = 0x1A0000
LL_RCC_RTC_HSE_DIV_27 = 0x1B0000
LL_RCC_RTC_HSE_DIV_28 = 0x1C0000
LL_RCC_RTC_HSE_DIV_29 = 0x1D0000
LL_RCC_RTC_HSE_DIV_30 = 0x1E0000
LL_RCC_RTC_HSE_DIV_31 = 0x1F0000
LL_RCC_PERIPH_FREQUENCY_NO = 0x0
LL_RCC_PERIPH_FREQUENCY_NA = 0xFFFFFFFF
LL_RCC_USART1_CLKSOURCE_PCLK2 = 0x30000
LL_RCC_USART1_CLKSOURCE_SYSCLK = 0x30001
LL_RCC_USART1_CLKSOURCE_HSI = 0x30002
LL_RCC_USART1_CLKSOURCE_LSE = 0x30003
LL_RCC_USART2_CLKSOURCE_PCLK1 = 0xC0000
LL_RCC_USART2_CLKSOURCE_SYSCLK = 0xC0004
LL_RCC_USART2_CLKSOURCE_HSI = 0xC0008
LL_RCC_USART2_CLKSOURCE_LSE = 0xC000C
LL_RCC_USART3_CLKSOURCE_PCLK1 = 0x300000
LL_RCC_USART3_CLKSOURCE_SYSCLK = 0x300010
LL_RCC_USART3_CLKSOURCE_HSI = 0x300020
LL_RCC_USART3_CLKSOURCE_LSE = 0x300030
LL_RCC_USART6_CLKSOURCE_PCLK2 = 0xC000000
LL_RCC_USART6_CLKSOURCE_SYSCLK = 0xC000400
LL_RCC_USART6_CLKSOURCE_HSI = 0xC000800
LL_RCC_USART6_CLKSOURCE_LSE = 0xC000C00
LL_RCC_UART4_CLKSOURCE_PCLK1 = 0xC00000
LL_RCC_UART4_CLKSOURCE_SYSCLK = 0xC00040
LL_RCC_UART4_CLKSOURCE_HSI = 0xC00080
LL_RCC_UART4_CLKSOURCE_LSE = 0xC000C0
LL_RCC_UART5_CLKSOURCE_PCLK1 = 0x3000000
LL_RCC_UART5_CLKSOURCE_SYSCLK = 0x3000100
LL_RCC_UART5_CLKSOURCE_HSI = 0x3000200
LL_RCC_UART5_CLKSOURCE_LSE = 0x3000300
LL_RCC_UART7_CLKSOURCE_PCLK1 = 0x30000000
LL_RCC_UART7_CLKSOURCE_SYSCLK = 0x30001000
LL_RCC_UART7_CLKSOURCE_HSI = 0x30002000
LL_RCC_UART7_CLKSOURCE_LSE = 0x30003000
LL_RCC_UART8_CLKSOURCE_PCLK1 = 0xC0000000
LL_RCC_UART8_CLKSOURCE_SYSCLK = 0xC0004000
LL_RCC_UART8_CLKSOURCE_HSI = 0xC0008000
LL_RCC_UART8_CLKSOURCE_LSE = 0xC000C000
LL_RCC_I2C1_CLKSOURCE_PCLK1 = 0x30000
LL_RCC_I2C1_CLKSOURCE_SYSCLK = 0x30001
LL_RCC_I2C1_CLKSOURCE_HSI = 0x30002
LL_RCC_I2C2_CLKSOURCE_PCLK1 = 0xC0000
LL_RCC_I2C2_CLKSOURCE_SYSCLK = 0xC0004
LL_RCC_I2C2_CLKSOURCE_HSI = 0xC0008
LL_RCC_I2C3_CLKSOURCE_PCLK1 = 0x300000
LL_RCC_I2C3_CLKSOURCE_SYSCLK = 0x300010
LL_RCC_I2C3_CLKSOURCE_HSI = 0x300020
LL_RCC_I2C4_CLKSOURCE_PCLK1 = 0xC00000
LL_RCC_I2C4_CLKSOURCE_SYSCLK = 0xC00040
LL_RCC_I2C4_CLKSOURCE_HSI = 0xC00080
LL_RCC_LPTIM1_CLKSOURCE_PCLK1 = 0x0
LL_RCC_LPTIM1_CLKSOURCE_LSI = 0x1000000
LL_RCC_LPTIM1_CLKSOURCE_HSI = 0x2000000
LL_RCC_LPTIM1_CLKSOURCE_LSE = 0x3000000
LL_RCC_SAI1_CLKSOURCE_PLLSAI = 0x300000
LL_RCC_SAI1_CLKSOURCE_PLLI2S = 0x300010
LL_RCC_SAI1_CLKSOURCE_PIN = 0x300020
# Skip LL_RCC_SAI1_CLKSOURCE_PLLSRC : no need parse
LL_RCC_SAI2_CLKSOURCE_PLLSAI = 0xC00000
LL_RCC_SAI2_CLKSOURCE_PLLI2S = 0xC00040
LL_RCC_SAI2_CLKSOURCE_PIN = 0xC00080
# Skip LL_RCC_SAI2_CLKSOURCE_PLLSRC : no need parse
LL_RCC_SDMMC1_CLKSOURCE_PLL48CLK = 0x10000000
LL_RCC_SDMMC1_CLKSOURCE_SYSCLK = 0x10001000
# Skip LL_RCC_SDMMC2_CLKSOURCE_PLL48CLK : no need parse
# Skip LL_RCC_SDMMC2_CLKSOURCE_SYSCLK : no need parse
LL_RCC_RNG_CLKSOURCE_PLL = 0x0
LL_RCC_RNG_CLKSOURCE_PLLSAI = 0x8000000
LL_RCC_USB_CLKSOURCE_PLL = 0x0
LL_RCC_USB_CLKSOURCE_PLLSAI = 0x8000000
# Skip LL_RCC_DSI_CLKSOURCE_PHY : no need parse
# Skip LL_RCC_DSI_CLKSOURCE_PLL : no need parse
LL_RCC_CEC_CLKSOURCE_LSE = 0x0
LL_RCC_CEC_CLKSOURCE_HSI_DIV488 = 0x4000000
LL_RCC_I2S1_CLKSOURCE_PLLI2S = 0x0
LL_RCC_I2S1_CLKSOURCE_PIN = 0x800000
LL_RCC_CK48M_CLKSOURCE_PLL = 0x0
LL_RCC_CK48M_CLKSOURCE_PLLSAI = 0x8000000
# Skip LL_RCC_DFSDM1_AUDIO_CLKSOURCE_SAI1 : no need parse
# Skip LL_RCC_DFSDM1_AUDIO_CLKSOURCE_SAI2 : no need parse
# Skip LL_RCC_DFSDM1_CLKSOURCE_PCLK2 : no need parse
# Skip LL_RCC_DFSDM1_CLKSOURCE_SYSCLK : no need parse
LL_RCC_USART1_CLKSOURCE = 0x3
LL_RCC_USART2_CLKSOURCE = 0xC
LL_RCC_USART3_CLKSOURCE = 0x30
LL_RCC_USART6_CLKSOURCE = 0xC00
LL_RCC_UART4_CLKSOURCE = 0xC0
LL_RCC_UART5_CLKSOURCE = 0x300
LL_RCC_UART7_CLKSOURCE = 0x3000
LL_RCC_UART8_CLKSOURCE = 0xC000
LL_RCC_I2C1_CLKSOURCE = 0x30000
LL_RCC_I2C2_CLKSOURCE = 0xC0000
LL_RCC_I2C3_CLKSOURCE = 0x300000
LL_RCC_I2C4_CLKSOURCE = 0xC00000
LL_RCC_LPTIM1_CLKSOURCE = 0x3000000
LL_RCC_SAI1_CLKSOURCE = 0x300000
LL_RCC_SAI2_CLKSOURCE = 0xC00000
LL_RCC_SDMMC1_CLKSOURCE = 0x10000000
# Skip LL_RCC_SDMMC2_CLKSOURCE : no need parse
LL_RCC_CK48M_CLKSOURCE = 0x8000000
LL_RCC_RNG_CLKSOURCE = 0x8000000
LL_RCC_USB_CLKSOURCE = 0x8000000
LL_RCC_CEC_CLKSOURCE = 0x4000000
LL_RCC_I2S1_CLKSOURCE = 0x800000
# Skip LL_RCC_DFSDM1_AUDIO_CLKSOURCE : no need parse
# Skip LL_RCC_DFSDM1_CLKSOURCE : no need parse
# Skip LL_RCC_DSI_CLKSOURCE : no need parse
LL_RCC_LTDC_CLKSOURCE = 0x30000
LL_RCC_SPDIFRX1_CLKSOURCE = 0x30000
LL_RCC_RTC_CLKSOURCE_NONE = 0x0
LL_RCC_RTC_CLKSOURCE_LSE = 0x100
LL_RCC_RTC_CLKSOURCE_LSI = 0x200
LL_RCC_RTC_CLKSOURCE_HSE = 0x300
LL_RCC_TIM_PRESCALER_TWICE = 0x0
LL_RCC_TIM_PRESCALER_FOUR_TIMES = 0x1000000
LL_RCC_PLLSOURCE_HSI = 0x0
LL_RCC_PLLSOURCE_HSE = 0x400000
LL_RCC_PLLM_DIV_2 = 0x2
LL_RCC_PLLM_DIV_3 = 0x3
LL_RCC_PLLM_DIV_4 = 0x4
LL_RCC_PLLM_DIV_5 = 0x5
LL_RCC_PLLM_DIV_6 = 0x6
LL_RCC_PLLM_DIV_7 = 0x7
LL_RCC_PLLM_DIV_8 = 0x8
LL_RCC_PLLM_DIV_9 = 0x9
LL_RCC_PLLM_DIV_10 = 0xA
LL_RCC_PLLM_DIV_11 = 0xB
LL_RCC_PLLM_DIV_12 = 0xC
LL_RCC_PLLM_DIV_13 = 0xD
LL_RCC_PLLM_DIV_14 = 0xE
LL_RCC_PLLM_DIV_15 = 0xF
LL_RCC_PLLM_DIV_16 = 0x10
LL_RCC_PLLM_DIV_17 = 0x11
LL_RCC_PLLM_DIV_18 = 0x12
LL_RCC_PLLM_DIV_19 = 0x13
LL_RCC_PLLM_DIV_20 = 0x14
LL_RCC_PLLM_DIV_21 = 0x15
LL_RCC_PLLM_DIV_22 = 0x16
LL_RCC_PLLM_DIV_23 = 0x17
LL_RCC_PLLM_DIV_24 = 0x18
LL_RCC_PLLM_DIV_25 = 0x19
LL_RCC_PLLM_DIV_26 = 0x1A
LL_RCC_PLLM_DIV_27 = 0x1B
LL_RCC_PLLM_DIV_28 = 0x1C
LL_RCC_PLLM_DIV_29 = 0x1D
LL_RCC_PLLM_DIV_30 = 0x1E
LL_RCC_PLLM_DIV_31 = 0x1F
LL_RCC_PLLM_DIV_32 = 0x20
LL_RCC_PLLM_DIV_33 = 0x21
LL_RCC_PLLM_DIV_34 = 0x22
LL_RCC_PLLM_DIV_35 = 0x23
LL_RCC_PLLM_DIV_36 = 0x24
LL_RCC_PLLM_DIV_37 = 0x25
LL_RCC_PLLM_DIV_38 = 0x26
LL_RCC_PLLM_DIV_39 = 0x27
LL_RCC_PLLM_DIV_40 = 0x28
LL_RCC_PLLM_DIV_41 = 0x29
LL_RCC_PLLM_DIV_42 = 0x2A
LL_RCC_PLLM_DIV_43 = 0x2B
LL_RCC_PLLM_DIV_44 = 0x2C
LL_RCC_PLLM_DIV_45 = 0x2D
LL_RCC_PLLM_DIV_46 = 0x2E
LL_RCC_PLLM_DIV_47 = 0x2F
LL_RCC_PLLM_DIV_48 = 0x30
LL_RCC_PLLM_DIV_49 = 0x31
LL_RCC_PLLM_DIV_50 = 0x32
LL_RCC_PLLM_DIV_51 = 0x33
LL_RCC_PLLM_DIV_52 = 0x34
LL_RCC_PLLM_DIV_53 = 0x35
LL_RCC_PLLM_DIV_54 = 0x36
LL_RCC_PLLM_DIV_55 = 0x37
LL_RCC_PLLM_DIV_56 = 0x38
LL_RCC_PLLM_DIV_57 = 0x39
LL_RCC_PLLM_DIV_58 = 0x3A
LL_RCC_PLLM_DIV_59 = 0x3B
LL_RCC_PLLM_DIV_60 = 0x3C
LL_RCC_PLLM_DIV_61 = 0x3D
LL_RCC_PLLM_DIV_62 = 0x3E
LL_RCC_PLLM_DIV_63 = 0x3F
# Skip LL_RCC_PLLR_DIV_2 : no need parse
# Skip LL_RCC_PLLR_DIV_3 : no need parse
# Skip LL_RCC_PLLR_DIV_4 : no need parse
# Skip LL_RCC_PLLR_DIV_5 : no need parse
# Skip LL_RCC_PLLR_DIV_6 : no need parse
# Skip LL_RCC_PLLR_DIV_7 : no need parse
LL_RCC_PLLP_DIV_2 = 0x0
LL_RCC_PLLP_DIV_4 = 0x10000
LL_RCC_PLLP_DIV_6 = 0x20000
LL_RCC_PLLP_DIV_8 = 0x30000
LL_RCC_PLLQ_DIV_2 = 0x2000000
LL_RCC_PLLQ_DIV_3 = 0x3000000
LL_RCC_PLLQ_DIV_4 = 0x4000000
LL_RCC_PLLQ_DIV_5 = 0x5000000
LL_RCC_PLLQ_DIV_6 = 0x6000000
LL_RCC_PLLQ_DIV_7 = 0x7000000
LL_RCC_PLLQ_DIV_8 = 0x8000000
LL_RCC_PLLQ_DIV_9 = 0x9000000
LL_RCC_PLLQ_DIV_10 = 0xA000000
LL_RCC_PLLQ_DIV_11 = 0xB000000
LL_RCC_PLLQ_DIV_12 = 0xC000000
LL_RCC_PLLQ_DIV_13 = 0xD000000
LL_RCC_PLLQ_DIV_14 = 0xE000000
LL_RCC_PLLQ_DIV_15 = 0xF000000
LL_RCC_SPREAD_SELECT_CENTER = 0x0
LL_RCC_SPREAD_SELECT_DOWN = 0x40000000
LL_RCC_PLLI2SQ_DIV_2 = 0x2000000
LL_RCC_PLLI2SQ_DIV_3 = 0x3000000
LL_RCC_PLLI2SQ_DIV_4 = 0x4000000
LL_RCC_PLLI2SQ_DIV_5 = 0x5000000
LL_RCC_PLLI2SQ_DIV_6 = 0x6000000
LL_RCC_PLLI2SQ_DIV_7 = 0x7000000
LL_RCC_PLLI2SQ_DIV_8 = 0x8000000
LL_RCC_PLLI2SQ_DIV_9 = 0x9000000
LL_RCC_PLLI2SQ_DIV_10 = 0xA000000
LL_RCC_PLLI2SQ_DIV_11 = 0xB000000
LL_RCC_PLLI2SQ_DIV_12 = 0xC000000
LL_RCC_PLLI2SQ_DIV_13 = 0xD000000
LL_RCC_PLLI2SQ_DIV_14 = 0xE000000
LL_RCC_PLLI2SQ_DIV_15 = 0xF000000
LL_RCC_PLLI2SDIVQ_DIV_1 = 0x0
LL_RCC_PLLI2SDIVQ_DIV_2 = 0x1
LL_RCC_PLLI2SDIVQ_DIV_3 = 0x2
LL_RCC_PLLI2SDIVQ_DIV_4 = 0x3
LL_RCC_PLLI2SDIVQ_DIV_5 = 0x4
LL_RCC_PLLI2SDIVQ_DIV_6 = 0x5
LL_RCC_PLLI2SDIVQ_DIV_7 = 0x6
LL_RCC_PLLI2SDIVQ_DIV_8 = 0x7
LL_RCC_PLLI2SDIVQ_DIV_9 = 0x8
LL_RCC_PLLI2SDIVQ_DIV_10 = 0x9
LL_RCC_PLLI2SDIVQ_DIV_11 = 0xA
LL_RCC_PLLI2SDIVQ_DIV_12 = 0xB
LL_RCC_PLLI2SDIVQ_DIV_13 = 0xC
LL_RCC_PLLI2SDIVQ_DIV_14 = 0xD
LL_RCC_PLLI2SDIVQ_DIV_15 = 0xE
LL_RCC_PLLI2SDIVQ_DIV_16 = 0xF
LL_RCC_PLLI2SDIVQ_DIV_17 = 0x10
LL_RCC_PLLI2SDIVQ_DIV_18 = 0x11
LL_RCC_PLLI2SDIVQ_DIV_19 = 0x12
LL_RCC_PLLI2SDIVQ_DIV_20 = 0x13
LL_RCC_PLLI2SDIVQ_DIV_21 = 0x14
LL_RCC_PLLI2SDIVQ_DIV_22 = 0x15
LL_RCC_PLLI2SDIVQ_DIV_23 = 0x16
LL_RCC_PLLI2SDIVQ_DIV_24 = 0x17
LL_RCC_PLLI2SDIVQ_DIV_25 = 0x18
LL_RCC_PLLI2SDIVQ_DIV_26 = 0x19
LL_RCC_PLLI2SDIVQ_DIV_27 = 0x1A
LL_RCC_PLLI2SDIVQ_DIV_28 = 0x1B
LL_RCC_PLLI2SDIVQ_DIV_29 = 0x1C
LL_RCC_PLLI2SDIVQ_DIV_30 = 0x1D
LL_RCC_PLLI2SDIVQ_DIV_31 = 0x1E
LL_RCC_PLLI2SDIVQ_DIV_32 = 0x1F
LL_RCC_PLLI2SR_DIV_2 = 0x20000000
LL_RCC_PLLI2SR_DIV_3 = 0x30000000
LL_RCC_PLLI2SR_DIV_4 = 0x40000000
LL_RCC_PLLI2SR_DIV_5 = 0x50000000
LL_RCC_PLLI2SR_DIV_6 = 0x60000000
LL_RCC_PLLI2SR_DIV_7 = 0x70000000
LL_RCC_PLLI2SP_DIV_2 = 0x0
LL_RCC_PLLI2SP_DIV_4 = 0x10000
LL_RCC_PLLI2SP_DIV_6 = 0x20000
LL_RCC_PLLI2SP_DIV_8 = 0x30000
LL_RCC_PLLSAIQ_DIV_2 = 0x2000000
LL_RCC_PLLSAIQ_DIV_3 = 0x3000000
LL_RCC_PLLSAIQ_DIV_4 = 0x4000000
LL_RCC_PLLSAIQ_DIV_5 = 0x5000000
LL_RCC_PLLSAIQ_DIV_6 = 0x6000000
LL_RCC_PLLSAIQ_DIV_7 = 0x7000000
LL_RCC_PLLSAIQ_DIV_8 = 0x8000000
LL_RCC_PLLSAIQ_DIV_9 = 0x9000000
LL_RCC_PLLSAIQ_DIV_10 = 0xA000000
LL_RCC_PLLSAIQ_DIV_11 = 0xB000000
LL_RCC_PLLSAIQ_DIV_12 = 0xC000000
LL_RCC_PLLSAIQ_DIV_13 = 0xD000000
LL_RCC_PLLSAIQ_DIV_14 = 0xE000000
LL_RCC_PLLSAIQ_DIV_15 = 0xF000000
LL_RCC_PLLSAIDIVQ_DIV_1 = 0x0
LL_RCC_PLLSAIDIVQ_DIV_2 = 0x100
LL_RCC_PLLSAIDIVQ_DIV_3 = 0x200
LL_RCC_PLLSAIDIVQ_DIV_4 = 0x300
LL_RCC_PLLSAIDIVQ_DIV_5 = 0x400
LL_RCC_PLLSAIDIVQ_DIV_6 = 0x500
LL_RCC_PLLSAIDIVQ_DIV_7 = 0x600
LL_RCC_PLLSAIDIVQ_DIV_8 = 0x700
LL_RCC_PLLSAIDIVQ_DIV_9 = 0x800
LL_RCC_PLLSAIDIVQ_DIV_10 = 0x900
LL_RCC_PLLSAIDIVQ_DIV_11 = 0xA00
LL_RCC_PLLSAIDIVQ_DIV_12 = 0xB00
LL_RCC_PLLSAIDIVQ_DIV_13 = 0xC00
LL_RCC_PLLSAIDIVQ_DIV_14 = 0xD00
LL_RCC_PLLSAIDIVQ_DIV_15 = 0xE00
LL_RCC_PLLSAIDIVQ_DIV_16 = 0xF00
LL_RCC_PLLSAIDIVQ_DIV_17 = 0x1000
LL_RCC_PLLSAIDIVQ_DIV_18 = 0x1100
LL_RCC_PLLSAIDIVQ_DIV_19 = 0x1200
LL_RCC_PLLSAIDIVQ_DIV_20 = 0x1300
LL_RCC_PLLSAIDIVQ_DIV_21 = 0x1400
LL_RCC_PLLSAIDIVQ_DIV_22 = 0x1500
LL_RCC_PLLSAIDIVQ_DIV_23 = 0x1600
LL_RCC_PLLSAIDIVQ_DIV_24 = 0x1700
LL_RCC_PLLSAIDIVQ_DIV_25 = 0x1800
LL_RCC_PLLSAIDIVQ_DIV_26 = 0x1900
LL_RCC_PLLSAIDIVQ_DIV_27 = 0x1A00
LL_RCC_PLLSAIDIVQ_DIV_28 = 0x1B00
LL_RCC_PLLSAIDIVQ_DIV_29 = 0x1C00
LL_RCC_PLLSAIDIVQ_DIV_30 = 0x1D00
LL_RCC_PLLSAIDIVQ_DIV_31 = 0x1E00
LL_RCC_PLLSAIDIVQ_DIV_32 = 0x1F00
LL_RCC_PLLSAIR_DIV_2 = 0x20000000
LL_RCC_PLLSAIR_DIV_3 = 0x30000000
LL_RCC_PLLSAIR_DIV_4 = 0x40000000
LL_RCC_PLLSAIR_DIV_5 = 0x50000000
LL_RCC_PLLSAIR_DIV_6 = 0x60000000
LL_RCC_PLLSAIR_DIV_7 = 0x70000000
LL_RCC_PLLSAIDIVR_DIV_2 = 0x0
LL_RCC_PLLSAIDIVR_DIV_4 = 0x10000
LL_RCC_PLLSAIDIVR_DIV_8 = 0x20000
LL_RCC_PLLSAIDIVR_DIV_16 = 0x30000
LL_RCC_PLLSAIP_DIV_2 = 0x0
LL_RCC_PLLSAIP_DIV_4 = 0x10000
LL_RCC_PLLSAIP_DIV_6 = 0x20000
LL_RCC_PLLSAIP_DIV_8 = 0x30000
# struct LL_RCC_ClocksTypeDef

class LL_RCC_ClocksTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('SYSCLK_Frequency',	ctypes.c_uint32),
		('HCLK_Frequency',	ctypes.c_uint32),
		('PCLK1_Frequency',	ctypes.c_uint32),
		('PCLK2_Frequency',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------

# file stm32f7xx_ll_spi.h : 

# empty define STM32F7xx_LL_SPI_H
LL_SPI_SR_RXNE = 0x1
LL_SPI_SR_TXE = 0x2
LL_SPI_SR_BSY = 0x80
LL_SPI_SR_CRCERR = 0x10
LL_SPI_SR_MODF = 0x20
LL_SPI_SR_OVR = 0x40
LL_SPI_SR_FRE = 0x100
LL_SPI_CR2_RXNEIE = 0x40
LL_SPI_CR2_TXEIE = 0x80
LL_SPI_CR2_ERRIE = 0x20
LL_SPI_MODE_MASTER = 0x104
LL_SPI_MODE_SLAVE = 0x0
LL_SPI_PROTOCOL_MOTOROLA = 0x0
LL_SPI_PROTOCOL_TI = 0x10
LL_SPI_PHASE_1EDGE = 0x0
LL_SPI_PHASE_2EDGE = 0x1
LL_SPI_POLARITY_LOW = 0x0
LL_SPI_POLARITY_HIGH = 0x2
LL_SPI_BAUDRATEPRESCALER_DIV2 = 0x0
LL_SPI_BAUDRATEPRESCALER_DIV4 = 0x8
LL_SPI_BAUDRATEPRESCALER_DIV8 = 0x10
LL_SPI_BAUDRATEPRESCALER_DIV16 = 0x18
LL_SPI_BAUDRATEPRESCALER_DIV32 = 0x20
LL_SPI_BAUDRATEPRESCALER_DIV64 = 0x28
LL_SPI_BAUDRATEPRESCALER_DIV128 = 0x30
LL_SPI_BAUDRATEPRESCALER_DIV256 = 0x38
LL_SPI_LSB_FIRST = 0x80
LL_SPI_MSB_FIRST = 0x0
LL_SPI_FULL_DUPLEX = 0x0
LL_SPI_SIMPLEX_RX = 0x400
LL_SPI_HALF_DUPLEX_RX = 0x8000
LL_SPI_HALF_DUPLEX_TX = 0xC000
LL_SPI_NSS_SOFT = 0x200
LL_SPI_NSS_HARD_INPUT = 0x0
LL_SPI_NSS_HARD_OUTPUT = 0x40000
LL_SPI_DATAWIDTH_4BIT = 0x300
LL_SPI_DATAWIDTH_5BIT = 0x400
LL_SPI_DATAWIDTH_6BIT = 0x500
LL_SPI_DATAWIDTH_7BIT = 0x600
LL_SPI_DATAWIDTH_8BIT = 0x700
LL_SPI_DATAWIDTH_9BIT = 0x800
LL_SPI_DATAWIDTH_10BIT = 0x900
LL_SPI_DATAWIDTH_11BIT = 0xA00
LL_SPI_DATAWIDTH_12BIT = 0xB00
LL_SPI_DATAWIDTH_13BIT = 0xC00
LL_SPI_DATAWIDTH_14BIT = 0xD00
LL_SPI_DATAWIDTH_15BIT = 0xE00
LL_SPI_DATAWIDTH_16BIT = 0xF00
LL_SPI_CRCCALCULATION_DISABLE = 0x0
LL_SPI_CRCCALCULATION_ENABLE = 0x2000
LL_SPI_CRC_8BIT = 0x0
LL_SPI_CRC_16BIT = 0x800
LL_SPI_RX_FIFO_TH_HALF = 0x0
LL_SPI_RX_FIFO_TH_QUARTER = 0x1000
LL_SPI_RX_FIFO_EMPTY = 0x0
LL_SPI_RX_FIFO_QUARTER_FULL = 0x200
LL_SPI_RX_FIFO_HALF_FULL = 0x400
LL_SPI_RX_FIFO_FULL = 0x600
LL_SPI_TX_FIFO_EMPTY = 0x0
LL_SPI_TX_FIFO_QUARTER_FULL = 0x800
LL_SPI_TX_FIFO_HALF_FULL = 0x1000
LL_SPI_TX_FIFO_FULL = 0x1800
LL_SPI_DMA_PARITY_EVEN = 0x0
LL_SPI_DMA_PARITY_ODD = 0x1
LL_I2S_SR_RXNE = 0x1
LL_I2S_SR_TXE = 0x2
LL_I2S_SR_BSY = 0x80
LL_I2S_SR_UDR = 0x8
LL_I2S_SR_OVR = 0x40
LL_I2S_SR_FRE = 0x100
LL_I2S_CR2_RXNEIE = 0x40
LL_I2S_CR2_TXEIE = 0x80
LL_I2S_CR2_ERRIE = 0x20
LL_I2S_DATAFORMAT_16B = 0x0
LL_I2S_DATAFORMAT_16B_EXTENDED = 0x1
LL_I2S_DATAFORMAT_24B = 0x3
LL_I2S_DATAFORMAT_32B = 0x5
LL_I2S_POLARITY_LOW = 0x0
LL_I2S_POLARITY_HIGH = 0x8
LL_I2S_STANDARD_PHILIPS = 0x0
LL_I2S_STANDARD_MSB = 0x10
LL_I2S_STANDARD_LSB = 0x20
LL_I2S_STANDARD_PCM_SHORT = 0x30
LL_I2S_STANDARD_PCM_LONG = 0xB0
LL_I2S_MODE_SLAVE_TX = 0x0
LL_I2S_MODE_SLAVE_RX = 0x100
LL_I2S_MODE_MASTER_TX = 0x200
LL_I2S_MODE_MASTER_RX = 0x300
LL_I2S_PRESCALER_PARITY_EVEN = 0x0
LL_I2S_PRESCALER_PARITY_ODD = 0x1
LL_I2S_MCLK_OUTPUT_DISABLE = 0x0
LL_I2S_MCLK_OUTPUT_ENABLE = 0x200
LL_I2S_AUDIOFREQ_192K = 0x2EE00
LL_I2S_AUDIOFREQ_96K = 0x17700
LL_I2S_AUDIOFREQ_48K = 0xBB80
LL_I2S_AUDIOFREQ_44K = 0xAC44
LL_I2S_AUDIOFREQ_32K = 0x7D00
LL_I2S_AUDIOFREQ_22K = 0x5622
LL_I2S_AUDIOFREQ_16K = 0x3E80
LL_I2S_AUDIOFREQ_11K = 0x2B11
LL_I2S_AUDIOFREQ_8K = 0x1F40
LL_I2S_AUDIOFREQ_DEFAULT = 0x2
# struct LL_SPI_InitTypeDef

class LL_SPI_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('TransferDirection',	ctypes.c_uint32),
		('Mode',	ctypes.c_uint32),
		('DataWidth',	ctypes.c_uint32),
		('ClockPolarity',	ctypes.c_uint32),
		('ClockPhase',	ctypes.c_uint32),
		('NSS',	ctypes.c_uint32),
		('BaudRate',	ctypes.c_uint32),
		('BitOrder',	ctypes.c_uint32),
		('CRCCalculation',	ctypes.c_uint32),
		('CRCPoly',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_I2S_InitTypeDef

class LL_I2S_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('Mode',	ctypes.c_uint32),
		('Standard',	ctypes.c_uint32),
		('DataFormat',	ctypes.c_uint32),
		('MCLKOutput',	ctypes.c_uint32),
		('AudioFreq',	ctypes.c_uint32),
		('ClockPolarity',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------

# file stm32f7xx_ll_crc.h : 

# empty define STM32F7xx_LL_CRC_H
LL_CRC_POLYLENGTH_32B = 0x0
LL_CRC_POLYLENGTH_16B = 0x8
LL_CRC_POLYLENGTH_8B = 0x10
LL_CRC_POLYLENGTH_7B = 0x18
LL_CRC_INDATA_REVERSE_NONE = 0x0
LL_CRC_INDATA_REVERSE_BYTE = 0x20
LL_CRC_INDATA_REVERSE_HALFWORD = 0x40
LL_CRC_INDATA_REVERSE_WORD = 0x60
LL_CRC_OUTDATA_REVERSE_NONE = 0x0
LL_CRC_OUTDATA_REVERSE_BIT = 0x80
LL_CRC_DEFAULT_CRC32_POLY = 0x4C11DB7
LL_CRC_DEFAULT_CRC_INITVALUE = 0xFFFFFFFF
# ----------------------------------------

# file stm32f7xx_ll_tim.h : 

# empty define __STM32F7xx_LL_TIM_H
# Skip TIM_POSITION_BRK_SOURCE : no need parse
# Skip TIMx_AF1_BKINP : no need parse
TIMx_OR_RMP_SHIFT = 0x10
TIMx_OR_RMP_MASK = 0xFFFF
TIM2_OR_RMP_MASK = 0xC000000
TIM5_OR_RMP_MASK = 0xC00000
TIM11_OR_RMP_MASK = 0x30000
DT_DELAY_1 = 0x7F
DT_DELAY_2 = 0x3F
DT_DELAY_3 = 0x1F
DT_DELAY_4 = 0x1F
DT_RANGE_1 = 0x0
DT_RANGE_2 = 0x80
DT_RANGE_3 = 0xC0
DT_RANGE_4 = 0xE0
LL_TIM_SR_UIF = 0x1
LL_TIM_SR_CC1IF = 0x2
LL_TIM_SR_CC2IF = 0x4
LL_TIM_SR_CC3IF = 0x8
LL_TIM_SR_CC4IF = 0x10
LL_TIM_SR_CC5IF = 0x10000
LL_TIM_SR_CC6IF = 0x20000
LL_TIM_SR_COMIF = 0x20
LL_TIM_SR_TIF = 0x40
LL_TIM_SR_BIF = 0x80
LL_TIM_SR_B2IF = 0x100
LL_TIM_SR_CC1OF = 0x200
LL_TIM_SR_CC2OF = 0x400
LL_TIM_SR_CC3OF = 0x800
LL_TIM_SR_CC4OF = 0x1000
LL_TIM_SR_SBIF = 0x2000
LL_TIM_BREAK_DISABLE = 0x0
LL_TIM_BREAK_ENABLE = 0x1000
LL_TIM_BREAK2_DISABLE = 0x0
LL_TIM_BREAK2_ENABLE = 0x1000000
LL_TIM_AUTOMATICOUTPUT_DISABLE = 0x0
LL_TIM_AUTOMATICOUTPUT_ENABLE = 0x4000
LL_TIM_DIER_UIE = 0x1
LL_TIM_DIER_CC1IE = 0x2
LL_TIM_DIER_CC2IE = 0x4
LL_TIM_DIER_CC3IE = 0x8
LL_TIM_DIER_CC4IE = 0x10
LL_TIM_DIER_COMIE = 0x20
LL_TIM_DIER_TIE = 0x40
LL_TIM_DIER_BIE = 0x80
LL_TIM_UPDATESOURCE_REGULAR = 0x0
LL_TIM_UPDATESOURCE_COUNTER = 0x4
LL_TIM_ONEPULSEMODE_SINGLE = 0x8
LL_TIM_ONEPULSEMODE_REPETITIVE = 0x0
LL_TIM_COUNTERMODE_UP = 0x0
LL_TIM_COUNTERMODE_DOWN = 0x10
LL_TIM_COUNTERMODE_CENTER_UP = 0x20
LL_TIM_COUNTERMODE_CENTER_DOWN = 0x40
LL_TIM_COUNTERMODE_CENTER_UP_DOWN = 0x60
LL_TIM_CLOCKDIVISION_DIV1 = 0x0
LL_TIM_CLOCKDIVISION_DIV2 = 0x100
LL_TIM_CLOCKDIVISION_DIV4 = 0x200
LL_TIM_COUNTERDIRECTION_UP = 0x0
LL_TIM_COUNTERDIRECTION_DOWN = 0x10
LL_TIM_CCUPDATESOURCE_COMG_ONLY = 0x0
LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI = 0x4
LL_TIM_CCDMAREQUEST_CC = 0x0
LL_TIM_CCDMAREQUEST_UPDATE = 0x8
LL_TIM_LOCKLEVEL_OFF = 0x0
LL_TIM_LOCKLEVEL_1 = 0x100
LL_TIM_LOCKLEVEL_2 = 0x200
LL_TIM_LOCKLEVEL_3 = 0x300
LL_TIM_CHANNEL_CH1 = 0x1
LL_TIM_CHANNEL_CH1N = 0x4
LL_TIM_CHANNEL_CH2 = 0x10
LL_TIM_CHANNEL_CH2N = 0x40
LL_TIM_CHANNEL_CH3 = 0x100
LL_TIM_CHANNEL_CH3N = 0x400
LL_TIM_CHANNEL_CH4 = 0x1000
LL_TIM_CHANNEL_CH5 = 0x10000
LL_TIM_CHANNEL_CH6 = 0x100000
LL_TIM_OCSTATE_DISABLE = 0x0
LL_TIM_OCSTATE_ENABLE = 0x1
LL_TIM_OCMODE_FROZEN = 0x0
LL_TIM_OCMODE_ACTIVE = 0x10
LL_TIM_OCMODE_INACTIVE = 0x20
LL_TIM_OCMODE_TOGGLE = 0x30
LL_TIM_OCMODE_FORCED_INACTIVE = 0x40
LL_TIM_OCMODE_FORCED_ACTIVE = 0x50
LL_TIM_OCMODE_PWM1 = 0x60
LL_TIM_OCMODE_PWM2 = 0x70
LL_TIM_OCMODE_RETRIG_OPM1 = 0x10000
LL_TIM_OCMODE_RETRIG_OPM2 = 0x10010
LL_TIM_OCMODE_COMBINED_PWM1 = 0x10040
LL_TIM_OCMODE_COMBINED_PWM2 = 0x10050
LL_TIM_OCMODE_ASSYMETRIC_PWM1 = 0x10060
LL_TIM_OCMODE_ASSYMETRIC_PWM2 = 0x10070
LL_TIM_OCPOLARITY_HIGH = 0x0
LL_TIM_OCPOLARITY_LOW = 0x2
LL_TIM_OCIDLESTATE_LOW = 0x0
LL_TIM_OCIDLESTATE_HIGH = 0x100
LL_TIM_GROUPCH5_NONE = 0x0
LL_TIM_GROUPCH5_OC1REFC = 0x20000000
LL_TIM_GROUPCH5_OC2REFC = 0x40000000
LL_TIM_GROUPCH5_OC3REFC = 0x80000000
LL_TIM_ACTIVEINPUT_DIRECTTI = 0x10000
LL_TIM_ACTIVEINPUT_INDIRECTTI = 0x20000
LL_TIM_ACTIVEINPUT_TRC = 0x30000
LL_TIM_ICPSC_DIV1 = 0x0
LL_TIM_ICPSC_DIV2 = 0x40000
LL_TIM_ICPSC_DIV4 = 0x80000
LL_TIM_ICPSC_DIV8 = 0xC0000
LL_TIM_IC_FILTER_FDIV1 = 0x0
LL_TIM_IC_FILTER_FDIV1_N2 = 0x100000
LL_TIM_IC_FILTER_FDIV1_N4 = 0x200000
LL_TIM_IC_FILTER_FDIV1_N8 = 0x300000
LL_TIM_IC_FILTER_FDIV2_N6 = 0x400000
LL_TIM_IC_FILTER_FDIV2_N8 = 0x500000
LL_TIM_IC_FILTER_FDIV4_N6 = 0x600000
LL_TIM_IC_FILTER_FDIV4_N8 = 0x700000
LL_TIM_IC_FILTER_FDIV8_N6 = 0x800000
LL_TIM_IC_FILTER_FDIV8_N8 = 0x900000
LL_TIM_IC_FILTER_FDIV16_N5 = 0xA00000
LL_TIM_IC_FILTER_FDIV16_N6 = 0xB00000
LL_TIM_IC_FILTER_FDIV16_N8 = 0xC00000
LL_TIM_IC_FILTER_FDIV32_N5 = 0xD00000
LL_TIM_IC_FILTER_FDIV32_N6 = 0xE00000
LL_TIM_IC_FILTER_FDIV32_N8 = 0xF00000
LL_TIM_IC_POLARITY_RISING = 0x0
LL_TIM_IC_POLARITY_FALLING = 0x2
LL_TIM_IC_POLARITY_BOTHEDGE = 0xA
LL_TIM_CLOCKSOURCE_INTERNAL = 0x0
LL_TIM_CLOCKSOURCE_EXT_MODE1 = 0x7
LL_TIM_CLOCKSOURCE_EXT_MODE2 = 0x4000
LL_TIM_ENCODERMODE_X2_TI1 = 0x1
LL_TIM_ENCODERMODE_X2_TI2 = 0x2
LL_TIM_ENCODERMODE_X4_TI12 = 0x3
LL_TIM_TRGO_RESET = 0x0
LL_TIM_TRGO_ENABLE = 0x10
LL_TIM_TRGO_UPDATE = 0x20
LL_TIM_TRGO_CC1IF = 0x30
LL_TIM_TRGO_OC1REF = 0x40
LL_TIM_TRGO_OC2REF = 0x50
LL_TIM_TRGO_OC3REF = 0x60
LL_TIM_TRGO_OC4REF = 0x70
LL_TIM_TRGO2_RESET = 0x0
LL_TIM_TRGO2_ENABLE = 0x100000
LL_TIM_TRGO2_UPDATE = 0x200000
LL_TIM_TRGO2_CC1F = 0x300000
LL_TIM_TRGO2_OC1 = 0x400000
LL_TIM_TRGO2_OC2 = 0x500000
LL_TIM_TRGO2_OC3 = 0x600000
LL_TIM_TRGO2_OC4 = 0x700000
LL_TIM_TRGO2_OC5 = 0x800000
LL_TIM_TRGO2_OC6 = 0x900000
LL_TIM_TRGO2_OC4_RISINGFALLING = 0xA00000
LL_TIM_TRGO2_OC6_RISINGFALLING = 0xB00000
LL_TIM_TRGO2_OC4_RISING_OC6_RISING = 0xC00000
LL_TIM_TRGO2_OC4_RISING_OC6_FALLING = 0xD00000
LL_TIM_TRGO2_OC5_RISING_OC6_RISING = 0xE00000
LL_TIM_TRGO2_OC5_RISING_OC6_FALLING = 0xF00000
LL_TIM_SLAVEMODE_DISABLED = 0x0
LL_TIM_SLAVEMODE_RESET = 0x4
LL_TIM_SLAVEMODE_GATED = 0x5
LL_TIM_SLAVEMODE_TRIGGER = 0x6
LL_TIM_SLAVEMODE_COMBINED_RESETTRIGGER = 0x10000
LL_TIM_TS_ITR0 = 0x0
LL_TIM_TS_ITR1 = 0x10
LL_TIM_TS_ITR2 = 0x20
LL_TIM_TS_ITR3 = 0x30
LL_TIM_TS_TI1F_ED = 0x40
LL_TIM_TS_TI1FP1 = 0x50
LL_TIM_TS_TI2FP2 = 0x60
LL_TIM_TS_ETRF = 0x70
LL_TIM_ETR_POLARITY_NONINVERTED = 0x0
LL_TIM_ETR_POLARITY_INVERTED = 0x8000
LL_TIM_ETR_PRESCALER_DIV1 = 0x0
LL_TIM_ETR_PRESCALER_DIV2 = 0x1000
LL_TIM_ETR_PRESCALER_DIV4 = 0x2000
LL_TIM_ETR_PRESCALER_DIV8 = 0x3000
LL_TIM_ETR_FILTER_FDIV1 = 0x0
LL_TIM_ETR_FILTER_FDIV1_N2 = 0x100
LL_TIM_ETR_FILTER_FDIV1_N4 = 0x200
LL_TIM_ETR_FILTER_FDIV1_N8 = 0x300
LL_TIM_ETR_FILTER_FDIV2_N6 = 0x400
LL_TIM_ETR_FILTER_FDIV2_N8 = 0x500
LL_TIM_ETR_FILTER_FDIV4_N6 = 0x600
LL_TIM_ETR_FILTER_FDIV4_N8 = 0x700
LL_TIM_ETR_FILTER_FDIV8_N6 = 0x800
LL_TIM_ETR_FILTER_FDIV8_N8 = 0x900
LL_TIM_ETR_FILTER_FDIV16_N5 = 0xA00
LL_TIM_ETR_FILTER_FDIV16_N6 = 0xB00
LL_TIM_ETR_FILTER_FDIV16_N8 = 0xC00
LL_TIM_ETR_FILTER_FDIV32_N5 = 0xD00
LL_TIM_ETR_FILTER_FDIV32_N6 = 0xE00
LL_TIM_ETR_FILTER_FDIV32_N8 = 0xF00
LL_TIM_BREAK_POLARITY_LOW = 0x0
LL_TIM_BREAK_POLARITY_HIGH = 0x2000
LL_TIM_BREAK_FILTER_FDIV1 = 0x0
LL_TIM_BREAK_FILTER_FDIV1_N2 = 0x10000
LL_TIM_BREAK_FILTER_FDIV1_N4 = 0x20000
LL_TIM_BREAK_FILTER_FDIV1_N8 = 0x30000
LL_TIM_BREAK_FILTER_FDIV2_N6 = 0x40000
LL_TIM_BREAK_FILTER_FDIV2_N8 = 0x50000
LL_TIM_BREAK_FILTER_FDIV4_N6 = 0x60000
LL_TIM_BREAK_FILTER_FDIV4_N8 = 0x70000
LL_TIM_BREAK_FILTER_FDIV8_N6 = 0x80000
LL_TIM_BREAK_FILTER_FDIV8_N8 = 0x90000
LL_TIM_BREAK_FILTER_FDIV16_N5 = 0xA0000
LL_TIM_BREAK_FILTER_FDIV16_N6 = 0xB0000
LL_TIM_BREAK_FILTER_FDIV16_N8 = 0xC0000
LL_TIM_BREAK_FILTER_FDIV32_N5 = 0xD0000
LL_TIM_BREAK_FILTER_FDIV32_N6 = 0xE0000
LL_TIM_BREAK_FILTER_FDIV32_N8 = 0xF0000
LL_TIM_BREAK2_POLARITY_LOW = 0x0
LL_TIM_BREAK2_POLARITY_HIGH = 0x2000000
LL_TIM_BREAK2_FILTER_FDIV1 = 0x0
LL_TIM_BREAK2_FILTER_FDIV1_N2 = 0x100000
LL_TIM_BREAK2_FILTER_FDIV1_N4 = 0x200000
LL_TIM_BREAK2_FILTER_FDIV1_N8 = 0x300000
LL_TIM_BREAK2_FILTER_FDIV2_N6 = 0x400000
LL_TIM_BREAK2_FILTER_FDIV2_N8 = 0x500000
LL_TIM_BREAK2_FILTER_FDIV4_N6 = 0x600000
LL_TIM_BREAK2_FILTER_FDIV4_N8 = 0x700000
LL_TIM_BREAK2_FILTER_FDIV8_N6 = 0x800000
LL_TIM_BREAK2_FILTER_FDIV8_N8 = 0x900000
LL_TIM_BREAK2_FILTER_FDIV16_N5 = 0xA00000
LL_TIM_BREAK2_FILTER_FDIV16_N6 = 0xB00000
LL_TIM_BREAK2_FILTER_FDIV16_N8 = 0xC00000
LL_TIM_BREAK2_FILTER_FDIV32_N5 = 0xD00000
LL_TIM_BREAK2_FILTER_FDIV32_N6 = 0xE00000
LL_TIM_BREAK2_FILTER_FDIV32_N8 = 0xF00000
LL_TIM_OSSI_DISABLE = 0x0
LL_TIM_OSSI_ENABLE = 0x400
LL_TIM_OSSR_DISABLE = 0x0
LL_TIM_OSSR_ENABLE = 0x800
# Skip LL_TIM_BREAK_INPUT_BKIN : no need parse
# Skip LL_TIM_BREAK_INPUT_BKIN2 : no need parse
# Skip LL_TIM_BKIN_SOURCE_BKIN : no need parse
# Skip LL_TIM_BKIN_SOURCE_DF1BK : no need parse
# Skip LL_TIM_BKIN_POLARITY_LOW : no need parse
# Skip LL_TIM_BKIN_POLARITY_HIGH : no need parse
LL_TIM_DMABURST_BASEADDR_CR1 = 0x0
LL_TIM_DMABURST_BASEADDR_CR2 = 0x1
LL_TIM_DMABURST_BASEADDR_SMCR = 0x2
LL_TIM_DMABURST_BASEADDR_DIER = 0x3
LL_TIM_DMABURST_BASEADDR_SR = 0x4
LL_TIM_DMABURST_BASEADDR_EGR = 0x5
LL_TIM_DMABURST_BASEADDR_CCMR1 = 0x6
LL_TIM_DMABURST_BASEADDR_CCMR2 = 0x7
LL_TIM_DMABURST_BASEADDR_CCER = 0x8
LL_TIM_DMABURST_BASEADDR_CNT = 0x9
LL_TIM_DMABURST_BASEADDR_PSC = 0xA
LL_TIM_DMABURST_BASEADDR_ARR = 0xB
LL_TIM_DMABURST_BASEADDR_RCR = 0xC
LL_TIM_DMABURST_BASEADDR_CCR1 = 0xD
LL_TIM_DMABURST_BASEADDR_CCR2 = 0xE
LL_TIM_DMABURST_BASEADDR_CCR3 = 0xF
LL_TIM_DMABURST_BASEADDR_CCR4 = 0x10
LL_TIM_DMABURST_BASEADDR_BDTR = 0x11
LL_TIM_DMABURST_BASEADDR_OR = 0x14
LL_TIM_DMABURST_BASEADDR_CCMR3 = 0x15
LL_TIM_DMABURST_BASEADDR_CCR5 = 0x16
LL_TIM_DMABURST_BASEADDR_CCR6 = 0x17
# Skip LL_TIM_DMABURST_BASEADDR_AF1 : no need parse
# Skip LL_TIM_DMABURST_BASEADDR_AF2 : no need parse
LL_TIM_DMABURST_LENGTH_1TRANSFER = 0x0
LL_TIM_DMABURST_LENGTH_2TRANSFERS = 0x100
LL_TIM_DMABURST_LENGTH_3TRANSFERS = 0x200
LL_TIM_DMABURST_LENGTH_4TRANSFERS = 0x300
LL_TIM_DMABURST_LENGTH_5TRANSFERS = 0x400
LL_TIM_DMABURST_LENGTH_6TRANSFERS = 0x500
LL_TIM_DMABURST_LENGTH_7TRANSFERS = 0x600
LL_TIM_DMABURST_LENGTH_8TRANSFERS = 0x700
LL_TIM_DMABURST_LENGTH_9TRANSFERS = 0x800
LL_TIM_DMABURST_LENGTH_10TRANSFERS = 0x900
LL_TIM_DMABURST_LENGTH_11TRANSFERS = 0xA00
LL_TIM_DMABURST_LENGTH_12TRANSFERS = 0xB00
LL_TIM_DMABURST_LENGTH_13TRANSFERS = 0xC00
LL_TIM_DMABURST_LENGTH_14TRANSFERS = 0xD00
LL_TIM_DMABURST_LENGTH_15TRANSFERS = 0xE00
LL_TIM_DMABURST_LENGTH_16TRANSFERS = 0xF00
LL_TIM_DMABURST_LENGTH_17TRANSFERS = 0x1000
LL_TIM_DMABURST_LENGTH_18TRANSFERS = 0x1100
LL_TIM_TIM2_ITR1_RMP_TIM8_TRGO = 0xC000000
LL_TIM_TIM2_ITR1_RMP_ETH_PTP = 0xC000400
LL_TIM_TIM2_ITR1_RMP_OTG_FS_SOF = 0xC000800
LL_TIM_TIM2_ITR1_RMP_OTG_HS_SOF = 0xC000C00
LL_TIM_TIM5_TI4_RMP_GPIO = 0xC00000
LL_TIM_TIM5_TI4_RMP_LSI = 0xC00040
LL_TIM_TIM5_TI4_RMP_LSE = 0xC00080
LL_TIM_TIM5_TI4_RMP_RTC = 0xC000C0
LL_TIM_TIM11_TI1_RMP_GPIO = 0x30000
LL_TIM_TIM11_TI1_RMP_SPDIFRX = 0x30001
LL_TIM_TIM11_TI1_RMP_HSE = 0x30002
LL_TIM_TIM11_TI1_RMP_MCO1 = 0x30003
# struct LL_TIM_InitTypeDef

class LL_TIM_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('Prescaler',	ctypes.c_uint16),
		('CounterMode',	ctypes.c_uint32),
		('Autoreload',	ctypes.c_uint32),
		('ClockDivision',	ctypes.c_uint32),
		('RepetitionCounter',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_TIM_OC_InitTypeDef

class LL_TIM_OC_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('OCMode',	ctypes.c_uint32),
		('OCState',	ctypes.c_uint32),
		('OCNState',	ctypes.c_uint32),
		('CompareValue',	ctypes.c_uint32),
		('OCPolarity',	ctypes.c_uint32),
		('OCNPolarity',	ctypes.c_uint32),
		('OCIdleState',	ctypes.c_uint32),
		('OCNIdleState',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_TIM_IC_InitTypeDef

class LL_TIM_IC_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('ICPolarity',	ctypes.c_uint32),
		('ICActiveInput',	ctypes.c_uint32),
		('ICPrescaler',	ctypes.c_uint32),
		('ICFilter',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_TIM_ENCODER_InitTypeDef

class LL_TIM_ENCODER_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('EncoderMode',	ctypes.c_uint32),
		('IC1Polarity',	ctypes.c_uint32),
		('IC1ActiveInput',	ctypes.c_uint32),
		('IC1Prescaler',	ctypes.c_uint32),
		('IC1Filter',	ctypes.c_uint32),
		('IC2Polarity',	ctypes.c_uint32),
		('IC2ActiveInput',	ctypes.c_uint32),
		('IC2Prescaler',	ctypes.c_uint32),
		('IC2Filter',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_TIM_HALLSENSOR_InitTypeDef

class LL_TIM_HALLSENSOR_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('IC1Polarity',	ctypes.c_uint32),
		('IC1Prescaler',	ctypes.c_uint32),
		('IC1Filter',	ctypes.c_uint32),
		('CommutationDelay',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_TIM_BDTR_InitTypeDef

class LL_TIM_BDTR_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('OSSRState',	ctypes.c_uint32),
		('OSSIState',	ctypes.c_uint32),
		('LockLevel',	ctypes.c_uint32),
		('DeadTime',	ctypes.c_uint8),
		('BreakState',	ctypes.c_uint16),
		('BreakPolarity',	ctypes.c_uint32),
		('BreakFilter',	ctypes.c_uint32),
		('Break2State',	ctypes.c_uint32),
		('Break2Polarity',	ctypes.c_uint32),
		('Break2Filter',	ctypes.c_uint32),
		('AutomaticOutput',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------

# file stm32f7xx_ll_usart.h : 

# empty define STM32F7xx_LL_USART_H
LL_USART_ICR_PECF = 0x1
LL_USART_ICR_FECF = 0x2
LL_USART_ICR_NCF = 0x4
LL_USART_ICR_ORECF = 0x8
LL_USART_ICR_IDLECF = 0x10
LL_USART_ICR_TCCF = 0x40
# Skip LL_USART_ICR_TCBGTCF : no need parse
LL_USART_ICR_LBDCF = 0x100
LL_USART_ICR_CTSCF = 0x200
LL_USART_ICR_RTOCF = 0x800
LL_USART_ICR_EOBCF = 0x1000
LL_USART_ICR_CMCF = 0x20000
# Skip LL_USART_ICR_WUCF : no need parse
LL_USART_ISR_PE = 0x1
LL_USART_ISR_FE = 0x2
LL_USART_ISR_NE = 0x4
LL_USART_ISR_ORE = 0x8
LL_USART_ISR_IDLE = 0x10
LL_USART_ISR_RXNE = 0x20
LL_USART_ISR_TC = 0x40
LL_USART_ISR_TXE = 0x80
LL_USART_ISR_LBDF = 0x100
LL_USART_ISR_CTSIF = 0x200
LL_USART_ISR_CTS = 0x400
LL_USART_ISR_RTOF = 0x800
LL_USART_ISR_EOBF = 0x1000
LL_USART_ISR_ABRE = 0x4000
LL_USART_ISR_ABRF = 0x8000
LL_USART_ISR_BUSY = 0x10000
LL_USART_ISR_CMF = 0x20000
LL_USART_ISR_SBKF = 0x40000
LL_USART_ISR_RWU = 0x80000
# Skip LL_USART_ISR_WUF : no need parse
LL_USART_ISR_TEACK = 0x200000
# Skip LL_USART_ISR_REACK : no need parse
# Skip LL_USART_ISR_TCBGT : no need parse
LL_USART_CR1_IDLEIE = 0x10
LL_USART_CR1_RXNEIE = 0x20
LL_USART_CR1_TCIE = 0x40
LL_USART_CR1_TXEIE = 0x80
LL_USART_CR1_PEIE = 0x100
LL_USART_CR1_CMIE = 0x4000
LL_USART_CR1_RTOIE = 0x4000000
LL_USART_CR1_EOBIE = 0x8000000
LL_USART_CR2_LBDIE = 0x40
LL_USART_CR3_EIE = 0x1
LL_USART_CR3_CTSIE = 0x400
# Skip LL_USART_CR3_WUFIE : no need parse
# Skip LL_USART_CR3_TCBGTIE : no need parse
LL_USART_DIRECTION_NONE = 0x0
LL_USART_DIRECTION_RX = 0x4
LL_USART_DIRECTION_TX = 0x8
LL_USART_DIRECTION_TX_RX = 0xC
LL_USART_PARITY_NONE = 0x0
LL_USART_PARITY_EVEN = 0x400
LL_USART_PARITY_ODD = 0x600
LL_USART_WAKEUP_IDLELINE = 0x0
LL_USART_WAKEUP_ADDRESSMARK = 0x800
LL_USART_DATAWIDTH_7B = 0x10000000
LL_USART_DATAWIDTH_8B = 0x0
LL_USART_DATAWIDTH_9B = 0x1000
LL_USART_OVERSAMPLING_16 = 0x0
LL_USART_OVERSAMPLING_8 = 0x8000
LL_USART_CLOCK_DISABLE = 0x0
LL_USART_CLOCK_ENABLE = 0x800
LL_USART_LASTCLKPULSE_NO_OUTPUT = 0x0
LL_USART_LASTCLKPULSE_OUTPUT = 0x100
LL_USART_PHASE_1EDGE = 0x0
LL_USART_PHASE_2EDGE = 0x200
LL_USART_POLARITY_LOW = 0x0
LL_USART_POLARITY_HIGH = 0x400
LL_USART_STOPBITS_0_5 = 0x1000
LL_USART_STOPBITS_1 = 0x0
LL_USART_STOPBITS_1_5 = 0x3000
LL_USART_STOPBITS_2 = 0x2000
LL_USART_TXRX_STANDARD = 0x0
LL_USART_TXRX_SWAPPED = 0x8000
LL_USART_RXPIN_LEVEL_STANDARD = 0x0
LL_USART_RXPIN_LEVEL_INVERTED = 0x10000
LL_USART_TXPIN_LEVEL_STANDARD = 0x0
LL_USART_TXPIN_LEVEL_INVERTED = 0x20000
LL_USART_BINARY_LOGIC_POSITIVE = 0x0
LL_USART_BINARY_LOGIC_NEGATIVE = 0x40000
LL_USART_BITORDER_LSBFIRST = 0x0
LL_USART_BITORDER_MSBFIRST = 0x80000
LL_USART_AUTOBAUD_DETECT_ON_STARTBIT = 0x0
LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE = 0x200000
LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME = 0x400000
LL_USART_AUTOBAUD_DETECT_ON_55_FRAME = 0x600000
LL_USART_ADDRESS_DETECT_4B = 0x0
LL_USART_ADDRESS_DETECT_7B = 0x10
LL_USART_HWCONTROL_NONE = 0x0
LL_USART_HWCONTROL_RTS = 0x100
LL_USART_HWCONTROL_CTS = 0x200
LL_USART_HWCONTROL_RTS_CTS = 0x300
# Skip LL_USART_WAKEUP_ON_ADDRESS : no need parse
# Skip LL_USART_WAKEUP_ON_STARTBIT : no need parse
# Skip LL_USART_WAKEUP_ON_RXNE : no need parse
LL_USART_IRDA_POWER_NORMAL = 0x0
LL_USART_IRDA_POWER_LOW = 0x4
LL_USART_LINBREAK_DETECT_10B = 0x0
LL_USART_LINBREAK_DETECT_11B = 0x20
LL_USART_DE_POLARITY_HIGH = 0x0
LL_USART_DE_POLARITY_LOW = 0x8000
LL_USART_DMA_REG_DATA_TRANSMIT = 0x0
LL_USART_DMA_REG_DATA_RECEIVE = 0x1
# struct LL_USART_InitTypeDef

class LL_USART_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('BaudRate',	ctypes.c_uint32),
		('DataWidth',	ctypes.c_uint32),
		('StopBits',	ctypes.c_uint32),
		('Parity',	ctypes.c_uint32),
		('TransferDirection',	ctypes.c_uint32),
		('HardwareFlowControl',	ctypes.c_uint32),
		('OverSampling',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_USART_ClockInitTypeDef

class LL_USART_ClockInitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('ClockOutput',	ctypes.c_uint32),
		('ClockPolarity',	ctypes.c_uint32),
		('ClockPhase',	ctypes.c_uint32),
		('LastBitClockPulse',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------

# file stm32f7xx_ll_system.h : 

# empty define __STM32F7xx_LL_SYSTEM_H
LL_SYSCFG_REMAP_BOOT0 = 0x0
LL_SYSCFG_REMAP_BOOT1 = 0x1
# Skip LL_SYSCFG_BANKMODE_BANK1 : no need parse
# Skip LL_SYSCFG_BANKMODE_BANK2 : no need parse
LL_SYSCFG_PMC_ETHMII = 0x0
LL_SYSCFG_PMC_ETHRMII = 0x800000
# Skip LL_SYSCFG_I2C_FASTMODEPLUS_I2C1 : no need parse
# Skip LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 : no need parse
# Skip LL_SYSCFG_I2C_FASTMODEPLUS_I2C3 : no need parse
# Skip LL_SYSCFG_I2C_FASTMODEPLUS_I2C4 : no need parse
# Skip LL_SYSCFG_I2C_FASTMODEPLUS_PB6 : no need parse
# Skip LL_SYSCFG_I2C_FASTMODEPLUS_PB7 : no need parse
# Skip LL_SYSCFG_I2C_FASTMODEPLUS_PB8 : no need parse
# Skip LL_SYSCFG_I2C_FASTMODEPLUS_PB9 : no need parse
LL_SYSCFG_EXTI_PORTA = 0x0
LL_SYSCFG_EXTI_PORTB = 0x1
LL_SYSCFG_EXTI_PORTC = 0x2
LL_SYSCFG_EXTI_PORTD = 0x3
LL_SYSCFG_EXTI_PORTE = 0x4
LL_SYSCFG_EXTI_PORTF = 0x5
LL_SYSCFG_EXTI_PORTG = 0x6
LL_SYSCFG_EXTI_PORTH = 0x7
LL_SYSCFG_EXTI_PORTI = 0x8
LL_SYSCFG_EXTI_PORTJ = 0x9
LL_SYSCFG_EXTI_PORTK = 0xA
LL_SYSCFG_EXTI_LINE0 = 0xF0000
LL_SYSCFG_EXTI_LINE1 = 0xF00000
LL_SYSCFG_EXTI_LINE2 = 0xF000000
LL_SYSCFG_EXTI_LINE3 = 0xF0000000
LL_SYSCFG_EXTI_LINE4 = 0xF0001
LL_SYSCFG_EXTI_LINE5 = 0xF00001
LL_SYSCFG_EXTI_LINE6 = 0xF000001
LL_SYSCFG_EXTI_LINE7 = 0xF0000001
LL_SYSCFG_EXTI_LINE8 = 0xF0002
LL_SYSCFG_EXTI_LINE9 = 0xF00002
LL_SYSCFG_EXTI_LINE10 = 0xF000002
LL_SYSCFG_EXTI_LINE11 = 0xF0000002
LL_SYSCFG_EXTI_LINE12 = 0xF0003
LL_SYSCFG_EXTI_LINE13 = 0xF00003
LL_SYSCFG_EXTI_LINE14 = 0xF000003
LL_SYSCFG_EXTI_LINE15 = 0xF0000003
# Skip LL_SYSCFG_TIMBREAK_LOCKUP : no need parse
# Skip LL_SYSCFG_TIMBREAK_PVD : no need parse
LL_SYSCFG_DISABLE_CMP_PD = 0x0
LL_SYSCFG_ENABLE_CMP_PD = 0x1
LL_DBGMCU_TRACE_NONE = 0x0
LL_DBGMCU_TRACE_ASYNCH = 0x20
LL_DBGMCU_TRACE_SYNCH_SIZE1 = 0x60
LL_DBGMCU_TRACE_SYNCH_SIZE2 = 0xA0
LL_DBGMCU_TRACE_SYNCH_SIZE4 = 0xE0
LL_DBGMCU_APB1_GRP1_TIM2_STOP = 0x1
LL_DBGMCU_APB1_GRP1_TIM3_STOP = 0x2
LL_DBGMCU_APB1_GRP1_TIM4_STOP = 0x4
LL_DBGMCU_APB1_GRP1_TIM5_STOP = 0x8
LL_DBGMCU_APB1_GRP1_TIM6_STOP = 0x10
LL_DBGMCU_APB1_GRP1_TIM7_STOP = 0x20
LL_DBGMCU_APB1_GRP1_TIM12_STOP = 0x40
LL_DBGMCU_APB1_GRP1_TIM13_STOP = 0x80
LL_DBGMCU_APB1_GRP1_TIM14_STOP = 0x100
LL_DBGMCU_APB1_GRP1_LPTIM1_STOP = 0x200
LL_DBGMCU_APB1_GRP1_RTC_STOP = 0x400
LL_DBGMCU_APB1_GRP1_WWDG_STOP = 0x800
LL_DBGMCU_APB1_GRP1_IWDG_STOP = 0x1000
LL_DBGMCU_APB1_GRP1_I2C1_STOP = 0x200000
LL_DBGMCU_APB1_GRP1_I2C2_STOP = 0x400000
LL_DBGMCU_APB1_GRP1_I2C3_STOP = 0x800000
# Skip LL_DBGMCU_APB1_GRP1_I2C4_STOP : no need parse
LL_DBGMCU_APB1_GRP1_CAN1_STOP = 0x2000000
LL_DBGMCU_APB1_GRP1_CAN2_STOP = 0x4000000
# Skip LL_DBGMCU_APB1_GRP1_CAN3_STOP : no need parse
LL_DBGMCU_APB2_GRP1_TIM1_STOP = 0x1
LL_DBGMCU_APB2_GRP1_TIM8_STOP = 0x2
LL_DBGMCU_APB2_GRP1_TIM9_STOP = 0x10000
LL_DBGMCU_APB2_GRP1_TIM10_STOP = 0x20000
LL_DBGMCU_APB2_GRP1_TIM11_STOP = 0x40000
LL_FLASH_LATENCY_0 = 0x0
LL_FLASH_LATENCY_1 = 0x1
LL_FLASH_LATENCY_2 = 0x2
LL_FLASH_LATENCY_3 = 0x3
LL_FLASH_LATENCY_4 = 0x4
LL_FLASH_LATENCY_5 = 0x5
LL_FLASH_LATENCY_6 = 0x6
LL_FLASH_LATENCY_7 = 0x7
LL_FLASH_LATENCY_8 = 0x8
LL_FLASH_LATENCY_9 = 0x9
LL_FLASH_LATENCY_10 = 0xA
LL_FLASH_LATENCY_11 = 0xB
LL_FLASH_LATENCY_12 = 0xC
LL_FLASH_LATENCY_13 = 0xD
LL_FLASH_LATENCY_14 = 0xE
LL_FLASH_LATENCY_15 = 0xF
# ----------------------------------------

# file stm32f7xx_ll_iwdg.h : 

# empty define STM32F7xx_LL_IWDG_H
LL_IWDG_KEY_RELOAD = 0xAAAA
LL_IWDG_KEY_ENABLE = 0xCCCC
LL_IWDG_KEY_WR_ACCESS_ENABLE = 0x5555
LL_IWDG_KEY_WR_ACCESS_DISABLE = 0x0
LL_IWDG_SR_PVU = 0x1
LL_IWDG_SR_RVU = 0x2
LL_IWDG_SR_WVU = 0x4
LL_IWDG_PRESCALER_4 = 0x0
LL_IWDG_PRESCALER_8 = 0x1
LL_IWDG_PRESCALER_16 = 0x2
LL_IWDG_PRESCALER_32 = 0x3
LL_IWDG_PRESCALER_64 = 0x4
LL_IWDG_PRESCALER_128 = 0x5
LL_IWDG_PRESCALER_256 = 0x6
# ----------------------------------------

# file stm32f7xx_ll_rtc.h : 

# empty define __STM32F7xx_LL_RTC_H
RTC_INIT_MASK = 0xFFFFFFFF
RTC_RSF_MASK = 0xFFFFFF5F
RTC_WRITE_PROTECTION_DISABLE = 0xFF
RTC_WRITE_PROTECTION_ENABLE_1 = 0xCA
RTC_WRITE_PROTECTION_ENABLE_2 = 0x53
RTC_OFFSET_WEEKDAY = 0x18
RTC_OFFSET_DAY = 0x10
RTC_OFFSET_MONTH = 0x8
RTC_OFFSET_HOUR = 0x10
RTC_OFFSET_MINUTE = 0x8
LL_RTC_FORMAT_BIN = 0x0
LL_RTC_FORMAT_BCD = 0x1
LL_RTC_ALMA_DATEWEEKDAYSEL_DATE = 0x0
LL_RTC_ALMA_DATEWEEKDAYSEL_WEEKDAY = 0x40000000
LL_RTC_ALMB_DATEWEEKDAYSEL_DATE = 0x0
LL_RTC_ALMB_DATEWEEKDAYSEL_WEEKDAY = 0x40000000
LL_RTC_ISR_ITSF = 0x20000
LL_RTC_ISR_RECALPF = 0x10000
LL_RTC_ISR_TAMP3F = 0x8000
LL_RTC_ISR_TAMP2F = 0x4000
LL_RTC_ISR_TAMP1F = 0x2000
LL_RTC_ISR_TSOVF = 0x1000
LL_RTC_ISR_TSF = 0x800
LL_RTC_ISR_WUTF = 0x400
LL_RTC_ISR_ALRBF = 0x200
LL_RTC_ISR_ALRAF = 0x100
LL_RTC_ISR_INITF = 0x40
LL_RTC_ISR_RSF = 0x20
LL_RTC_ISR_INITS = 0x10
LL_RTC_ISR_SHPF = 0x8
LL_RTC_ISR_WUTWF = 0x4
LL_RTC_ISR_ALRBWF = 0x2
LL_RTC_ISR_ALRAWF = 0x1
LL_RTC_CR_TSIE = 0x8000
LL_RTC_CR_WUTIE = 0x4000
LL_RTC_CR_ALRBIE = 0x2000
LL_RTC_CR_ALRAIE = 0x1000
LL_RTC_TAMPCR_TAMP3IE = 0x400000
LL_RTC_TAMPCR_TAMP2IE = 0x80000
LL_RTC_TAMPCR_TAMP1IE = 0x10000
LL_RTC_TAMPCR_TAMPIE = 0x4
LL_RTC_WEEKDAY_MONDAY = 0x1
LL_RTC_WEEKDAY_TUESDAY = 0x2
LL_RTC_WEEKDAY_WEDNESDAY = 0x3
LL_RTC_WEEKDAY_THURSDAY = 0x4
LL_RTC_WEEKDAY_FRIDAY = 0x5
LL_RTC_WEEKDAY_SATURDAY = 0x6
LL_RTC_WEEKDAY_SUNDAY = 0x7
LL_RTC_MONTH_JANUARY = 0x1
LL_RTC_MONTH_FEBRUARY = 0x2
LL_RTC_MONTH_MARCH = 0x3
LL_RTC_MONTH_APRIL = 0x4
LL_RTC_MONTH_MAY = 0x5
LL_RTC_MONTH_JUNE = 0x6
LL_RTC_MONTH_JULY = 0x7
LL_RTC_MONTH_AUGUST = 0x8
LL_RTC_MONTH_SEPTEMBER = 0x9
LL_RTC_MONTH_OCTOBER = 0x10
LL_RTC_MONTH_NOVEMBER = 0x11
LL_RTC_MONTH_DECEMBER = 0x12
LL_RTC_HOURFORMAT_24HOUR = 0x0
LL_RTC_HOURFORMAT_AMPM = 0x40
LL_RTC_ALARMOUT_DISABLE = 0x0
LL_RTC_ALARMOUT_ALMA = 0x200000
LL_RTC_ALARMOUT_ALMB = 0x400000
LL_RTC_ALARMOUT_WAKEUP = 0x600000
LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN = 0x0
LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL = 0x8
LL_RTC_OUTPUTPOLARITY_PIN_HIGH = 0x0
LL_RTC_OUTPUTPOLARITY_PIN_LOW = 0x100000
LL_RTC_TIME_FORMAT_AM_OR_24 = 0x0
LL_RTC_TIME_FORMAT_PM = 0x400000
LL_RTC_SHIFT_SECOND_DELAY = 0x0
LL_RTC_SHIFT_SECOND_ADVANCE = 0x80000000
LL_RTC_ALMA_MASK_NONE = 0x0
LL_RTC_ALMA_MASK_DATEWEEKDAY = 0x80000000
LL_RTC_ALMA_MASK_HOURS = 0x800000
LL_RTC_ALMA_MASK_MINUTES = 0x8000
LL_RTC_ALMA_MASK_SECONDS = 0x80
LL_RTC_ALMA_MASK_ALL = 0x80808080
LL_RTC_ALMA_TIME_FORMAT_AM = 0x0
LL_RTC_ALMA_TIME_FORMAT_PM = 0x400000
LL_RTC_ALMB_MASK_NONE = 0x0
LL_RTC_ALMB_MASK_DATEWEEKDAY = 0x80000000
LL_RTC_ALMB_MASK_HOURS = 0x800000
LL_RTC_ALMB_MASK_MINUTES = 0x8000
LL_RTC_ALMB_MASK_SECONDS = 0x80
LL_RTC_ALMB_MASK_ALL = 0x80808080
LL_RTC_ALMB_TIME_FORMAT_AM = 0x0
LL_RTC_ALMB_TIME_FORMAT_PM = 0x400000
LL_RTC_TIMESTAMP_EDGE_RISING = 0x0
LL_RTC_TIMESTAMP_EDGE_FALLING = 0x8
LL_RTC_TS_TIME_FORMAT_AM = 0x0
LL_RTC_TS_TIME_FORMAT_PM = 0x400000
LL_RTC_TAMPER_1 = 0x1
LL_RTC_TAMPER_2 = 0x8
LL_RTC_TAMPER_3 = 0x20
LL_RTC_TAMPER_MASK_TAMPER1 = 0x40000
LL_RTC_TAMPER_MASK_TAMPER2 = 0x200000
LL_RTC_TAMPER_MASK_TAMPER3 = 0x1000000
LL_RTC_TAMPER_NOERASE_TAMPER1 = 0x20000
LL_RTC_TAMPER_NOERASE_TAMPER2 = 0x100000
LL_RTC_TAMPER_NOERASE_TAMPER3 = 0x800000
LL_RTC_TAMPER_DURATION_1RTCCLK = 0x0
LL_RTC_TAMPER_DURATION_2RTCCLK = 0x2000
LL_RTC_TAMPER_DURATION_4RTCCLK = 0x4000
LL_RTC_TAMPER_DURATION_8RTCCLK = 0x6000
LL_RTC_TAMPER_FILTER_DISABLE = 0x0
LL_RTC_TAMPER_FILTER_2SAMPLE = 0x800
LL_RTC_TAMPER_FILTER_4SAMPLE = 0x1000
LL_RTC_TAMPER_FILTER_8SAMPLE = 0x1800
LL_RTC_TAMPER_SAMPLFREQDIV_32768 = 0x0
LL_RTC_TAMPER_SAMPLFREQDIV_16384 = 0x100
LL_RTC_TAMPER_SAMPLFREQDIV_8192 = 0x200
LL_RTC_TAMPER_SAMPLFREQDIV_4096 = 0x300
LL_RTC_TAMPER_SAMPLFREQDIV_2048 = 0x400
LL_RTC_TAMPER_SAMPLFREQDIV_1024 = 0x500
LL_RTC_TAMPER_SAMPLFREQDIV_512 = 0x600
LL_RTC_TAMPER_SAMPLFREQDIV_256 = 0x700
LL_RTC_TAMPER_ACTIVELEVEL_TAMP1 = 0x2
LL_RTC_TAMPER_ACTIVELEVEL_TAMP2 = 0x10
LL_RTC_TAMPER_ACTIVELEVEL_TAMP3 = 0x40
LL_RTC_WAKEUPCLOCK_DIV_16 = 0x0
LL_RTC_WAKEUPCLOCK_DIV_8 = 0x1
LL_RTC_WAKEUPCLOCK_DIV_4 = 0x2
LL_RTC_WAKEUPCLOCK_DIV_2 = 0x3
LL_RTC_WAKEUPCLOCK_CKSPRE = 0x4
LL_RTC_WAKEUPCLOCK_CKSPRE_WUT = 0x6
LL_RTC_BKP_DR0 = 0x0
LL_RTC_BKP_DR1 = 0x1
LL_RTC_BKP_DR2 = 0x2
LL_RTC_BKP_DR3 = 0x3
LL_RTC_BKP_DR4 = 0x4
LL_RTC_BKP_DR5 = 0x5
LL_RTC_BKP_DR6 = 0x6
LL_RTC_BKP_DR7 = 0x7
LL_RTC_BKP_DR8 = 0x8
LL_RTC_BKP_DR9 = 0x9
LL_RTC_BKP_DR10 = 0xA
LL_RTC_BKP_DR11 = 0xB
LL_RTC_BKP_DR12 = 0xC
LL_RTC_BKP_DR13 = 0xD
LL_RTC_BKP_DR14 = 0xE
LL_RTC_BKP_DR15 = 0xF
LL_RTC_BKP_DR16 = 0x10
LL_RTC_BKP_DR17 = 0x11
LL_RTC_BKP_DR18 = 0x12
LL_RTC_BKP_DR19 = 0x13
LL_RTC_BKP_DR20 = 0x14
LL_RTC_BKP_DR21 = 0x15
LL_RTC_BKP_DR22 = 0x16
LL_RTC_BKP_DR23 = 0x17
LL_RTC_BKP_DR24 = 0x18
LL_RTC_BKP_DR25 = 0x19
LL_RTC_BKP_DR26 = 0x1A
LL_RTC_BKP_DR27 = 0x1B
LL_RTC_BKP_DR28 = 0x1C
LL_RTC_BKP_DR29 = 0x1D
LL_RTC_BKP_DR30 = 0x1E
LL_RTC_BKP_DR31 = 0x1F
LL_RTC_CALIB_OUTPUT_NONE = 0x0
LL_RTC_CALIB_OUTPUT_1HZ = 0x880000
LL_RTC_CALIB_OUTPUT_512HZ = 0x800000
LL_RTC_CALIB_INSERTPULSE_NONE = 0x0
LL_RTC_CALIB_INSERTPULSE_SET = 0x8000
LL_RTC_CALIB_PERIOD_32SEC = 0x0
LL_RTC_CALIB_PERIOD_16SEC = 0x2000
LL_RTC_CALIB_PERIOD_8SEC = 0x4000
# struct LL_RTC_InitTypeDef

class LL_RTC_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('HourFormat',	ctypes.c_uint32),
		('AsynchPrescaler',	ctypes.c_uint32),
		('SynchPrescaler',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_RTC_TimeTypeDef

class LL_RTC_TimeTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('TimeFormat',	ctypes.c_uint32),
		('Hours',	ctypes.c_uint8),
		('Minutes',	ctypes.c_uint8),
		('Seconds',	ctypes.c_uint8),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_RTC_DateTypeDef

class LL_RTC_DateTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('WeekDay',	ctypes.c_uint8),
		('Month',	ctypes.c_uint8),
		('Day',	ctypes.c_uint8),
		('Year',	ctypes.c_uint8),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_RTC_AlarmTypeDef
# struct LL_RTC_AlarmTypeDef : field is class : AlarmTime
# ----------------------------------------

# file stm32f7xx_ll_i2c.h : 

# empty define STM32F7xx_LL_I2C_H
LL_I2C_ICR_ADDRCF = 0x8
LL_I2C_ICR_NACKCF = 0x10
LL_I2C_ICR_STOPCF = 0x20
LL_I2C_ICR_BERRCF = 0x100
LL_I2C_ICR_ARLOCF = 0x200
LL_I2C_ICR_OVRCF = 0x400
LL_I2C_ICR_PECCF = 0x800
LL_I2C_ICR_TIMOUTCF = 0x1000
LL_I2C_ICR_ALERTCF = 0x2000
LL_I2C_ISR_TXE = 0x1
LL_I2C_ISR_TXIS = 0x2
LL_I2C_ISR_RXNE = 0x4
LL_I2C_ISR_ADDR = 0x8
LL_I2C_ISR_NACKF = 0x10
LL_I2C_ISR_STOPF = 0x20
LL_I2C_ISR_TC = 0x40
LL_I2C_ISR_TCR = 0x80
LL_I2C_ISR_BERR = 0x100
LL_I2C_ISR_ARLO = 0x200
LL_I2C_ISR_OVR = 0x400
LL_I2C_ISR_PECERR = 0x800
LL_I2C_ISR_TIMEOUT = 0x1000
LL_I2C_ISR_ALERT = 0x2000
LL_I2C_ISR_BUSY = 0x8000
LL_I2C_CR1_TXIE = 0x2
LL_I2C_CR1_RXIE = 0x4
LL_I2C_CR1_ADDRIE = 0x8
LL_I2C_CR1_NACKIE = 0x10
LL_I2C_CR1_STOPIE = 0x20
LL_I2C_CR1_TCIE = 0x40
LL_I2C_CR1_ERRIE = 0x80
LL_I2C_MODE_I2C = 0x0
LL_I2C_MODE_SMBUS_HOST = 0x100000
LL_I2C_MODE_SMBUS_DEVICE = 0x0
LL_I2C_MODE_SMBUS_DEVICE_ARP = 0x200000
LL_I2C_ANALOGFILTER_ENABLE = 0x0
LL_I2C_ANALOGFILTER_DISABLE = 0x1000
LL_I2C_ADDRESSING_MODE_7BIT = 0x0
LL_I2C_ADDRESSING_MODE_10BIT = 0x800
LL_I2C_OWNADDRESS1_7BIT = 0x0
LL_I2C_OWNADDRESS1_10BIT = 0x400
LL_I2C_OWNADDRESS2_NOMASK = 0x0
LL_I2C_OWNADDRESS2_MASK01 = 0x100
LL_I2C_OWNADDRESS2_MASK02 = 0x200
LL_I2C_OWNADDRESS2_MASK03 = 0x300
LL_I2C_OWNADDRESS2_MASK04 = 0x400
LL_I2C_OWNADDRESS2_MASK05 = 0x500
LL_I2C_OWNADDRESS2_MASK06 = 0x600
LL_I2C_OWNADDRESS2_MASK07 = 0x700
LL_I2C_ACK = 0x0
LL_I2C_NACK = 0x8000
LL_I2C_ADDRSLAVE_7BIT = 0x0
LL_I2C_ADDRSLAVE_10BIT = 0x800
LL_I2C_REQUEST_WRITE = 0x0
LL_I2C_REQUEST_READ = 0x400
LL_I2C_MODE_RELOAD = 0x1000000
LL_I2C_MODE_AUTOEND = 0x2000000
LL_I2C_MODE_SOFTEND = 0x0
LL_I2C_MODE_SMBUS_RELOAD = 0x1000000
LL_I2C_MODE_SMBUS_AUTOEND_NO_PEC = 0x2000000
LL_I2C_MODE_SMBUS_SOFTEND_NO_PEC = 0x0
LL_I2C_MODE_SMBUS_AUTOEND_WITH_PEC = 0x6000000
LL_I2C_MODE_SMBUS_SOFTEND_WITH_PEC = 0x4000000
LL_I2C_GENERATE_NOSTARTSTOP = 0x0
LL_I2C_GENERATE_STOP = 0x80004000
LL_I2C_GENERATE_START_READ = 0x80002400
LL_I2C_GENERATE_START_WRITE = 0x80002000
LL_I2C_GENERATE_RESTART_7BIT_READ = 0x80002400
LL_I2C_GENERATE_RESTART_7BIT_WRITE = 0x80002000
LL_I2C_GENERATE_RESTART_10BIT_READ = 0x80003400
LL_I2C_GENERATE_RESTART_10BIT_WRITE = 0x80002000
LL_I2C_DIRECTION_WRITE = 0x0
LL_I2C_DIRECTION_READ = 0x10000
LL_I2C_DMA_REG_DATA_TRANSMIT = 0x0
LL_I2C_DMA_REG_DATA_RECEIVE = 0x1
LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW = 0x0
LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH = 0x1000
LL_I2C_SMBUS_TIMEOUTA = 0x8000
LL_I2C_SMBUS_TIMEOUTB = 0x80000000
LL_I2C_SMBUS_ALL_TIMEOUT = 0x80008000
# struct LL_I2C_InitTypeDef

class LL_I2C_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('PeripheralMode',	ctypes.c_uint32),
		('Timing',	ctypes.c_uint32),
		('AnalogFilter',	ctypes.c_uint32),
		('DigitalFilter',	ctypes.c_uint32),
		('OwnAddress1',	ctypes.c_uint32),
		('TypeAcknowledge',	ctypes.c_uint32),
		('OwnAddrSize',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------

# file stm32f7xx_ll_lptim.h : 

# empty define STM32F7xx_LL_LPTIM_H
LL_LPTIM_ISR_CMPM = 0x1
LL_LPTIM_ISR_ARRM = 0x2
LL_LPTIM_ISR_EXTTRIG = 0x4
LL_LPTIM_ISR_CMPOK = 0x8
LL_LPTIM_ISR_ARROK = 0x10
LL_LPTIM_ISR_UP = 0x20
LL_LPTIM_ISR_DOWN = 0x40
LL_LPTIM_IER_CMPMIE = 0x1
LL_LPTIM_IER_ARRMIE = 0x2
LL_LPTIM_IER_EXTTRIGIE = 0x4
LL_LPTIM_IER_CMPOKIE = 0x8
LL_LPTIM_IER_ARROKIE = 0x10
LL_LPTIM_IER_UPIE = 0x20
LL_LPTIM_IER_DOWNIE = 0x40
LL_LPTIM_OPERATING_MODE_CONTINUOUS = 0x4
LL_LPTIM_OPERATING_MODE_ONESHOT = 0x2
LL_LPTIM_UPDATE_MODE_IMMEDIATE = 0x0
LL_LPTIM_UPDATE_MODE_ENDOFPERIOD = 0x400000
LL_LPTIM_COUNTER_MODE_INTERNAL = 0x0
LL_LPTIM_COUNTER_MODE_EXTERNAL = 0x800000
LL_LPTIM_OUTPUT_WAVEFORM_PWM = 0x0
LL_LPTIM_OUTPUT_WAVEFORM_SETONCE = 0x100000
LL_LPTIM_OUTPUT_POLARITY_REGULAR = 0x0
LL_LPTIM_OUTPUT_POLARITY_INVERSE = 0x200000
LL_LPTIM_PRESCALER_DIV1 = 0x0
LL_LPTIM_PRESCALER_DIV2 = 0x200
LL_LPTIM_PRESCALER_DIV4 = 0x400
LL_LPTIM_PRESCALER_DIV8 = 0x600
LL_LPTIM_PRESCALER_DIV16 = 0x800
LL_LPTIM_PRESCALER_DIV32 = 0xA00
LL_LPTIM_PRESCALER_DIV64 = 0xC00
LL_LPTIM_PRESCALER_DIV128 = 0xE00
LL_LPTIM_TRIG_SOURCE_GPIO = 0x0
LL_LPTIM_TRIG_SOURCE_RTCALARMA = 0x2000
LL_LPTIM_TRIG_SOURCE_RTCALARMB = 0x4000
LL_LPTIM_TRIG_SOURCE_RTCTAMP1 = 0x6000
LL_LPTIM_TRIG_SOURCE_RTCTAMP2 = 0x8000
LL_LPTIM_TRIG_SOURCE_RTCTAMP3 = 0xA000
LL_LPTIM_TRIG_SOURCE_COMP1 = 0xC000
LL_LPTIM_TRIG_SOURCE_COMP2 = 0xE000
LL_LPTIM_TRIG_FILTER_NONE = 0x0
LL_LPTIM_TRIG_FILTER_2 = 0x40
LL_LPTIM_TRIG_FILTER_4 = 0x80
LL_LPTIM_TRIG_FILTER_8 = 0xC0
LL_LPTIM_TRIG_POLARITY_RISING = 0x20000
LL_LPTIM_TRIG_POLARITY_FALLING = 0x40000
LL_LPTIM_TRIG_POLARITY_RISING_FALLING = 0x60000
LL_LPTIM_CLK_SOURCE_INTERNAL = 0x0
LL_LPTIM_CLK_SOURCE_EXTERNAL = 0x1
LL_LPTIM_CLK_FILTER_NONE = 0x0
LL_LPTIM_CLK_FILTER_2 = 0x8
LL_LPTIM_CLK_FILTER_4 = 0x10
LL_LPTIM_CLK_FILTER_8 = 0x18
LL_LPTIM_CLK_POLARITY_RISING = 0x0
LL_LPTIM_CLK_POLARITY_FALLING = 0x2
LL_LPTIM_CLK_POLARITY_RISING_FALLING = 0x4
LL_LPTIM_ENCODER_MODE_RISING = 0x0
LL_LPTIM_ENCODER_MODE_FALLING = 0x2
LL_LPTIM_ENCODER_MODE_RISING_FALLING = 0x4
# struct LL_LPTIM_InitTypeDef

class LL_LPTIM_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('ClockSource',	ctypes.c_uint32),
		('Prescaler',	ctypes.c_uint32),
		('Waveform',	ctypes.c_uint32),
		('Polarity',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------

# file stm32f7xx_ll_dac.h : 

# empty define __STM32F7xx_LL_DAC_H
DAC_CR_CH1_BITOFFSET = 0x0
DAC_CR_CH2_BITOFFSET = 0x10
DAC_CR_CHX_BITOFFSET_MASK = 0x10
DAC_SWTR_CH1 = 0x1
DAC_SWTR_CH2 = 0x2
DAC_SWTR_CHX_MASK = 0x3
DAC_REG_DHR12R1_REGOFFSET = 0x0
DAC_REG_DHR12L1_REGOFFSET = 0x100000
DAC_REG_DHR8R1_REGOFFSET = 0x2000000
DAC_REG_DHR12R2_REGOFFSET = 0x30000
DAC_REG_DHR12L2_REGOFFSET = 0x400000
DAC_REG_DHR8R2_REGOFFSET = 0x5000000
DAC_REG_DHR12RX_REGOFFSET_MASK = 0xF0000
DAC_REG_DHR12LX_REGOFFSET_MASK = 0xF00000
DAC_REG_DHR8RX_REGOFFSET_MASK = 0xF000000
DAC_REG_DHRX_REGOFFSET_MASK = 0xFFF0000
DAC_REG_DOR1_REGOFFSET = 0x0
DAC_REG_DOR2_REGOFFSET = 0x10000000
DAC_REG_DORX_REGOFFSET_MASK = 0x10000000
DAC_DHR12RD_DACC2DHR_BITOFFSET_POS = 0x10
DAC_DHR12LD_DACC2DHR_BITOFFSET_POS = 0x14
DAC_DHR8RD_DACC2DHR_BITOFFSET_POS = 0x8
DAC_DIGITAL_SCALE_12BITS = 0xFFF
LL_DAC_FLAG_DMAUDR1 = 0x2000
LL_DAC_FLAG_DMAUDR2 = 0x20000000
LL_DAC_IT_DMAUDRIE1 = 0x2000
LL_DAC_IT_DMAUDRIE2 = 0x20000000
LL_DAC_CHANNEL_1 = 0x2100001
LL_DAC_CHANNEL_2 = 0x15430012
LL_DAC_TRIG_SOFTWARE = 0x38
LL_DAC_TRIG_EXT_TIM2_TRGO = 0x20
LL_DAC_TRIG_EXT_TIM8_TRGO = 0x8
LL_DAC_TRIG_EXT_TIM4_TRGO = 0x28
LL_DAC_TRIG_EXT_TIM6_TRGO = 0x0
LL_DAC_TRIG_EXT_TIM7_TRGO = 0x10
LL_DAC_TRIG_EXT_TIM5_TRGO = 0x18
LL_DAC_TRIG_EXT_EXTI_LINE9 = 0x30
LL_DAC_WAVE_AUTO_GENERATION_NONE = 0x0
LL_DAC_WAVE_AUTO_GENERATION_NOISE = 0x40
LL_DAC_WAVE_AUTO_GENERATION_TRIANGLE = 0x80
LL_DAC_NOISE_LFSR_UNMASK_BIT0 = 0x0
LL_DAC_NOISE_LFSR_UNMASK_BITS1_0 = 0x100
LL_DAC_NOISE_LFSR_UNMASK_BITS2_0 = 0x200
LL_DAC_NOISE_LFSR_UNMASK_BITS3_0 = 0x300
LL_DAC_NOISE_LFSR_UNMASK_BITS4_0 = 0x400
LL_DAC_NOISE_LFSR_UNMASK_BITS5_0 = 0x500
LL_DAC_NOISE_LFSR_UNMASK_BITS6_0 = 0x600
LL_DAC_NOISE_LFSR_UNMASK_BITS7_0 = 0x700
LL_DAC_NOISE_LFSR_UNMASK_BITS8_0 = 0x800
LL_DAC_NOISE_LFSR_UNMASK_BITS9_0 = 0x900
LL_DAC_NOISE_LFSR_UNMASK_BITS10_0 = 0xA00
LL_DAC_NOISE_LFSR_UNMASK_BITS11_0 = 0xB00
LL_DAC_TRIANGLE_AMPLITUDE_1 = 0x0
LL_DAC_TRIANGLE_AMPLITUDE_3 = 0x100
LL_DAC_TRIANGLE_AMPLITUDE_7 = 0x200
LL_DAC_TRIANGLE_AMPLITUDE_15 = 0x300
LL_DAC_TRIANGLE_AMPLITUDE_31 = 0x400
LL_DAC_TRIANGLE_AMPLITUDE_63 = 0x500
LL_DAC_TRIANGLE_AMPLITUDE_127 = 0x600
LL_DAC_TRIANGLE_AMPLITUDE_255 = 0x700
LL_DAC_TRIANGLE_AMPLITUDE_511 = 0x800
LL_DAC_TRIANGLE_AMPLITUDE_1023 = 0x900
LL_DAC_TRIANGLE_AMPLITUDE_2047 = 0xA00
LL_DAC_TRIANGLE_AMPLITUDE_4095 = 0xB00
LL_DAC_OUTPUT_BUFFER_ENABLE = 0x0
LL_DAC_OUTPUT_BUFFER_DISABLE = 0x2
LL_DAC_RESOLUTION_12B = 0x0
LL_DAC_RESOLUTION_8B = 0x2
LL_DAC_DMA_REG_DATA_12BITS_RIGHT_ALIGNED = 0xF0000
LL_DAC_DMA_REG_DATA_12BITS_LEFT_ALIGNED = 0xF00000
LL_DAC_DMA_REG_DATA_8BITS_RIGHT_ALIGNED = 0xF000000
LL_DAC_DELAY_STARTUP_VOLTAGE_SETTLING_US = 0xF
LL_DAC_DELAY_VOLTAGE_SETTLING_US = 0xC
# struct LL_DAC_InitTypeDef

class LL_DAC_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('TriggerSource',	ctypes.c_uint32),
		('WaveAutoGeneration',	ctypes.c_uint32),
		('WaveAutoGenerationConfig',	ctypes.c_uint32),
		('OutputBuffer',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------

# file stm32f7xx_ll_rng.h : 

# empty define STM32F7xx_LL_RNG_H
LL_RNG_SR_DRDY = 0x1
LL_RNG_SR_CECS = 0x2
LL_RNG_SR_SECS = 0x4
LL_RNG_SR_CEIS = 0x20
LL_RNG_SR_SEIS = 0x40
LL_RNG_CR_IE = 0x8
# ----------------------------------------

# file stm32f7xx_ll_bus.h : 

# empty define __STM32F7xx_LL_BUS_H
LL_AHB1_GRP1_PERIPH_ALL = 0xFFFFFFFF
LL_AHB1_GRP1_PERIPH_GPIOA = 0x1
LL_AHB1_GRP1_PERIPH_GPIOB = 0x2
LL_AHB1_GRP1_PERIPH_GPIOC = 0x4
LL_AHB1_GRP1_PERIPH_GPIOD = 0x8
LL_AHB1_GRP1_PERIPH_GPIOE = 0x10
LL_AHB1_GRP1_PERIPH_GPIOF = 0x20
LL_AHB1_GRP1_PERIPH_GPIOG = 0x40
LL_AHB1_GRP1_PERIPH_GPIOH = 0x80
LL_AHB1_GRP1_PERIPH_GPIOI = 0x100
LL_AHB1_GRP1_PERIPH_GPIOJ = 0x200
LL_AHB1_GRP1_PERIPH_GPIOK = 0x400
LL_AHB1_GRP1_PERIPH_CRC = 0x1000
LL_AHB1_GRP1_PERIPH_BKPSRAM = 0x40000
LL_AHB1_GRP1_PERIPH_DTCMRAM = 0x100000
LL_AHB1_GRP1_PERIPH_DMA1 = 0x200000
LL_AHB1_GRP1_PERIPH_DMA2 = 0x400000
LL_AHB1_GRP1_PERIPH_DMA2D = 0x800000
LL_AHB1_GRP1_PERIPH_ETHMAC = 0x2000000
LL_AHB1_GRP1_PERIPH_ETHMACTX = 0x4000000
LL_AHB1_GRP1_PERIPH_ETHMACRX = 0x8000000
LL_AHB1_GRP1_PERIPH_ETHMACPTP = 0x10000000
LL_AHB1_GRP1_PERIPH_OTGHS = 0x20000000
LL_AHB1_GRP1_PERIPH_OTGHSULPI = 0x40000000
LL_AHB1_GRP1_PERIPH_AXI = 0x2000
LL_AHB1_GRP1_PERIPH_FLITF = 0x8000
LL_AHB1_GRP1_PERIPH_SRAM1 = 0x10000
LL_AHB1_GRP1_PERIPH_SRAM2 = 0x20000
LL_AHB2_GRP1_PERIPH_ALL = 0xFFFFFFFF
LL_AHB2_GRP1_PERIPH_DCMI = 0x1
# Skip LL_AHB2_GRP1_PERIPH_JPEG : no need parse
LL_AHB2_GRP1_PERIPH_CRYP = 0x10
# Skip LL_AHB2_GRP1_PERIPH_AES : no need parse
LL_AHB2_GRP1_PERIPH_HASH = 0x20
LL_AHB2_GRP1_PERIPH_RNG = 0x40
LL_AHB2_GRP1_PERIPH_OTGFS = 0x80
LL_AHB3_GRP1_PERIPH_ALL = 0xFFFFFFFF
LL_AHB3_GRP1_PERIPH_FMC = 0x1
LL_AHB3_GRP1_PERIPH_QSPI = 0x2
LL_APB1_GRP1_PERIPH_ALL = 0xFFFFFFFF
LL_APB1_GRP1_PERIPH_TIM2 = 0x1
LL_APB1_GRP1_PERIPH_TIM3 = 0x2
LL_APB1_GRP1_PERIPH_TIM4 = 0x4
LL_APB1_GRP1_PERIPH_TIM5 = 0x8
LL_APB1_GRP1_PERIPH_TIM6 = 0x10
LL_APB1_GRP1_PERIPH_TIM7 = 0x20
LL_APB1_GRP1_PERIPH_TIM12 = 0x40
LL_APB1_GRP1_PERIPH_TIM13 = 0x80
LL_APB1_GRP1_PERIPH_TIM14 = 0x100
LL_APB1_GRP1_PERIPH_LPTIM1 = 0x200
LL_APB1_GRP1_PERIPH_WWDG = 0x800
LL_APB1_GRP1_PERIPH_SPI2 = 0x4000
LL_APB1_GRP1_PERIPH_SPI3 = 0x8000
LL_APB1_GRP1_PERIPH_SPDIFRX = 0x10000
LL_APB1_GRP1_PERIPH_USART2 = 0x20000
LL_APB1_GRP1_PERIPH_USART3 = 0x40000
LL_APB1_GRP1_PERIPH_UART4 = 0x80000
LL_APB1_GRP1_PERIPH_UART5 = 0x100000
LL_APB1_GRP1_PERIPH_I2C1 = 0x200000
LL_APB1_GRP1_PERIPH_I2C2 = 0x400000
LL_APB1_GRP1_PERIPH_I2C3 = 0x800000
LL_APB1_GRP1_PERIPH_I2C4 = 0x1000000
LL_APB1_GRP1_PERIPH_CAN1 = 0x2000000
LL_APB1_GRP1_PERIPH_CAN2 = 0x4000000
# Skip LL_APB1_GRP1_PERIPH_CAN3 : no need parse
LL_APB1_GRP1_PERIPH_CEC = 0x8000000
LL_APB1_GRP1_PERIPH_PWR = 0x10000000
LL_APB1_GRP1_PERIPH_DAC1 = 0x20000000
LL_APB1_GRP1_PERIPH_UART7 = 0x40000000
LL_APB1_GRP1_PERIPH_UART8 = 0x80000000
# Skip LL_APB1_GRP1_PERIPH_RTCAPB : no need parse
LL_APB2_GRP1_PERIPH_ALL = 0xFFFFFFFF
LL_APB2_GRP1_PERIPH_TIM1 = 0x1
LL_APB2_GRP1_PERIPH_TIM8 = 0x2
LL_APB2_GRP1_PERIPH_USART1 = 0x10
LL_APB2_GRP1_PERIPH_USART6 = 0x20
LL_APB2_GRP1_PERIPH_ADC1 = 0x100
LL_APB2_GRP1_PERIPH_ADC2 = 0x200
LL_APB2_GRP1_PERIPH_ADC3 = 0x400
LL_APB2_GRP1_PERIPH_SDMMC1 = 0x800
# Skip LL_APB2_GRP1_PERIPH_SDMMC2 : no need parse
LL_APB2_GRP1_PERIPH_SPI1 = 0x1000
LL_APB2_GRP1_PERIPH_SPI4 = 0x2000
LL_APB2_GRP1_PERIPH_SYSCFG = 0x4000
LL_APB2_GRP1_PERIPH_TIM9 = 0x10000
LL_APB2_GRP1_PERIPH_TIM10 = 0x20000
LL_APB2_GRP1_PERIPH_TIM11 = 0x40000
LL_APB2_GRP1_PERIPH_SPI5 = 0x100000
LL_APB2_GRP1_PERIPH_SPI6 = 0x200000
LL_APB2_GRP1_PERIPH_SAI1 = 0x400000
LL_APB2_GRP1_PERIPH_SAI2 = 0x800000
LL_APB2_GRP1_PERIPH_LTDC = 0x4000000
# Skip LL_APB2_GRP1_PERIPH_DSI : no need parse
# Skip LL_APB2_GRP1_PERIPH_DFSDM1 : no need parse
# Skip LL_APB2_GRP1_PERIPH_MDIO : no need parse
# Skip LL_APB2_GRP1_PERIPH_OTGPHYC : no need parse
LL_APB2_GRP1_PERIPH_ADC = 0x100
# ----------------------------------------

# file stm32f7xx_ll_dma2d.h : 

# empty define STM32F7xx_LL_DMA2D_H
LL_DMA2D_FLAG_CEIF = 0x20
LL_DMA2D_FLAG_CTCIF = 0x10
LL_DMA2D_FLAG_CAEIF = 0x8
LL_DMA2D_FLAG_TWIF = 0x4
LL_DMA2D_FLAG_TCIF = 0x2
LL_DMA2D_FLAG_TEIF = 0x1
LL_DMA2D_IT_CEIE = 0x2000
LL_DMA2D_IT_CTCIE = 0x1000
LL_DMA2D_IT_CAEIE = 0x800
LL_DMA2D_IT_TWIE = 0x400
LL_DMA2D_IT_TCIE = 0x200
LL_DMA2D_IT_TEIE = 0x100
LL_DMA2D_MODE_M2M = 0x0
LL_DMA2D_MODE_M2M_PFC = 0x10000
LL_DMA2D_MODE_M2M_BLEND = 0x20000
LL_DMA2D_MODE_R2M = 0x30000
LL_DMA2D_OUTPUT_MODE_ARGB8888 = 0x0
LL_DMA2D_OUTPUT_MODE_RGB888 = 0x1
LL_DMA2D_OUTPUT_MODE_RGB565 = 0x2
LL_DMA2D_OUTPUT_MODE_ARGB1555 = 0x3
LL_DMA2D_OUTPUT_MODE_ARGB4444 = 0x4
LL_DMA2D_INPUT_MODE_ARGB8888 = 0x0
LL_DMA2D_INPUT_MODE_RGB888 = 0x1
LL_DMA2D_INPUT_MODE_RGB565 = 0x2
LL_DMA2D_INPUT_MODE_ARGB1555 = 0x3
LL_DMA2D_INPUT_MODE_ARGB4444 = 0x4
LL_DMA2D_INPUT_MODE_L8 = 0x5
LL_DMA2D_INPUT_MODE_AL44 = 0x6
LL_DMA2D_INPUT_MODE_AL88 = 0x7
LL_DMA2D_INPUT_MODE_L4 = 0x8
LL_DMA2D_INPUT_MODE_A8 = 0x9
LL_DMA2D_INPUT_MODE_A4 = 0xA
LL_DMA2D_ALPHA_MODE_NO_MODIF = 0x0
LL_DMA2D_ALPHA_MODE_REPLACE = 0x10000
LL_DMA2D_ALPHA_MODE_COMBINE = 0x20000
# Skip LL_DMA2D_RB_MODE_REGULAR : no need parse
# Skip LL_DMA2D_RB_MODE_SWAP : no need parse
# Skip LL_DMA2D_ALPHA_REGULAR : no need parse
# Skip LL_DMA2D_ALPHA_INVERTED : no need parse
LL_DMA2D_CLUT_COLOR_MODE_ARGB8888 = 0x0
LL_DMA2D_CLUT_COLOR_MODE_RGB888 = 0x10
# struct LL_DMA2D_InitTypeDef

class LL_DMA2D_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('Mode',	ctypes.c_uint32),
		('ColorMode',	ctypes.c_uint32),
		('OutputBlue',	ctypes.c_uint32),
		('OutputGreen',	ctypes.c_uint32),
		('OutputRed',	ctypes.c_uint32),
		('OutputAlpha',	ctypes.c_uint32),
		('OutputMemoryAddress',	ctypes.c_uint32),
		('LineOffset',	ctypes.c_uint32),
		('NbrOfLines',	ctypes.c_uint32),
		('NbrOfPixelsPerLines',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_DMA2D_LayerCfgTypeDef

class LL_DMA2D_LayerCfgTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('MemoryAddress',	ctypes.c_uint32),
		('LineOffset',	ctypes.c_uint32),
		('ColorMode',	ctypes.c_uint32),
		('CLUTColorMode',	ctypes.c_uint32),
		('CLUTSize',	ctypes.c_uint32),
		('AlphaMode',	ctypes.c_uint32),
		('Alpha',	ctypes.c_uint32),
		('Blue',	ctypes.c_uint32),
		('Green',	ctypes.c_uint32),
		('Red',	ctypes.c_uint32),
		('CLUTMemoryAddress',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_DMA2D_ColorTypeDef

class LL_DMA2D_ColorTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('ColorMode',	ctypes.c_uint32),
		('OutputBlue',	ctypes.c_uint32),
		('OutputGreen',	ctypes.c_uint32),
		('OutputRed',	ctypes.c_uint32),
		('OutputAlpha',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------

# file stm32f7xx_ll_gpio.h : 

# empty define __STM32F7xx_LL_GPIO_H
LL_GPIO_PIN_0 = 0x1
LL_GPIO_PIN_1 = 0x2
LL_GPIO_PIN_2 = 0x4
LL_GPIO_PIN_3 = 0x8
LL_GPIO_PIN_4 = 0x10
LL_GPIO_PIN_5 = 0x20
LL_GPIO_PIN_6 = 0x40
LL_GPIO_PIN_7 = 0x80
LL_GPIO_PIN_8 = 0x100
LL_GPIO_PIN_9 = 0x200
LL_GPIO_PIN_10 = 0x400
LL_GPIO_PIN_11 = 0x800
LL_GPIO_PIN_12 = 0x1000
LL_GPIO_PIN_13 = 0x2000
LL_GPIO_PIN_14 = 0x4000
LL_GPIO_PIN_15 = 0x8000
LL_GPIO_PIN_ALL = 0xFFFF
LL_GPIO_MODE_INPUT = 0x0
LL_GPIO_MODE_OUTPUT = 0x1
LL_GPIO_MODE_ALTERNATE = 0x2
LL_GPIO_MODE_ANALOG = 0x3
LL_GPIO_OUTPUT_PUSHPULL = 0x0
LL_GPIO_OUTPUT_OPENDRAIN = 0x1
LL_GPIO_SPEED_FREQ_LOW = 0x0
LL_GPIO_SPEED_FREQ_MEDIUM = 0x1
LL_GPIO_SPEED_FREQ_HIGH = 0x2
LL_GPIO_SPEED_FREQ_VERY_HIGH = 0x3
LL_GPIO_PULL_NO = 0x0
LL_GPIO_PULL_UP = 0x1
LL_GPIO_PULL_DOWN = 0x2
LL_GPIO_AF_0 = 0x0
LL_GPIO_AF_1 = 0x1
LL_GPIO_AF_2 = 0x2
LL_GPIO_AF_3 = 0x3
LL_GPIO_AF_4 = 0x4
LL_GPIO_AF_5 = 0x5
LL_GPIO_AF_6 = 0x6
LL_GPIO_AF_7 = 0x7
LL_GPIO_AF_8 = 0x8
LL_GPIO_AF_9 = 0x9
LL_GPIO_AF_10 = 0xA
LL_GPIO_AF_11 = 0xB
LL_GPIO_AF_12 = 0xC
LL_GPIO_AF_13 = 0xD
LL_GPIO_AF_14 = 0xE
LL_GPIO_AF_15 = 0xF
# struct LL_GPIO_InitTypeDef

class LL_GPIO_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('Pin',	ctypes.c_uint32),
		('Mode',	ctypes.c_uint32),
		('Speed',	ctypes.c_uint32),
		('OutputType',	ctypes.c_uint32),
		('Pull',	ctypes.c_uint32),
		('Alternate',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------

# file stm32f7xx_ll_utils.h : 

# empty define __STM32F7xx_LL_UTILS_H
LL_MAX_DELAY = 0xFFFFFFFF
UID_BASE_ADDRESS = 0x1FF0F420
FLASHSIZE_BASE_ADDRESS = 0x1FF0F442
PACKAGE_BASE_ADDRESS = 0x1FF0F7E0
LL_UTILS_HSEBYPASS_OFF = 0x0
LL_UTILS_HSEBYPASS_ON = 0x1
LL_UTILS_PACKAGETYPE_LQFP100 = 0x100
LL_UTILS_PACKAGETYPE_LQFP144_WLCSP143 = 0x200
LL_UTILS_PACKAGETYPE_WLCSP180_LQFP176_UFBGA176 = 0x300
LL_UTILS_PACKAGETYPE_LQFP176_LQFP208_TFBGA216 = 0x400
LL_UTILS_PACKAGETYPE_TFBGA216_LQFP176_LQFP208 = 0x500
LL_UTILS_PACKAGETYPE_LQFP176_TFBGA216_LQFP208 = 0x600
LL_UTILS_PACKAGETYPE_LQFP208_LQFP176_TFBGA216 = 0x700
# struct LL_UTILS_PLLInitTypeDef

class LL_UTILS_PLLInitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('PLLM',	ctypes.c_uint32),
		('PLLN',	ctypes.c_uint32),
		('PLLP',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# struct LL_UTILS_ClkInitTypeDef

class LL_UTILS_ClkInitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('AHBCLKDivider',	ctypes.c_uint32),
		('APB1CLKDivider',	ctypes.c_uint32),
		('APB2CLKDivider',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------

# file stm32f7xx_ll_wwdg.h : 

# empty define STM32F7xx_LL_WWDG_H
LL_WWDG_CFR_EWI = 0x200
LL_WWDG_PRESCALER_1 = 0x0
LL_WWDG_PRESCALER_2 = 0x80
LL_WWDG_PRESCALER_4 = 0x100
LL_WWDG_PRESCALER_8 = 0x180
# ----------------------------------------

# file stm32f7xx_ll_exti.h : 

# empty define __STM32F7xx_LL_EXTI_H
LL_EXTI_LINE_0 = 0x1
LL_EXTI_LINE_1 = 0x2
LL_EXTI_LINE_2 = 0x4
LL_EXTI_LINE_3 = 0x8
LL_EXTI_LINE_4 = 0x10
LL_EXTI_LINE_5 = 0x20
LL_EXTI_LINE_6 = 0x40
LL_EXTI_LINE_7 = 0x80
LL_EXTI_LINE_8 = 0x100
LL_EXTI_LINE_9 = 0x200
LL_EXTI_LINE_10 = 0x400
LL_EXTI_LINE_11 = 0x800
LL_EXTI_LINE_12 = 0x1000
LL_EXTI_LINE_13 = 0x2000
LL_EXTI_LINE_14 = 0x4000
LL_EXTI_LINE_15 = 0x8000
LL_EXTI_LINE_16 = 0x10000
LL_EXTI_LINE_17 = 0x20000
LL_EXTI_LINE_18 = 0x40000
LL_EXTI_LINE_19 = 0x80000
LL_EXTI_LINE_20 = 0x100000
LL_EXTI_LINE_21 = 0x200000
LL_EXTI_LINE_22 = 0x400000
LL_EXTI_LINE_23 = 0x800000
# Skip LL_EXTI_LINE_24 : no need parse
# Skip LL_EXTI_LINE_25 : no need parse
# Skip LL_EXTI_LINE_26 : no need parse
# Skip LL_EXTI_LINE_27 : no need parse
# Skip LL_EXTI_LINE_28 : no need parse
# Skip LL_EXTI_LINE_29 : no need parse
# Skip LL_EXTI_LINE_30 : no need parse
# Skip LL_EXTI_LINE_31 : no need parse
LL_EXTI_LINE_ALL_0_31 = 0xFFFFFF
LL_EXTI_LINE_ALL = 0xFFFFFFFF
LL_EXTI_LINE_NONE = 0x0
LL_EXTI_MODE_IT = 0x0
LL_EXTI_MODE_EVENT = 0x1
LL_EXTI_MODE_IT_EVENT = 0x2
LL_EXTI_TRIGGER_NONE = 0x0
LL_EXTI_TRIGGER_RISING = 0x1
LL_EXTI_TRIGGER_FALLING = 0x2
LL_EXTI_TRIGGER_RISING_FALLING = 0x3
# struct LL_EXTI_InitTypeDef

class LL_EXTI_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('Line_0_31',	ctypes.c_uint32),
		('LineCommand',	ctypes.c_uint32),
		('Mode',	ctypes.c_uint8),
		('Trigger',	ctypes.c_uint8),
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------

# file stm32f7xx_ll_sdmmc.h : 

# empty define STM32F7xx_LL_SDMMC_H
# Skip SDMMC_ERROR_NONE : no need parse
# Skip SDMMC_ERROR_CMD_CRC_FAIL : no need parse
# Skip SDMMC_ERROR_DATA_CRC_FAIL : no need parse
# Skip SDMMC_ERROR_CMD_RSP_TIMEOUT : no need parse
# Skip SDMMC_ERROR_DATA_TIMEOUT : no need parse
# Skip SDMMC_ERROR_TX_UNDERRUN : no need parse
# Skip SDMMC_ERROR_RX_OVERRUN : no need parse
# Skip SDMMC_ERROR_ADDR_MISALIGNED : no need parse
# Skip SDMMC_ERROR_BLOCK_LEN_ERR : no need parse
# Skip SDMMC_ERROR_ERASE_SEQ_ERR : no need parse
# Skip SDMMC_ERROR_BAD_ERASE_PARAM : no need parse
# Skip SDMMC_ERROR_WRITE_PROT_VIOLATION : no need parse
# Skip SDMMC_ERROR_LOCK_UNLOCK_FAILED : no need parse
# Skip SDMMC_ERROR_COM_CRC_FAILED : no need parse
# Skip SDMMC_ERROR_ILLEGAL_CMD : no need parse
# Skip SDMMC_ERROR_CARD_ECC_FAILED : no need parse
# Skip SDMMC_ERROR_CC_ERR : no need parse
# Skip SDMMC_ERROR_GENERAL_UNKNOWN_ERR : no need parse
# Skip SDMMC_ERROR_STREAM_READ_UNDERRUN : no need parse
# Skip SDMMC_ERROR_STREAM_WRITE_OVERRUN : no need parse
# Skip SDMMC_ERROR_CID_CSD_OVERWRITE : no need parse
# Skip SDMMC_ERROR_WP_ERASE_SKIP : no need parse
# Skip SDMMC_ERROR_CARD_ECC_DISABLED : no need parse
# Skip SDMMC_ERROR_ERASE_RESET : no need parse
# Skip SDMMC_ERROR_AKE_SEQ_ERR : no need parse
# Skip SDMMC_ERROR_INVALID_VOLTRANGE : no need parse
# Skip SDMMC_ERROR_ADDR_OUT_OF_RANGE : no need parse
# Skip SDMMC_ERROR_REQUEST_NOT_APPLICABLE : no need parse
# Skip SDMMC_ERROR_INVALID_PARAMETER : no need parse
# Skip SDMMC_ERROR_UNSUPPORTED_FEATURE : no need parse
# Skip SDMMC_ERROR_BUSY : no need parse
# Skip SDMMC_ERROR_DMA : no need parse
# Skip SDMMC_ERROR_TIMEOUT : no need parse
# Skip SDMMC_CMD_GO_IDLE_STATE : no need parse
# Skip SDMMC_CMD_SEND_OP_COND : no need parse
# Skip SDMMC_CMD_ALL_SEND_CID : no need parse
# Skip SDMMC_CMD_SET_REL_ADDR : no need parse
# Skip SDMMC_CMD_SET_DSR : no need parse
# Skip SDMMC_CMD_SDMMC_SEN_OP_COND : no need parse
# Skip SDMMC_CMD_HS_SWITCH : no need parse
# Skip SDMMC_CMD_SEL_DESEL_CARD : no need parse
# Skip SDMMC_CMD_HS_SEND_EXT_CSD : no need parse
# Skip SDMMC_CMD_SEND_CSD : no need parse
# Skip SDMMC_CMD_SEND_CID : no need parse
# Skip SDMMC_CMD_READ_DAT_UNTIL_STOP : no need parse
# Skip SDMMC_CMD_STOP_TRANSMISSION : no need parse
# Skip SDMMC_CMD_SEND_STATUS : no need parse
# Skip SDMMC_CMD_HS_BUSTEST_READ : no need parse
# Skip SDMMC_CMD_GO_INACTIVE_STATE : no need parse
# Skip SDMMC_CMD_SET_BLOCKLEN : no need parse
# Skip SDMMC_CMD_READ_SINGLE_BLOCK : no need parse
# Skip SDMMC_CMD_READ_MULT_BLOCK : no need parse
# Skip SDMMC_CMD_HS_BUSTEST_WRITE : no need parse
# Skip SDMMC_CMD_WRITE_DAT_UNTIL_STOP : no need parse
# Skip SDMMC_CMD_SET_BLOCK_COUNT : no need parse
# Skip SDMMC_CMD_WRITE_SINGLE_BLOCK : no need parse
# Skip SDMMC_CMD_WRITE_MULT_BLOCK : no need parse
# Skip SDMMC_CMD_PROG_CID : no need parse
# Skip SDMMC_CMD_PROG_CSD : no need parse
# Skip SDMMC_CMD_SET_WRITE_PROT : no need parse
# Skip SDMMC_CMD_CLR_WRITE_PROT : no need parse
# Skip SDMMC_CMD_SEND_WRITE_PROT : no need parse
# Skip SDMMC_CMD_SD_ERASE_GRP_START : no need parse
# Skip SDMMC_CMD_SD_ERASE_GRP_END : no need parse
# Skip SDMMC_CMD_ERASE_GRP_START : no need parse
# Skip SDMMC_CMD_ERASE_GRP_END : no need parse
# Skip SDMMC_CMD_ERASE : no need parse
# Skip SDMMC_CMD_FAST_IO : no need parse
# Skip SDMMC_CMD_GO_IRQ_STATE : no need parse
# Skip SDMMC_CMD_LOCK_UNLOCK : no need parse
# Skip SDMMC_CMD_APP_CMD : no need parse
# Skip SDMMC_CMD_GEN_CMD : no need parse
# Skip SDMMC_CMD_NO_CMD : no need parse
# Skip SDMMC_CMD_APP_SD_SET_BUSWIDTH : no need parse
# Skip SDMMC_CMD_SD_APP_STATUS : no need parse
# Skip SDMMC_CMD_SD_APP_SEND_NUM_WRITE_BLOCKS : no need parse
# Skip SDMMC_CMD_SD_APP_OP_COND : no need parse
# Skip SDMMC_CMD_SD_APP_SET_CLR_CARD_DETECT : no need parse
# Skip SDMMC_CMD_SD_APP_SEND_SCR : no need parse
# Skip SDMMC_CMD_SDMMC_RW_DIRECT : no need parse
# Skip SDMMC_CMD_SDMMC_RW_EXTENDED : no need parse
# Skip SDMMC_CMD_SD_APP_GET_MKB : no need parse
# Skip SDMMC_CMD_SD_APP_GET_MID : no need parse
# Skip SDMMC_CMD_SD_APP_SET_CER_RN1 : no need parse
# Skip SDMMC_CMD_SD_APP_GET_CER_RN2 : no need parse
# Skip SDMMC_CMD_SD_APP_SET_CER_RES2 : no need parse
# Skip SDMMC_CMD_SD_APP_GET_CER_RES1 : no need parse
# Skip SDMMC_CMD_SD_APP_SECURE_READ_MULTIPLE_BLOCK : no need parse
# Skip SDMMC_CMD_SD_APP_SECURE_WRITE_MULTIPLE_BLOCK : no need parse
# Skip SDMMC_CMD_SD_APP_SECURE_ERASE : no need parse
# Skip SDMMC_CMD_SD_APP_CHANGE_SECURE_AREA : no need parse
# Skip SDMMC_CMD_SD_APP_SECURE_WRITE_MKB : no need parse
# Skip SDMMC_OCR_ADDR_OUT_OF_RANGE : no need parse
# Skip SDMMC_OCR_ADDR_MISALIGNED : no need parse
# Skip SDMMC_OCR_BLOCK_LEN_ERR : no need parse
# Skip SDMMC_OCR_ERASE_SEQ_ERR : no need parse
# Skip SDMMC_OCR_BAD_ERASE_PARAM : no need parse
# Skip SDMMC_OCR_WRITE_PROT_VIOLATION : no need parse
# Skip SDMMC_OCR_LOCK_UNLOCK_FAILED : no need parse
# Skip SDMMC_OCR_COM_CRC_FAILED : no need parse
# Skip SDMMC_OCR_ILLEGAL_CMD : no need parse
# Skip SDMMC_OCR_CARD_ECC_FAILED : no need parse
# Skip SDMMC_OCR_CC_ERROR : no need parse
# Skip SDMMC_OCR_GENERAL_UNKNOWN_ERROR : no need parse
# Skip SDMMC_OCR_STREAM_READ_UNDERRUN : no need parse
# Skip SDMMC_OCR_STREAM_WRITE_OVERRUN : no need parse
# Skip SDMMC_OCR_CID_CSD_OVERWRITE : no need parse
# Skip SDMMC_OCR_WP_ERASE_SKIP : no need parse
# Skip SDMMC_OCR_CARD_ECC_DISABLED : no need parse
# Skip SDMMC_OCR_ERASE_RESET : no need parse
# Skip SDMMC_OCR_AKE_SEQ_ERROR : no need parse
# Skip SDMMC_OCR_ERRORBITS : no need parse
# Skip SDMMC_R6_GENERAL_UNKNOWN_ERROR : no need parse
# Skip SDMMC_R6_ILLEGAL_CMD : no need parse
# Skip SDMMC_R6_COM_CRC_FAILED : no need parse
# Skip SDMMC_VOLTAGE_WINDOW_SD : no need parse
# Skip SDMMC_HIGH_CAPACITY : no need parse
# Skip SDMMC_STD_CAPACITY : no need parse
# Skip SDMMC_CHECK_PATTERN : no need parse
# Skip SD_SWITCH_1_8V_CAPACITY : no need parse
# Skip SDMMC_MAX_VOLT_TRIAL : no need parse
# Skip SDMMC_MAX_TRIAL : no need parse
# Skip SDMMC_ALLZERO : no need parse
# Skip SDMMC_WIDE_BUS_SUPPORT : no need parse
# Skip SDMMC_SINGLE_BUS_SUPPORT : no need parse
# Skip SDMMC_CARD_LOCKED : no need parse
# Skip SDMMC_DATATIMEOUT : no need parse
# Skip SDMMC_0TO7BITS : no need parse
# Skip SDMMC_8TO15BITS : no need parse
# Skip SDMMC_16TO23BITS : no need parse
# Skip SDMMC_24TO31BITS : no need parse
# Skip SDMMC_MAX_DATA_LENGTH : no need parse
# Skip SDMMC_HALFFIFO : no need parse
# Skip SDMMC_HALFFIFOBYTES : no need parse
# Skip SDMMC_CCCC_ERASE : no need parse
# Skip SDMMC_CMDTIMEOUT : no need parse
# Skip SDMMC_MAXERASETIMEOUT : no need parse
# Skip SDMMC_STOPTRANSFERTIMEOUT : no need parse
# Skip SDMMC_CLOCK_EDGE_RISING : no need parse
# Skip SDMMC_CLOCK_EDGE_FALLING : no need parse
# Skip SDMMC_CLOCK_BYPASS_DISABLE : no need parse
# Skip SDMMC_CLOCK_BYPASS_ENABLE : no need parse
# Skip SDMMC_CLOCK_POWER_SAVE_DISABLE : no need parse
# Skip SDMMC_CLOCK_POWER_SAVE_ENABLE : no need parse
# Skip SDMMC_BUS_WIDE_1B : no need parse
# Skip SDMMC_BUS_WIDE_4B : no need parse
# Skip SDMMC_BUS_WIDE_8B : no need parse
# Skip SDMMC_HARDWARE_FLOW_CONTROL_DISABLE : no need parse
# Skip SDMMC_HARDWARE_FLOW_CONTROL_ENABLE : no need parse
# Skip SDMMC_RESPONSE_NO : no need parse
# Skip SDMMC_RESPONSE_SHORT : no need parse
# Skip SDMMC_RESPONSE_LONG : no need parse
# Skip SDMMC_WAIT_NO : no need parse
# Skip SDMMC_WAIT_IT : no need parse
# Skip SDMMC_WAIT_PEND : no need parse
# Skip SDMMC_CPSM_DISABLE : no need parse
# Skip SDMMC_CPSM_ENABLE : no need parse
# Skip SDMMC_RESP1 : no need parse
# Skip SDMMC_RESP2 : no need parse
# Skip SDMMC_RESP3 : no need parse
# Skip SDMMC_RESP4 : no need parse
# Skip SDMMC_DATABLOCK_SIZE_1B : no need parse
# Skip SDMMC_DATABLOCK_SIZE_2B : no need parse
# Skip SDMMC_DATABLOCK_SIZE_4B : no need parse
# Skip SDMMC_DATABLOCK_SIZE_8B : no need parse
# Skip SDMMC_DATABLOCK_SIZE_16B : no need parse
# Skip SDMMC_DATABLOCK_SIZE_32B : no need parse
# Skip SDMMC_DATABLOCK_SIZE_64B : no need parse
# Skip SDMMC_DATABLOCK_SIZE_128B : no need parse
# Skip SDMMC_DATABLOCK_SIZE_256B : no need parse
# Skip SDMMC_DATABLOCK_SIZE_512B : no need parse
# Skip SDMMC_DATABLOCK_SIZE_1024B : no need parse
# Skip SDMMC_DATABLOCK_SIZE_2048B : no need parse
# Skip SDMMC_DATABLOCK_SIZE_4096B : no need parse
# Skip SDMMC_DATABLOCK_SIZE_8192B : no need parse
# Skip SDMMC_DATABLOCK_SIZE_16384B : no need parse
# Skip SDMMC_TRANSFER_DIR_TO_CARD : no need parse
# Skip SDMMC_TRANSFER_DIR_TO_SDMMC : no need parse
# Skip SDMMC_TRANSFER_MODE_BLOCK : no need parse
# Skip SDMMC_TRANSFER_MODE_STREAM : no need parse
# Skip SDMMC_DPSM_DISABLE : no need parse
# Skip SDMMC_DPSM_ENABLE : no need parse
# Skip SDMMC_READ_WAIT_MODE_DATA2 : no need parse
# Skip SDMMC_READ_WAIT_MODE_CLK : no need parse
# Skip SDMMC_IT_CCRCFAIL : no need parse
# Skip SDMMC_IT_DCRCFAIL : no need parse
# Skip SDMMC_IT_CTIMEOUT : no need parse
# Skip SDMMC_IT_DTIMEOUT : no need parse
# Skip SDMMC_IT_TXUNDERR : no need parse
# Skip SDMMC_IT_RXOVERR : no need parse
# Skip SDMMC_IT_CMDREND : no need parse
# Skip SDMMC_IT_CMDSENT : no need parse
# Skip SDMMC_IT_DATAEND : no need parse
# Skip SDMMC_IT_DBCKEND : no need parse
# Skip SDMMC_IT_CMDACT : no need parse
# Skip SDMMC_IT_TXACT : no need parse
# Skip SDMMC_IT_RXACT : no need parse
# Skip SDMMC_IT_TXFIFOHE : no need parse
# Skip SDMMC_IT_RXFIFOHF : no need parse
# Skip SDMMC_IT_TXFIFOF : no need parse
# Skip SDMMC_IT_RXFIFOF : no need parse
# Skip SDMMC_IT_TXFIFOE : no need parse
# Skip SDMMC_IT_RXFIFOE : no need parse
# Skip SDMMC_IT_TXDAVL : no need parse
# Skip SDMMC_IT_RXDAVL : no need parse
# Skip SDMMC_IT_SDIOIT : no need parse
# Skip SDMMC_FLAG_CCRCFAIL : no need parse
# Skip SDMMC_FLAG_DCRCFAIL : no need parse
# Skip SDMMC_FLAG_CTIMEOUT : no need parse
# Skip SDMMC_FLAG_DTIMEOUT : no need parse
# Skip SDMMC_FLAG_TXUNDERR : no need parse
# Skip SDMMC_FLAG_RXOVERR : no need parse
# Skip SDMMC_FLAG_CMDREND : no need parse
# Skip SDMMC_FLAG_CMDSENT : no need parse
# Skip SDMMC_FLAG_DATAEND : no need parse
# Skip SDMMC_FLAG_DBCKEND : no need parse
# Skip SDMMC_FLAG_CMDACT : no need parse
# Skip SDMMC_FLAG_TXACT : no need parse
# Skip SDMMC_FLAG_RXACT : no need parse
# Skip SDMMC_FLAG_TXFIFOHE : no need parse
# Skip SDMMC_FLAG_RXFIFOHF : no need parse
# Skip SDMMC_FLAG_TXFIFOF : no need parse
# Skip SDMMC_FLAG_RXFIFOF : no need parse
# Skip SDMMC_FLAG_TXFIFOE : no need parse
# Skip SDMMC_FLAG_RXFIFOE : no need parse
# Skip SDMMC_FLAG_TXDAVL : no need parse
# Skip SDMMC_FLAG_RXDAVL : no need parse
# Skip SDMMC_FLAG_SDIOIT : no need parse
# Skip SDMMC_STATIC_FLAGS : no need parse
# Skip SDMMC_STATIC_CMD_FLAGS : no need parse
# Skip SDMMC_STATIC_DATA_FLAGS : no need parse
# Skip CLKCR_CLEAR_MASK : no need parse
# Skip DCTRL_CLEAR_MASK : no need parse
# Skip CMD_CLEAR_MASK : no need parse
# Skip SDMMC_INIT_CLK_DIV : no need parse
# Skip SDMMC_TRANSFER_CLK_DIV : no need parse
# Skip __SDMMC_GET_IT : no need parse
# struct SDMMC_InitTypeDef

class SDMMC_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
	]
	def ref(self):
		return ctypes.byref(self)

# struct SDMMC_CmdInitTypeDef

class SDMMC_CmdInitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
	]
	def ref(self):
		return ctypes.byref(self)

# struct SDMMC_DataInitTypeDef

class SDMMC_DataInitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------

# file stm32f7xx_ll_dma.h : 

# empty define __STM32F7xx_LL_DMA_H
# empty define DMA_CHANNEL_SELECTION_8_15
LL_DMA_STREAM_0 = 0x0
LL_DMA_STREAM_1 = 0x1
LL_DMA_STREAM_2 = 0x2
LL_DMA_STREAM_3 = 0x3
LL_DMA_STREAM_4 = 0x4
LL_DMA_STREAM_5 = 0x5
LL_DMA_STREAM_6 = 0x6
LL_DMA_STREAM_7 = 0x7
LL_DMA_STREAM_ALL = 0xFFFF0000
LL_DMA_DIRECTION_PERIPH_TO_MEMORY = 0x0
LL_DMA_DIRECTION_MEMORY_TO_PERIPH = 0x40
LL_DMA_DIRECTION_MEMORY_TO_MEMORY = 0x80
LL_DMA_MODE_NORMAL = 0x0
LL_DMA_MODE_CIRCULAR = 0x100
LL_DMA_MODE_PFCTRL = 0x20
LL_DMA_DOUBLEBUFFER_MODE_DISABLE = 0x0
LL_DMA_DOUBLEBUFFER_MODE_ENABLE = 0x40000
LL_DMA_PERIPH_NOINCREMENT = 0x0
LL_DMA_PERIPH_INCREMENT = 0x200
LL_DMA_MEMORY_NOINCREMENT = 0x0
LL_DMA_MEMORY_INCREMENT = 0x400
LL_DMA_PDATAALIGN_BYTE = 0x0
LL_DMA_PDATAALIGN_HALFWORD = 0x800
LL_DMA_PDATAALIGN_WORD = 0x1000
LL_DMA_MDATAALIGN_BYTE = 0x0
LL_DMA_MDATAALIGN_HALFWORD = 0x2000
LL_DMA_MDATAALIGN_WORD = 0x4000
LL_DMA_OFFSETSIZE_PSIZE = 0x0
LL_DMA_OFFSETSIZE_FIXEDTO4 = 0x8000
LL_DMA_PRIORITY_LOW = 0x0
LL_DMA_PRIORITY_MEDIUM = 0x10000
LL_DMA_PRIORITY_HIGH = 0x20000
LL_DMA_PRIORITY_VERYHIGH = 0x30000
LL_DMA_CHANNEL_0 = 0x0
LL_DMA_CHANNEL_1 = 0x2000000
LL_DMA_CHANNEL_2 = 0x4000000
LL_DMA_CHANNEL_3 = 0x6000000
LL_DMA_CHANNEL_4 = 0x8000000
LL_DMA_CHANNEL_5 = 0xA000000
LL_DMA_CHANNEL_6 = 0xC000000
LL_DMA_CHANNEL_7 = 0xE000000
# Skip LL_DMA_CHANNEL_8 : no need parse
# Skip LL_DMA_CHANNEL_9 : no need parse
# Skip LL_DMA_CHANNEL_10 : no need parse
# Skip LL_DMA_CHANNEL_11 : no need parse
# Skip LL_DMA_CHANNEL_12 : no need parse
# Skip LL_DMA_CHANNEL_13 : no need parse
# Skip LL_DMA_CHANNEL_14 : no need parse
# Skip LL_DMA_CHANNEL_15 : no need parse
LL_DMA_MBURST_SINGLE = 0x0
LL_DMA_MBURST_INC4 = 0x800000
LL_DMA_MBURST_INC8 = 0x1000000
LL_DMA_MBURST_INC16 = 0x1800000
LL_DMA_PBURST_SINGLE = 0x0
LL_DMA_PBURST_INC4 = 0x200000
LL_DMA_PBURST_INC8 = 0x400000
LL_DMA_PBURST_INC16 = 0x600000
LL_DMA_FIFOMODE_DISABLE = 0x0
LL_DMA_FIFOMODE_ENABLE = 0x4
LL_DMA_FIFOSTATUS_0_25 = 0x0
LL_DMA_FIFOSTATUS_25_50 = 0x8
LL_DMA_FIFOSTATUS_50_75 = 0x10
LL_DMA_FIFOSTATUS_75_100 = 0x18
LL_DMA_FIFOSTATUS_EMPTY = 0x20
LL_DMA_FIFOSTATUS_FULL = 0x28
LL_DMA_FIFOTHRESHOLD_1_4 = 0x0
LL_DMA_FIFOTHRESHOLD_1_2 = 0x1
LL_DMA_FIFOTHRESHOLD_3_4 = 0x2
LL_DMA_FIFOTHRESHOLD_FULL = 0x3
LL_DMA_CURRENTTARGETMEM0 = 0x0
LL_DMA_CURRENTTARGETMEM1 = 0x80000
# struct LL_DMA_InitTypeDef

class LL_DMA_InitTypeDef(ctypes.Structure):
	_pack_ = False
	_fields_ = [
		('PeriphOrM2MSrcAddress',	ctypes.c_uint32),
		('MemoryOrM2MDstAddress',	ctypes.c_uint32),
		('Direction',	ctypes.c_uint32),
		('Mode',	ctypes.c_uint32),
		('PeriphOrM2MSrcIncMode',	ctypes.c_uint32),
		('MemoryOrM2MDstIncMode',	ctypes.c_uint32),
		('PeriphOrM2MSrcDataSize',	ctypes.c_uint32),
		('MemoryOrM2MDstDataSize',	ctypes.c_uint32),
		('NbData',	ctypes.c_uint32),
		('Channel',	ctypes.c_uint32),
		('Priority',	ctypes.c_uint32),
		('FIFOMode',	ctypes.c_uint32),
		('FIFOThreshold',	ctypes.c_uint32),
		('MemBurst',	ctypes.c_uint32),
		('PeriphBurst',	ctypes.c_uint32),
	]
	def ref(self):
		return ctypes.byref(self)

# ----------------------------------------


__all__ =  ['__version__', '__RUN', '__HALT', '__ERROR', '__WARNING', '__INFO', '__DEBUG',
    '__ALL_LOG', 'DEFAULT_OPENOCD_PORT', 'DEFAULT_GDB_PORT', 'FMC_NORSRAM_DEVICE',
    'FMC_NORSRAM_EXTENDED_DEVICE', 'FMC_NAND_DEVICE', 'FMC_SDRAM_DEVICE',
    'FMC_NORSRAM_BANK1', 'FMC_NORSRAM_BANK2', 'FMC_NORSRAM_BANK3', 'FMC_NORSRAM_BANK4',
    'FMC_DATA_ADDRESS_MUX_DISABLE', 'FMC_DATA_ADDRESS_MUX_ENABLE',
    'FMC_MEMORY_TYPE_SRAM', 'FMC_MEMORY_TYPE_PSRAM', 'FMC_MEMORY_TYPE_NOR',
    'FMC_NORSRAM_MEM_BUS_WIDTH_8', 'FMC_NORSRAM_MEM_BUS_WIDTH_16',
    'FMC_NORSRAM_MEM_BUS_WIDTH_32', 'FMC_NORSRAM_FLASH_ACCESS_ENABLE',
    'FMC_NORSRAM_FLASH_ACCESS_DISABLE', 'FMC_BURST_ACCESS_MODE_DISABLE',
    'FMC_BURST_ACCESS_MODE_ENABLE', 'FMC_WAIT_SIGNAL_POLARITY_LOW',
    'FMC_WAIT_SIGNAL_POLARITY_HIGH', 'FMC_WAIT_TIMING_BEFORE_WS',
    'FMC_WAIT_TIMING_DURING_WS', 'FMC_WRITE_OPERATION_DISABLE',
    'FMC_WRITE_OPERATION_ENABLE', 'FMC_WAIT_SIGNAL_DISABLE', 'FMC_WAIT_SIGNAL_ENABLE',
    'FMC_EXTENDED_MODE_DISABLE', 'FMC_EXTENDED_MODE_ENABLE',
    'FMC_ASYNCHRONOUS_WAIT_DISABLE', 'FMC_ASYNCHRONOUS_WAIT_ENABLE',
    'FMC_PAGE_SIZE_NONE', 'FMC_PAGE_SIZE_128', 'FMC_PAGE_SIZE_256', 'FMC_PAGE_SIZE_512',
    'FMC_PAGE_SIZE_1024', 'FMC_WRITE_BURST_DISABLE', 'FMC_WRITE_BURST_ENABLE',
    'FMC_CONTINUOUS_CLOCK_SYNC_ONLY', 'FMC_CONTINUOUS_CLOCK_SYNC_ASYNC',
    'FMC_WRITE_FIFO_DISABLE', 'FMC_WRITE_FIFO_ENABLE', 'FMC_ACCESS_MODE_A',
    'FMC_ACCESS_MODE_B', 'FMC_ACCESS_MODE_C', 'FMC_ACCESS_MODE_D', 'FMC_NAND_BANK3',
    'FMC_NAND_WAIT_FEATURE_DISABLE', 'FMC_NAND_WAIT_FEATURE_ENABLE',
    'FMC_PCR_MEMORY_TYPE_NAND', 'FMC_NAND_MEM_BUS_WIDTH_8', 'FMC_NAND_MEM_BUS_WIDTH_16',
    'FMC_NAND_ECC_DISABLE', 'FMC_NAND_ECC_ENABLE', 'FMC_NAND_ECC_PAGE_SIZE_256BYTE',
    'FMC_NAND_ECC_PAGE_SIZE_512BYTE', 'FMC_NAND_ECC_PAGE_SIZE_1024BYTE',
    'FMC_NAND_ECC_PAGE_SIZE_2048BYTE', 'FMC_NAND_ECC_PAGE_SIZE_4096BYTE',
    'FMC_NAND_ECC_PAGE_SIZE_8192BYTE', 'FMC_SDRAM_BANK1', 'FMC_SDRAM_BANK2',
    'FMC_SDRAM_COLUMN_BITS_NUM_8', 'FMC_SDRAM_COLUMN_BITS_NUM_9',
    'FMC_SDRAM_COLUMN_BITS_NUM_10', 'FMC_SDRAM_COLUMN_BITS_NUM_11',
    'FMC_SDRAM_ROW_BITS_NUM_11', 'FMC_SDRAM_ROW_BITS_NUM_12',
    'FMC_SDRAM_ROW_BITS_NUM_13', 'FMC_SDRAM_MEM_BUS_WIDTH_8',
    'FMC_SDRAM_MEM_BUS_WIDTH_16', 'FMC_SDRAM_MEM_BUS_WIDTH_32',
    'FMC_SDRAM_INTERN_BANKS_NUM_2', 'FMC_SDRAM_INTERN_BANKS_NUM_4',
    'FMC_SDRAM_CAS_LATENCY_1', 'FMC_SDRAM_CAS_LATENCY_2', 'FMC_SDRAM_CAS_LATENCY_3',
    'FMC_SDRAM_WRITE_PROTECTION_DISABLE', 'FMC_SDRAM_WRITE_PROTECTION_ENABLE',
    'FMC_SDRAM_CLOCK_DISABLE', 'FMC_SDRAM_CLOCK_PERIOD_2', 'FMC_SDRAM_CLOCK_PERIOD_3',
    'FMC_SDRAM_RBURST_DISABLE', 'FMC_SDRAM_RBURST_ENABLE', 'FMC_SDRAM_RPIPE_DELAY_0',
    'FMC_SDRAM_RPIPE_DELAY_1', 'FMC_SDRAM_RPIPE_DELAY_2', 'FMC_SDRAM_CMD_NORMAL_MODE',
    'FMC_SDRAM_CMD_CLK_ENABLE', 'FMC_SDRAM_CMD_PALL', 'FMC_SDRAM_CMD_AUTOREFRESH_MODE',
    'FMC_SDRAM_CMD_LOAD_MODE', 'FMC_SDRAM_CMD_SELFREFRESH_MODE',
    'FMC_SDRAM_CMD_POWERDOWN_MODE', 'FMC_SDRAM_CMD_TARGET_BANK2',
    'FMC_SDRAM_CMD_TARGET_BANK1', 'FMC_SDRAM_CMD_TARGET_BANK1_2',
    'FMC_SDRAM_NORMAL_MODE', 'FMC_SDRAM_SELF_REFRESH_MODE', 'FMC_SDRAM_POWER_DOWN_MODE',
    'FMC_IT_RISING_EDGE', 'FMC_IT_LEVEL', 'FMC_IT_FALLING_EDGE', 'FMC_IT_REFRESH_ERROR',
    'FMC_FLAG_RISING_EDGE', 'FMC_FLAG_LEVEL', 'FMC_FLAG_FALLING_EDGE', 'FMC_FLAG_FEMPT',
    'FMC_SDRAM_FLAG_REFRESH_IT', 'FMC_SDRAM_FLAG_BUSY', 'FMC_SDRAM_FLAG_REFRESH_ERROR',
    'FMC_NORSRAM_InitTypeDef', 'FMC_NORSRAM_TimingTypeDef', 'FMC_NAND_InitTypeDef',
    'FMC_NAND_PCC_TimingTypeDef', 'FMC_SDRAM_InitTypeDef', 'FMC_SDRAM_TimingTypeDef',
    'FMC_SDRAM_CommandTypeDef', 'ADC_SQR1_REGOFFSET', 'ADC_SQR2_REGOFFSET',
    'ADC_SQR3_REGOFFSET', 'ADC_SQR4_REGOFFSET', 'ADC_REG_SQRX_REGOFFSET_MASK',
    'ADC_REG_RANK_ID_SQRX_MASK', 'ADC_REG_RANK_1_SQRX_BITOFFSET_POS',
    'ADC_REG_RANK_2_SQRX_BITOFFSET_POS', 'ADC_REG_RANK_3_SQRX_BITOFFSET_POS',
    'ADC_REG_RANK_4_SQRX_BITOFFSET_POS', 'ADC_REG_RANK_5_SQRX_BITOFFSET_POS',
    'ADC_REG_RANK_6_SQRX_BITOFFSET_POS', 'ADC_REG_RANK_7_SQRX_BITOFFSET_POS',
    'ADC_REG_RANK_8_SQRX_BITOFFSET_POS', 'ADC_REG_RANK_9_SQRX_BITOFFSET_POS',
    'ADC_REG_RANK_10_SQRX_BITOFFSET_POS', 'ADC_REG_RANK_11_SQRX_BITOFFSET_POS',
    'ADC_REG_RANK_12_SQRX_BITOFFSET_POS', 'ADC_REG_RANK_13_SQRX_BITOFFSET_POS',
    'ADC_REG_RANK_14_SQRX_BITOFFSET_POS', 'ADC_REG_RANK_15_SQRX_BITOFFSET_POS',
    'ADC_REG_RANK_16_SQRX_BITOFFSET_POS', 'ADC_JDR1_REGOFFSET', 'ADC_JDR2_REGOFFSET',
    'ADC_JDR3_REGOFFSET', 'ADC_JDR4_REGOFFSET', 'ADC_JOFR1_REGOFFSET',
    'ADC_JOFR2_REGOFFSET', 'ADC_JOFR3_REGOFFSET', 'ADC_JOFR4_REGOFFSET',
    'ADC_INJ_JDRX_REGOFFSET_MASK', 'ADC_INJ_JOFRX_REGOFFSET_MASK',
    'ADC_INJ_RANK_ID_JSQR_MASK', 'ADC_REG_TRIG_EXT_EDGE_DEFAULT',
    'ADC_REG_TRIG_SOURCE_MASK', 'ADC_REG_TRIG_EDGE_MASK',
    'ADC_REG_TRIG_EXTSEL_BITOFFSET_POS', 'ADC_REG_TRIG_EXTEN_BITOFFSET_POS',
    'ADC_INJ_TRIG_EXT_EDGE_DEFAULT', 'ADC_INJ_TRIG_SOURCE_MASK',
    'ADC_INJ_TRIG_EDGE_MASK', 'ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS',
    'ADC_INJ_TRIG_EXTEN_BITOFFSET_POS', 'ADC_CHANNEL_ID_NUMBER_MASK',
    'ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS', 'ADC_CHANNEL_ID_MASK',
    'ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0', 'ADC_CHANNEL_ID_INTERNAL_CH',
    'ADC_CHANNEL_ID_INTERNAL_CH_2', 'ADC_CHANNEL_DIFFERENCIATION_TEMPSENSOR_VBAT',
    'ADC_CHANNEL_ID_INTERNAL_CH_MASK', 'ADC_SMPR1_REGOFFSET', 'ADC_SMPR2_REGOFFSET',
    'ADC_CHANNEL_SMPRX_REGOFFSET_MASK', 'ADC_CHANNEL_SMPx_BITOFFSET_MASK',
    'ADC_CHANNEL_SMPx_BITOFFSET_POS', 'ADC_CHANNEL_0_NUMBER', 'ADC_CHANNEL_1_NUMBER',
    'ADC_CHANNEL_2_NUMBER', 'ADC_CHANNEL_3_NUMBER', 'ADC_CHANNEL_4_NUMBER',
    'ADC_CHANNEL_5_NUMBER', 'ADC_CHANNEL_6_NUMBER', 'ADC_CHANNEL_7_NUMBER',
    'ADC_CHANNEL_8_NUMBER', 'ADC_CHANNEL_9_NUMBER', 'ADC_CHANNEL_10_NUMBER',
    'ADC_CHANNEL_11_NUMBER', 'ADC_CHANNEL_12_NUMBER', 'ADC_CHANNEL_13_NUMBER',
    'ADC_CHANNEL_14_NUMBER', 'ADC_CHANNEL_15_NUMBER', 'ADC_CHANNEL_16_NUMBER',
    'ADC_CHANNEL_17_NUMBER', 'ADC_CHANNEL_18_NUMBER', 'ADC_CHANNEL_0_SMP',
    'ADC_CHANNEL_1_SMP', 'ADC_CHANNEL_2_SMP', 'ADC_CHANNEL_3_SMP', 'ADC_CHANNEL_4_SMP',
    'ADC_CHANNEL_5_SMP', 'ADC_CHANNEL_6_SMP', 'ADC_CHANNEL_7_SMP', 'ADC_CHANNEL_8_SMP',
    'ADC_CHANNEL_9_SMP', 'ADC_CHANNEL_10_SMP', 'ADC_CHANNEL_11_SMP',
    'ADC_CHANNEL_12_SMP', 'ADC_CHANNEL_13_SMP', 'ADC_CHANNEL_14_SMP',
    'ADC_CHANNEL_15_SMP', 'ADC_CHANNEL_16_SMP', 'ADC_CHANNEL_17_SMP',
    'ADC_CHANNEL_18_SMP', 'ADC_AWD_CR1_REGOFFSET', 'ADC_AWD_CRX_REGOFFSET_MASK',
    'ADC_AWD_CR1_CHANNEL_MASK', 'ADC_AWD_CR_ALL_CHANNEL_MASK',
    'ADC_AWD_TR1_HIGH_REGOFFSET', 'ADC_AWD_TR1_LOW_REGOFFSET',
    'ADC_AWD_TRX_REGOFFSET_MASK', 'ADC_CR1_RES_BITOFFSET_POS',
    'ADC_TR_HT_BITOFFSET_POS', 'VREFINT_CAL_ADDR', 'VREFINT_CAL_VREF',
    'TEMPSENSOR_CAL1_ADDR', 'TEMPSENSOR_CAL2_ADDR', 'TEMPSENSOR_CAL1_TEMP',
    'TEMPSENSOR_CAL2_TEMP', 'TEMPSENSOR_CAL_VREFANALOG', 'LL_ADC_FLAG_STRT',
    'LL_ADC_FLAG_EOCS', 'LL_ADC_FLAG_OVR', 'LL_ADC_FLAG_JSTRT', 'LL_ADC_FLAG_JEOS',
    'LL_ADC_FLAG_AWD1', 'LL_ADC_FLAG_EOCS_MST', 'LL_ADC_FLAG_EOCS_SLV1',
    'LL_ADC_FLAG_EOCS_SLV2', 'LL_ADC_FLAG_OVR_MST', 'LL_ADC_FLAG_OVR_SLV1',
    'LL_ADC_FLAG_OVR_SLV2', 'LL_ADC_FLAG_JEOS_MST', 'LL_ADC_FLAG_JEOS_SLV1',
    'LL_ADC_FLAG_JEOS_SLV2', 'LL_ADC_FLAG_AWD1_MST', 'LL_ADC_FLAG_AWD1_SLV1',
    'LL_ADC_FLAG_AWD1_SLV2', 'LL_ADC_IT_EOCS', 'LL_ADC_IT_OVR', 'LL_ADC_IT_JEOS',
    'LL_ADC_IT_AWD1', 'LL_ADC_DMA_REG_REGULAR_DATA',
    'LL_ADC_DMA_REG_REGULAR_DATA_MULTI', 'LL_ADC_CLOCK_SYNC_PCLK_DIV2',
    'LL_ADC_CLOCK_SYNC_PCLK_DIV4', 'LL_ADC_CLOCK_SYNC_PCLK_DIV6',
    'LL_ADC_CLOCK_SYNC_PCLK_DIV8', 'LL_ADC_PATH_INTERNAL_NONE',
    'LL_ADC_PATH_INTERNAL_VREFINT', 'LL_ADC_PATH_INTERNAL_TEMPSENSOR',
    'LL_ADC_PATH_INTERNAL_VBAT', 'LL_ADC_RESOLUTION_12B', 'LL_ADC_RESOLUTION_10B',
    'LL_ADC_RESOLUTION_8B', 'LL_ADC_RESOLUTION_6B', 'LL_ADC_DATA_ALIGN_RIGHT',
    'LL_ADC_DATA_ALIGN_LEFT', 'LL_ADC_SEQ_SCAN_DISABLE', 'LL_ADC_SEQ_SCAN_ENABLE',
    'LL_ADC_GROUP_REGULAR', 'LL_ADC_GROUP_INJECTED', 'LL_ADC_GROUP_REGULAR_INJECTED',
    'LL_ADC_CHANNEL_0', 'LL_ADC_CHANNEL_1', 'LL_ADC_CHANNEL_2', 'LL_ADC_CHANNEL_3',
    'LL_ADC_CHANNEL_4', 'LL_ADC_CHANNEL_5', 'LL_ADC_CHANNEL_6', 'LL_ADC_CHANNEL_7',
    'LL_ADC_CHANNEL_8', 'LL_ADC_CHANNEL_9', 'LL_ADC_CHANNEL_10', 'LL_ADC_CHANNEL_11',
    'LL_ADC_CHANNEL_12', 'LL_ADC_CHANNEL_13', 'LL_ADC_CHANNEL_14', 'LL_ADC_CHANNEL_15',
    'LL_ADC_CHANNEL_16', 'LL_ADC_CHANNEL_17', 'LL_ADC_CHANNEL_18',
    'LL_ADC_CHANNEL_VREFINT', 'LL_ADC_CHANNEL_VBAT', 'LL_ADC_CHANNEL_TEMPSENSOR',
    'LL_ADC_REG_TRIG_SOFTWARE', 'LL_ADC_REG_TRIG_EXT_TIM1_CH1',
    'LL_ADC_REG_TRIG_EXT_TIM1_CH2', 'LL_ADC_REG_TRIG_EXT_TIM1_CH3',
    'LL_ADC_REG_TRIG_EXT_TIM2_CH2', 'LL_ADC_REG_TRIG_EXT_TIM5_TRGO',
    'LL_ADC_REG_TRIG_EXT_TIM4_CH4', 'LL_ADC_REG_TRIG_EXT_TIM3_CH4',
    'LL_ADC_REG_TRIG_EXT_TIM8_TRGO', 'LL_ADC_REG_TRIG_EXT_TIM8_TRGO2',
    'LL_ADC_REG_TRIG_EXT_TIM1_TRGO', 'LL_ADC_REG_TRIG_EXT_TIM1_TRGO2',
    'LL_ADC_REG_TRIG_EXT_TIM2_TRGO', 'LL_ADC_REG_TRIG_EXT_TIM4_TRGO',
    'LL_ADC_REG_TRIG_EXT_TIM6_TRGO', 'LL_ADC_REG_TRIG_EXT_EXTI_LINE11',
    'LL_ADC_REG_TRIG_EXT_RISING', 'LL_ADC_REG_TRIG_EXT_FALLING',
    'LL_ADC_REG_TRIG_EXT_RISINGFALLING', 'LL_ADC_REG_CONV_SINGLE',
    'LL_ADC_REG_CONV_CONTINUOUS', 'LL_ADC_REG_DMA_TRANSFER_NONE',
    'LL_ADC_REG_DMA_TRANSFER_LIMITED', 'LL_ADC_REG_DMA_TRANSFER_UNLIMITED',
    'LL_ADC_REG_FLAG_EOC_SEQUENCE_CONV', 'LL_ADC_REG_FLAG_EOC_UNITARY_CONV',
    'LL_ADC_REG_SEQ_SCAN_DISABLE', 'LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS',
    'LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS', 'LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS',
    'LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS', 'LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS',
    'LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS', 'LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS',
    'LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS', 'LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS',
    'LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS', 'LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS',
    'LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS', 'LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS',
    'LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS', 'LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS',
    'LL_ADC_REG_SEQ_DISCONT_DISABLE', 'LL_ADC_REG_SEQ_DISCONT_1RANK',
    'LL_ADC_REG_SEQ_DISCONT_2RANKS', 'LL_ADC_REG_SEQ_DISCONT_3RANKS',
    'LL_ADC_REG_SEQ_DISCONT_4RANKS', 'LL_ADC_REG_SEQ_DISCONT_5RANKS',
    'LL_ADC_REG_SEQ_DISCONT_6RANKS', 'LL_ADC_REG_SEQ_DISCONT_7RANKS',
    'LL_ADC_REG_SEQ_DISCONT_8RANKS', 'LL_ADC_REG_RANK_1', 'LL_ADC_REG_RANK_2',
    'LL_ADC_REG_RANK_3', 'LL_ADC_REG_RANK_4', 'LL_ADC_REG_RANK_5', 'LL_ADC_REG_RANK_6',
    'LL_ADC_REG_RANK_7', 'LL_ADC_REG_RANK_8', 'LL_ADC_REG_RANK_9', 'LL_ADC_REG_RANK_10',
    'LL_ADC_REG_RANK_11', 'LL_ADC_REG_RANK_12', 'LL_ADC_REG_RANK_13',
    'LL_ADC_REG_RANK_14', 'LL_ADC_REG_RANK_15', 'LL_ADC_REG_RANK_16',
    'LL_ADC_INJ_TRIG_SOFTWARE', 'LL_ADC_INJ_TRIG_EXT_TIM1_TRGO',
    'LL_ADC_INJ_TRIG_EXT_TIM1_CH4', 'LL_ADC_INJ_TRIG_EXT_TIM2_TRGO',
    'LL_ADC_INJ_TRIG_EXT_TIM2_CH1', 'LL_ADC_INJ_TRIG_EXT_TIM3_CH4',
    'LL_ADC_INJ_TRIG_EXT_TIM4_TRGO', 'LL_ADC_INJ_TRIG_EXT_TIM8_CH4',
    'LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2', 'LL_ADC_INJ_TRIG_EXT_TIM8_TRGO',
    'LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2', 'LL_ADC_INJ_TRIG_EXT_TIM3_CH3',
    'LL_ADC_INJ_TRIG_EXT_TIM5_TRGO', 'LL_ADC_INJ_TRIG_EXT_TIM3_CH1',
    'LL_ADC_INJ_TRIG_EXT_TIM6_TRGO', 'LL_ADC_INJ_TRIG_EXT_RISING',
    'LL_ADC_INJ_TRIG_EXT_FALLING', 'LL_ADC_INJ_TRIG_EXT_RISINGFALLING',
    'LL_ADC_INJ_TRIG_INDEPENDENT', 'LL_ADC_INJ_TRIG_FROM_GRP_REGULAR',
    'LL_ADC_INJ_SEQ_SCAN_DISABLE', 'LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS',
    'LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS', 'LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS',
    'LL_ADC_INJ_SEQ_DISCONT_DISABLE', 'LL_ADC_INJ_SEQ_DISCONT_1RANK',
    'LL_ADC_INJ_RANK_1', 'LL_ADC_INJ_RANK_2', 'LL_ADC_INJ_RANK_3', 'LL_ADC_INJ_RANK_4',
    'LL_ADC_SAMPLINGTIME_3CYCLES', 'LL_ADC_SAMPLINGTIME_15CYCLES',
    'LL_ADC_SAMPLINGTIME_28CYCLES', 'LL_ADC_SAMPLINGTIME_56CYCLES',
    'LL_ADC_SAMPLINGTIME_84CYCLES', 'LL_ADC_SAMPLINGTIME_112CYCLES',
    'LL_ADC_SAMPLINGTIME_144CYCLES', 'LL_ADC_SAMPLINGTIME_480CYCLES', 'LL_ADC_AWD1',
    'LL_ADC_AWD_DISABLE', 'LL_ADC_AWD_ALL_CHANNELS_REG', 'LL_ADC_AWD_ALL_CHANNELS_INJ',
    'LL_ADC_AWD_ALL_CHANNELS_REG_INJ', 'LL_ADC_AWD_CHANNEL_0_REG',
    'LL_ADC_AWD_CHANNEL_0_INJ', 'LL_ADC_AWD_CHANNEL_0_REG_INJ',
    'LL_ADC_AWD_CHANNEL_1_REG', 'LL_ADC_AWD_CHANNEL_1_INJ',
    'LL_ADC_AWD_CHANNEL_1_REG_INJ', 'LL_ADC_AWD_CHANNEL_2_REG',
    'LL_ADC_AWD_CHANNEL_2_INJ', 'LL_ADC_AWD_CHANNEL_2_REG_INJ',
    'LL_ADC_AWD_CHANNEL_3_REG', 'LL_ADC_AWD_CHANNEL_3_INJ',
    'LL_ADC_AWD_CHANNEL_3_REG_INJ', 'LL_ADC_AWD_CHANNEL_4_REG',
    'LL_ADC_AWD_CHANNEL_4_INJ', 'LL_ADC_AWD_CHANNEL_4_REG_INJ',
    'LL_ADC_AWD_CHANNEL_5_REG', 'LL_ADC_AWD_CHANNEL_5_INJ',
    'LL_ADC_AWD_CHANNEL_5_REG_INJ', 'LL_ADC_AWD_CHANNEL_6_REG',
    'LL_ADC_AWD_CHANNEL_6_INJ', 'LL_ADC_AWD_CHANNEL_6_REG_INJ',
    'LL_ADC_AWD_CHANNEL_7_REG', 'LL_ADC_AWD_CHANNEL_7_INJ',
    'LL_ADC_AWD_CHANNEL_7_REG_INJ', 'LL_ADC_AWD_CHANNEL_8_REG',
    'LL_ADC_AWD_CHANNEL_8_INJ', 'LL_ADC_AWD_CHANNEL_8_REG_INJ',
    'LL_ADC_AWD_CHANNEL_9_REG', 'LL_ADC_AWD_CHANNEL_9_INJ',
    'LL_ADC_AWD_CHANNEL_9_REG_INJ', 'LL_ADC_AWD_CHANNEL_10_REG',
    'LL_ADC_AWD_CHANNEL_10_INJ', 'LL_ADC_AWD_CHANNEL_10_REG_INJ',
    'LL_ADC_AWD_CHANNEL_11_REG', 'LL_ADC_AWD_CHANNEL_11_INJ',
    'LL_ADC_AWD_CHANNEL_11_REG_INJ', 'LL_ADC_AWD_CHANNEL_12_REG',
    'LL_ADC_AWD_CHANNEL_12_INJ', 'LL_ADC_AWD_CHANNEL_12_REG_INJ',
    'LL_ADC_AWD_CHANNEL_13_REG', 'LL_ADC_AWD_CHANNEL_13_INJ',
    'LL_ADC_AWD_CHANNEL_13_REG_INJ', 'LL_ADC_AWD_CHANNEL_14_REG',
    'LL_ADC_AWD_CHANNEL_14_INJ', 'LL_ADC_AWD_CHANNEL_14_REG_INJ',
    'LL_ADC_AWD_CHANNEL_15_REG', 'LL_ADC_AWD_CHANNEL_15_INJ',
    'LL_ADC_AWD_CHANNEL_15_REG_INJ', 'LL_ADC_AWD_CHANNEL_16_REG',
    'LL_ADC_AWD_CHANNEL_16_INJ', 'LL_ADC_AWD_CHANNEL_16_REG_INJ',
    'LL_ADC_AWD_CHANNEL_17_REG', 'LL_ADC_AWD_CHANNEL_17_INJ',
    'LL_ADC_AWD_CHANNEL_17_REG_INJ', 'LL_ADC_AWD_CHANNEL_18_REG',
    'LL_ADC_AWD_CHANNEL_18_INJ', 'LL_ADC_AWD_CHANNEL_18_REG_INJ',
    'LL_ADC_AWD_CH_VREFINT_REG', 'LL_ADC_AWD_CH_VREFINT_INJ',
    'LL_ADC_AWD_CH_VREFINT_REG_INJ', 'LL_ADC_AWD_CH_VBAT_REG', 'LL_ADC_AWD_CH_VBAT_INJ',
    'LL_ADC_AWD_CH_VBAT_REG_INJ', 'LL_ADC_AWD_CH_TEMPSENSOR_REG',
    'LL_ADC_AWD_CH_TEMPSENSOR_INJ', 'LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ',
    'LL_ADC_AWD_THRESHOLD_HIGH', 'LL_ADC_AWD_THRESHOLD_LOW', 'LL_ADC_MULTI_INDEPENDENT',
    'LL_ADC_MULTI_DUAL_REG_SIMULT', 'LL_ADC_MULTI_DUAL_REG_INTERL',
    'LL_ADC_MULTI_DUAL_INJ_SIMULT', 'LL_ADC_MULTI_DUAL_INJ_ALTERN',
    'LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM', 'LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT',
    'LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM', 'LL_ADC_MULTI_TRIPLE_REG_SIM_INJ_SIM',
    'LL_ADC_MULTI_TRIPLE_REG_SIM_INJ_ALT', 'LL_ADC_MULTI_TRIPLE_INJ_SIMULT',
    'LL_ADC_MULTI_TRIPLE_REG_SIMULT', 'LL_ADC_MULTI_TRIPLE_REG_INTERL',
    'LL_ADC_MULTI_TRIPLE_INJ_ALTERN', 'LL_ADC_MULTI_REG_DMA_EACH_ADC',
    'LL_ADC_MULTI_REG_DMA_LIMIT_1', 'LL_ADC_MULTI_REG_DMA_LIMIT_2',
    'LL_ADC_MULTI_REG_DMA_LIMIT_3', 'LL_ADC_MULTI_REG_DMA_UNLMT_1',
    'LL_ADC_MULTI_REG_DMA_UNLMT_2', 'LL_ADC_MULTI_REG_DMA_UNLMT_3',
    'LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES', 'LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES',
    'LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES', 'LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES',
    'LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES', 'LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES',
    'LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES', 'LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES',
    'LL_ADC_MULTI_TWOSMP_DELAY_13CYCLES', 'LL_ADC_MULTI_TWOSMP_DELAY_14CYCLES',
    'LL_ADC_MULTI_TWOSMP_DELAY_15CYCLES', 'LL_ADC_MULTI_TWOSMP_DELAY_16CYCLES',
    'LL_ADC_MULTI_TWOSMP_DELAY_17CYCLES', 'LL_ADC_MULTI_TWOSMP_DELAY_18CYCLES',
    'LL_ADC_MULTI_TWOSMP_DELAY_19CYCLES', 'LL_ADC_MULTI_TWOSMP_DELAY_20CYCLES',
    'LL_ADC_MULTI_MASTER', 'LL_ADC_MULTI_SLAVE', 'LL_ADC_MULTI_MASTER_SLAVE',
    'LL_ADC_DELAY_VREFINT_STAB_US', 'LL_ADC_DELAY_TEMPSENSOR_STAB_US',
    'LL_ADC_CommonInitTypeDef', 'LL_ADC_InitTypeDef', 'LL_ADC_REG_InitTypeDef',
    'LL_ADC_INJ_InitTypeDef', 'HSE_VALUE', 'HSI_VALUE', 'LSE_VALUE', 'LSI_VALUE',
    'EXTERNAL_CLOCK_VALUE', 'EXTERNAL_SAI1_CLOCK_VALUE', 'EXTERNAL_SAI2_CLOCK_VALUE',
    'LL_RCC_CIR_LSIRDYC', 'LL_RCC_CIR_LSERDYC', 'LL_RCC_CIR_HSIRDYC',
    'LL_RCC_CIR_HSERDYC', 'LL_RCC_CIR_PLLRDYC', 'LL_RCC_CIR_PLLI2SRDYC',
    'LL_RCC_CIR_PLLSAIRDYC', 'LL_RCC_CIR_CSSC', 'LL_RCC_CIR_LSIRDYF',
    'LL_RCC_CIR_LSERDYF', 'LL_RCC_CIR_HSIRDYF', 'LL_RCC_CIR_HSERDYF',
    'LL_RCC_CIR_PLLRDYF', 'LL_RCC_CIR_PLLI2SRDYF', 'LL_RCC_CIR_PLLSAIRDYF',
    'LL_RCC_CIR_CSSF', 'LL_RCC_CSR_LPWRRSTF', 'LL_RCC_CSR_PINRSTF',
    'LL_RCC_CSR_PORRSTF', 'LL_RCC_CSR_SFTRSTF', 'LL_RCC_CSR_IWDGRSTF',
    'LL_RCC_CSR_WWDGRSTF', 'LL_RCC_CSR_BORRSTF', 'LL_RCC_CIR_LSIRDYIE',
    'LL_RCC_CIR_LSERDYIE', 'LL_RCC_CIR_HSIRDYIE', 'LL_RCC_CIR_HSERDYIE',
    'LL_RCC_CIR_PLLRDYIE', 'LL_RCC_CIR_PLLI2SRDYIE', 'LL_RCC_CIR_PLLSAIRDYIE',
    'LL_RCC_LSEDRIVE_LOW', 'LL_RCC_LSEDRIVE_MEDIUMHIGH', 'LL_RCC_LSEDRIVE_MEDIUMLOW',
    'LL_RCC_LSEDRIVE_HIGH', 'LL_RCC_SYS_CLKSOURCE_HSI', 'LL_RCC_SYS_CLKSOURCE_HSE',
    'LL_RCC_SYS_CLKSOURCE_PLL', 'LL_RCC_SYS_CLKSOURCE_STATUS_HSI',
    'LL_RCC_SYS_CLKSOURCE_STATUS_HSE', 'LL_RCC_SYS_CLKSOURCE_STATUS_PLL',
    'LL_RCC_SYSCLK_DIV_1', 'LL_RCC_SYSCLK_DIV_2', 'LL_RCC_SYSCLK_DIV_4',
    'LL_RCC_SYSCLK_DIV_8', 'LL_RCC_SYSCLK_DIV_16', 'LL_RCC_SYSCLK_DIV_64',
    'LL_RCC_SYSCLK_DIV_128', 'LL_RCC_SYSCLK_DIV_256', 'LL_RCC_SYSCLK_DIV_512',
    'LL_RCC_APB1_DIV_1', 'LL_RCC_APB1_DIV_2', 'LL_RCC_APB1_DIV_4', 'LL_RCC_APB1_DIV_8',
    'LL_RCC_APB1_DIV_16', 'LL_RCC_APB2_DIV_1', 'LL_RCC_APB2_DIV_2', 'LL_RCC_APB2_DIV_4',
    'LL_RCC_APB2_DIV_8', 'LL_RCC_APB2_DIV_16', 'LL_RCC_MCO1SOURCE_HSI',
    'LL_RCC_MCO1SOURCE_LSE', 'LL_RCC_MCO1SOURCE_HSE', 'LL_RCC_MCO1SOURCE_PLLCLK',
    'LL_RCC_MCO2SOURCE_SYSCLK', 'LL_RCC_MCO2SOURCE_PLLI2S', 'LL_RCC_MCO2SOURCE_HSE',
    'LL_RCC_MCO2SOURCE_PLLCLK', 'LL_RCC_MCO1_DIV_1', 'LL_RCC_MCO1_DIV_2',
    'LL_RCC_MCO1_DIV_3', 'LL_RCC_MCO1_DIV_4', 'LL_RCC_MCO1_DIV_5', 'LL_RCC_MCO2_DIV_1',
    'LL_RCC_MCO2_DIV_2', 'LL_RCC_MCO2_DIV_3', 'LL_RCC_MCO2_DIV_4', 'LL_RCC_MCO2_DIV_5',
    'LL_RCC_RTC_NOCLOCK', 'LL_RCC_RTC_HSE_DIV_2', 'LL_RCC_RTC_HSE_DIV_3',
    'LL_RCC_RTC_HSE_DIV_4', 'LL_RCC_RTC_HSE_DIV_5', 'LL_RCC_RTC_HSE_DIV_6',
    'LL_RCC_RTC_HSE_DIV_7', 'LL_RCC_RTC_HSE_DIV_8', 'LL_RCC_RTC_HSE_DIV_9',
    'LL_RCC_RTC_HSE_DIV_10', 'LL_RCC_RTC_HSE_DIV_11', 'LL_RCC_RTC_HSE_DIV_12',
    'LL_RCC_RTC_HSE_DIV_13', 'LL_RCC_RTC_HSE_DIV_14', 'LL_RCC_RTC_HSE_DIV_15',
    'LL_RCC_RTC_HSE_DIV_16', 'LL_RCC_RTC_HSE_DIV_17', 'LL_RCC_RTC_HSE_DIV_18',
    'LL_RCC_RTC_HSE_DIV_19', 'LL_RCC_RTC_HSE_DIV_20', 'LL_RCC_RTC_HSE_DIV_21',
    'LL_RCC_RTC_HSE_DIV_22', 'LL_RCC_RTC_HSE_DIV_23', 'LL_RCC_RTC_HSE_DIV_24',
    'LL_RCC_RTC_HSE_DIV_25', 'LL_RCC_RTC_HSE_DIV_26', 'LL_RCC_RTC_HSE_DIV_27',
    'LL_RCC_RTC_HSE_DIV_28', 'LL_RCC_RTC_HSE_DIV_29', 'LL_RCC_RTC_HSE_DIV_30',
    'LL_RCC_RTC_HSE_DIV_31', 'LL_RCC_PERIPH_FREQUENCY_NO', 'LL_RCC_PERIPH_FREQUENCY_NA',
    'LL_RCC_USART1_CLKSOURCE_PCLK2', 'LL_RCC_USART1_CLKSOURCE_SYSCLK',
    'LL_RCC_USART1_CLKSOURCE_HSI', 'LL_RCC_USART1_CLKSOURCE_LSE',
    'LL_RCC_USART2_CLKSOURCE_PCLK1', 'LL_RCC_USART2_CLKSOURCE_SYSCLK',
    'LL_RCC_USART2_CLKSOURCE_HSI', 'LL_RCC_USART2_CLKSOURCE_LSE',
    'LL_RCC_USART3_CLKSOURCE_PCLK1', 'LL_RCC_USART3_CLKSOURCE_SYSCLK',
    'LL_RCC_USART3_CLKSOURCE_HSI', 'LL_RCC_USART3_CLKSOURCE_LSE',
    'LL_RCC_USART6_CLKSOURCE_PCLK2', 'LL_RCC_USART6_CLKSOURCE_SYSCLK',
    'LL_RCC_USART6_CLKSOURCE_HSI', 'LL_RCC_USART6_CLKSOURCE_LSE',
    'LL_RCC_UART4_CLKSOURCE_PCLK1', 'LL_RCC_UART4_CLKSOURCE_SYSCLK',
    'LL_RCC_UART4_CLKSOURCE_HSI', 'LL_RCC_UART4_CLKSOURCE_LSE',
    'LL_RCC_UART5_CLKSOURCE_PCLK1', 'LL_RCC_UART5_CLKSOURCE_SYSCLK',
    'LL_RCC_UART5_CLKSOURCE_HSI', 'LL_RCC_UART5_CLKSOURCE_LSE',
    'LL_RCC_UART7_CLKSOURCE_PCLK1', 'LL_RCC_UART7_CLKSOURCE_SYSCLK',
    'LL_RCC_UART7_CLKSOURCE_HSI', 'LL_RCC_UART7_CLKSOURCE_LSE',
    'LL_RCC_UART8_CLKSOURCE_PCLK1', 'LL_RCC_UART8_CLKSOURCE_SYSCLK',
    'LL_RCC_UART8_CLKSOURCE_HSI', 'LL_RCC_UART8_CLKSOURCE_LSE',
    'LL_RCC_I2C1_CLKSOURCE_PCLK1', 'LL_RCC_I2C1_CLKSOURCE_SYSCLK',
    'LL_RCC_I2C1_CLKSOURCE_HSI', 'LL_RCC_I2C2_CLKSOURCE_PCLK1',
    'LL_RCC_I2C2_CLKSOURCE_SYSCLK', 'LL_RCC_I2C2_CLKSOURCE_HSI',
    'LL_RCC_I2C3_CLKSOURCE_PCLK1', 'LL_RCC_I2C3_CLKSOURCE_SYSCLK',
    'LL_RCC_I2C3_CLKSOURCE_HSI', 'LL_RCC_I2C4_CLKSOURCE_PCLK1',
    'LL_RCC_I2C4_CLKSOURCE_SYSCLK', 'LL_RCC_I2C4_CLKSOURCE_HSI',
    'LL_RCC_LPTIM1_CLKSOURCE_PCLK1', 'LL_RCC_LPTIM1_CLKSOURCE_LSI',
    'LL_RCC_LPTIM1_CLKSOURCE_HSI', 'LL_RCC_LPTIM1_CLKSOURCE_LSE',
    'LL_RCC_SAI1_CLKSOURCE_PLLSAI', 'LL_RCC_SAI1_CLKSOURCE_PLLI2S',
    'LL_RCC_SAI1_CLKSOURCE_PIN', 'LL_RCC_SAI2_CLKSOURCE_PLLSAI',
    'LL_RCC_SAI2_CLKSOURCE_PLLI2S', 'LL_RCC_SAI2_CLKSOURCE_PIN',
    'LL_RCC_SDMMC1_CLKSOURCE_PLL48CLK', 'LL_RCC_SDMMC1_CLKSOURCE_SYSCLK',
    'LL_RCC_RNG_CLKSOURCE_PLL', 'LL_RCC_RNG_CLKSOURCE_PLLSAI',
    'LL_RCC_USB_CLKSOURCE_PLL', 'LL_RCC_USB_CLKSOURCE_PLLSAI',
    'LL_RCC_CEC_CLKSOURCE_LSE', 'LL_RCC_CEC_CLKSOURCE_HSI_DIV488',
    'LL_RCC_I2S1_CLKSOURCE_PLLI2S', 'LL_RCC_I2S1_CLKSOURCE_PIN',
    'LL_RCC_CK48M_CLKSOURCE_PLL', 'LL_RCC_CK48M_CLKSOURCE_PLLSAI',
    'LL_RCC_USART1_CLKSOURCE', 'LL_RCC_USART2_CLKSOURCE', 'LL_RCC_USART3_CLKSOURCE',
    'LL_RCC_USART6_CLKSOURCE', 'LL_RCC_UART4_CLKSOURCE', 'LL_RCC_UART5_CLKSOURCE',
    'LL_RCC_UART7_CLKSOURCE', 'LL_RCC_UART8_CLKSOURCE', 'LL_RCC_I2C1_CLKSOURCE',
    'LL_RCC_I2C2_CLKSOURCE', 'LL_RCC_I2C3_CLKSOURCE', 'LL_RCC_I2C4_CLKSOURCE',
    'LL_RCC_LPTIM1_CLKSOURCE', 'LL_RCC_SAI1_CLKSOURCE', 'LL_RCC_SAI2_CLKSOURCE',
    'LL_RCC_SDMMC1_CLKSOURCE', 'LL_RCC_CK48M_CLKSOURCE', 'LL_RCC_RNG_CLKSOURCE',
    'LL_RCC_USB_CLKSOURCE', 'LL_RCC_CEC_CLKSOURCE', 'LL_RCC_I2S1_CLKSOURCE',
    'LL_RCC_LTDC_CLKSOURCE', 'LL_RCC_SPDIFRX1_CLKSOURCE', 'LL_RCC_RTC_CLKSOURCE_NONE',
    'LL_RCC_RTC_CLKSOURCE_LSE', 'LL_RCC_RTC_CLKSOURCE_LSI', 'LL_RCC_RTC_CLKSOURCE_HSE',
    'LL_RCC_TIM_PRESCALER_TWICE', 'LL_RCC_TIM_PRESCALER_FOUR_TIMES',
    'LL_RCC_PLLSOURCE_HSI', 'LL_RCC_PLLSOURCE_HSE', 'LL_RCC_PLLM_DIV_2',
    'LL_RCC_PLLM_DIV_3', 'LL_RCC_PLLM_DIV_4', 'LL_RCC_PLLM_DIV_5', 'LL_RCC_PLLM_DIV_6',
    'LL_RCC_PLLM_DIV_7', 'LL_RCC_PLLM_DIV_8', 'LL_RCC_PLLM_DIV_9', 'LL_RCC_PLLM_DIV_10',
    'LL_RCC_PLLM_DIV_11', 'LL_RCC_PLLM_DIV_12', 'LL_RCC_PLLM_DIV_13',
    'LL_RCC_PLLM_DIV_14', 'LL_RCC_PLLM_DIV_15', 'LL_RCC_PLLM_DIV_16',
    'LL_RCC_PLLM_DIV_17', 'LL_RCC_PLLM_DIV_18', 'LL_RCC_PLLM_DIV_19',
    'LL_RCC_PLLM_DIV_20', 'LL_RCC_PLLM_DIV_21', 'LL_RCC_PLLM_DIV_22',
    'LL_RCC_PLLM_DIV_23', 'LL_RCC_PLLM_DIV_24', 'LL_RCC_PLLM_DIV_25',
    'LL_RCC_PLLM_DIV_26', 'LL_RCC_PLLM_DIV_27', 'LL_RCC_PLLM_DIV_28',
    'LL_RCC_PLLM_DIV_29', 'LL_RCC_PLLM_DIV_30', 'LL_RCC_PLLM_DIV_31',
    'LL_RCC_PLLM_DIV_32', 'LL_RCC_PLLM_DIV_33', 'LL_RCC_PLLM_DIV_34',
    'LL_RCC_PLLM_DIV_35', 'LL_RCC_PLLM_DIV_36', 'LL_RCC_PLLM_DIV_37',
    'LL_RCC_PLLM_DIV_38', 'LL_RCC_PLLM_DIV_39', 'LL_RCC_PLLM_DIV_40',
    'LL_RCC_PLLM_DIV_41', 'LL_RCC_PLLM_DIV_42', 'LL_RCC_PLLM_DIV_43',
    'LL_RCC_PLLM_DIV_44', 'LL_RCC_PLLM_DIV_45', 'LL_RCC_PLLM_DIV_46',
    'LL_RCC_PLLM_DIV_47', 'LL_RCC_PLLM_DIV_48', 'LL_RCC_PLLM_DIV_49',
    'LL_RCC_PLLM_DIV_50', 'LL_RCC_PLLM_DIV_51', 'LL_RCC_PLLM_DIV_52',
    'LL_RCC_PLLM_DIV_53', 'LL_RCC_PLLM_DIV_54', 'LL_RCC_PLLM_DIV_55',
    'LL_RCC_PLLM_DIV_56', 'LL_RCC_PLLM_DIV_57', 'LL_RCC_PLLM_DIV_58',
    'LL_RCC_PLLM_DIV_59', 'LL_RCC_PLLM_DIV_60', 'LL_RCC_PLLM_DIV_61',
    'LL_RCC_PLLM_DIV_62', 'LL_RCC_PLLM_DIV_63', 'LL_RCC_PLLP_DIV_2',
    'LL_RCC_PLLP_DIV_4', 'LL_RCC_PLLP_DIV_6', 'LL_RCC_PLLP_DIV_8', 'LL_RCC_PLLQ_DIV_2',
    'LL_RCC_PLLQ_DIV_3', 'LL_RCC_PLLQ_DIV_4', 'LL_RCC_PLLQ_DIV_5', 'LL_RCC_PLLQ_DIV_6',
    'LL_RCC_PLLQ_DIV_7', 'LL_RCC_PLLQ_DIV_8', 'LL_RCC_PLLQ_DIV_9', 'LL_RCC_PLLQ_DIV_10',
    'LL_RCC_PLLQ_DIV_11', 'LL_RCC_PLLQ_DIV_12', 'LL_RCC_PLLQ_DIV_13',
    'LL_RCC_PLLQ_DIV_14', 'LL_RCC_PLLQ_DIV_15', 'LL_RCC_SPREAD_SELECT_CENTER',
    'LL_RCC_SPREAD_SELECT_DOWN', 'LL_RCC_PLLI2SQ_DIV_2', 'LL_RCC_PLLI2SQ_DIV_3',
    'LL_RCC_PLLI2SQ_DIV_4', 'LL_RCC_PLLI2SQ_DIV_5', 'LL_RCC_PLLI2SQ_DIV_6',
    'LL_RCC_PLLI2SQ_DIV_7', 'LL_RCC_PLLI2SQ_DIV_8', 'LL_RCC_PLLI2SQ_DIV_9',
    'LL_RCC_PLLI2SQ_DIV_10', 'LL_RCC_PLLI2SQ_DIV_11', 'LL_RCC_PLLI2SQ_DIV_12',
    'LL_RCC_PLLI2SQ_DIV_13', 'LL_RCC_PLLI2SQ_DIV_14', 'LL_RCC_PLLI2SQ_DIV_15',
    'LL_RCC_PLLI2SDIVQ_DIV_1', 'LL_RCC_PLLI2SDIVQ_DIV_2', 'LL_RCC_PLLI2SDIVQ_DIV_3',
    'LL_RCC_PLLI2SDIVQ_DIV_4', 'LL_RCC_PLLI2SDIVQ_DIV_5', 'LL_RCC_PLLI2SDIVQ_DIV_6',
    'LL_RCC_PLLI2SDIVQ_DIV_7', 'LL_RCC_PLLI2SDIVQ_DIV_8', 'LL_RCC_PLLI2SDIVQ_DIV_9',
    'LL_RCC_PLLI2SDIVQ_DIV_10', 'LL_RCC_PLLI2SDIVQ_DIV_11', 'LL_RCC_PLLI2SDIVQ_DIV_12',
    'LL_RCC_PLLI2SDIVQ_DIV_13', 'LL_RCC_PLLI2SDIVQ_DIV_14', 'LL_RCC_PLLI2SDIVQ_DIV_15',
    'LL_RCC_PLLI2SDIVQ_DIV_16', 'LL_RCC_PLLI2SDIVQ_DIV_17', 'LL_RCC_PLLI2SDIVQ_DIV_18',
    'LL_RCC_PLLI2SDIVQ_DIV_19', 'LL_RCC_PLLI2SDIVQ_DIV_20', 'LL_RCC_PLLI2SDIVQ_DIV_21',
    'LL_RCC_PLLI2SDIVQ_DIV_22', 'LL_RCC_PLLI2SDIVQ_DIV_23', 'LL_RCC_PLLI2SDIVQ_DIV_24',
    'LL_RCC_PLLI2SDIVQ_DIV_25', 'LL_RCC_PLLI2SDIVQ_DIV_26', 'LL_RCC_PLLI2SDIVQ_DIV_27',
    'LL_RCC_PLLI2SDIVQ_DIV_28', 'LL_RCC_PLLI2SDIVQ_DIV_29', 'LL_RCC_PLLI2SDIVQ_DIV_30',
    'LL_RCC_PLLI2SDIVQ_DIV_31', 'LL_RCC_PLLI2SDIVQ_DIV_32', 'LL_RCC_PLLI2SR_DIV_2',
    'LL_RCC_PLLI2SR_DIV_3', 'LL_RCC_PLLI2SR_DIV_4', 'LL_RCC_PLLI2SR_DIV_5',
    'LL_RCC_PLLI2SR_DIV_6', 'LL_RCC_PLLI2SR_DIV_7', 'LL_RCC_PLLI2SP_DIV_2',
    'LL_RCC_PLLI2SP_DIV_4', 'LL_RCC_PLLI2SP_DIV_6', 'LL_RCC_PLLI2SP_DIV_8',
    'LL_RCC_PLLSAIQ_DIV_2', 'LL_RCC_PLLSAIQ_DIV_3', 'LL_RCC_PLLSAIQ_DIV_4',
    'LL_RCC_PLLSAIQ_DIV_5', 'LL_RCC_PLLSAIQ_DIV_6', 'LL_RCC_PLLSAIQ_DIV_7',
    'LL_RCC_PLLSAIQ_DIV_8', 'LL_RCC_PLLSAIQ_DIV_9', 'LL_RCC_PLLSAIQ_DIV_10',
    'LL_RCC_PLLSAIQ_DIV_11', 'LL_RCC_PLLSAIQ_DIV_12', 'LL_RCC_PLLSAIQ_DIV_13',
    'LL_RCC_PLLSAIQ_DIV_14', 'LL_RCC_PLLSAIQ_DIV_15', 'LL_RCC_PLLSAIDIVQ_DIV_1',
    'LL_RCC_PLLSAIDIVQ_DIV_2', 'LL_RCC_PLLSAIDIVQ_DIV_3', 'LL_RCC_PLLSAIDIVQ_DIV_4',
    'LL_RCC_PLLSAIDIVQ_DIV_5', 'LL_RCC_PLLSAIDIVQ_DIV_6', 'LL_RCC_PLLSAIDIVQ_DIV_7',
    'LL_RCC_PLLSAIDIVQ_DIV_8', 'LL_RCC_PLLSAIDIVQ_DIV_9', 'LL_RCC_PLLSAIDIVQ_DIV_10',
    'LL_RCC_PLLSAIDIVQ_DIV_11', 'LL_RCC_PLLSAIDIVQ_DIV_12', 'LL_RCC_PLLSAIDIVQ_DIV_13',
    'LL_RCC_PLLSAIDIVQ_DIV_14', 'LL_RCC_PLLSAIDIVQ_DIV_15', 'LL_RCC_PLLSAIDIVQ_DIV_16',
    'LL_RCC_PLLSAIDIVQ_DIV_17', 'LL_RCC_PLLSAIDIVQ_DIV_18', 'LL_RCC_PLLSAIDIVQ_DIV_19',
    'LL_RCC_PLLSAIDIVQ_DIV_20', 'LL_RCC_PLLSAIDIVQ_DIV_21', 'LL_RCC_PLLSAIDIVQ_DIV_22',
    'LL_RCC_PLLSAIDIVQ_DIV_23', 'LL_RCC_PLLSAIDIVQ_DIV_24', 'LL_RCC_PLLSAIDIVQ_DIV_25',
    'LL_RCC_PLLSAIDIVQ_DIV_26', 'LL_RCC_PLLSAIDIVQ_DIV_27', 'LL_RCC_PLLSAIDIVQ_DIV_28',
    'LL_RCC_PLLSAIDIVQ_DIV_29', 'LL_RCC_PLLSAIDIVQ_DIV_30', 'LL_RCC_PLLSAIDIVQ_DIV_31',
    'LL_RCC_PLLSAIDIVQ_DIV_32', 'LL_RCC_PLLSAIR_DIV_2', 'LL_RCC_PLLSAIR_DIV_3',
    'LL_RCC_PLLSAIR_DIV_4', 'LL_RCC_PLLSAIR_DIV_5', 'LL_RCC_PLLSAIR_DIV_6',
    'LL_RCC_PLLSAIR_DIV_7', 'LL_RCC_PLLSAIDIVR_DIV_2', 'LL_RCC_PLLSAIDIVR_DIV_4',
    'LL_RCC_PLLSAIDIVR_DIV_8', 'LL_RCC_PLLSAIDIVR_DIV_16', 'LL_RCC_PLLSAIP_DIV_2',
    'LL_RCC_PLLSAIP_DIV_4', 'LL_RCC_PLLSAIP_DIV_6', 'LL_RCC_PLLSAIP_DIV_8',
    'LL_RCC_ClocksTypeDef', 'LL_SPI_SR_RXNE', 'LL_SPI_SR_TXE', 'LL_SPI_SR_BSY',
    'LL_SPI_SR_CRCERR', 'LL_SPI_SR_MODF', 'LL_SPI_SR_OVR', 'LL_SPI_SR_FRE',
    'LL_SPI_CR2_RXNEIE', 'LL_SPI_CR2_TXEIE', 'LL_SPI_CR2_ERRIE', 'LL_SPI_MODE_MASTER',
    'LL_SPI_MODE_SLAVE', 'LL_SPI_PROTOCOL_MOTOROLA', 'LL_SPI_PROTOCOL_TI',
    'LL_SPI_PHASE_1EDGE', 'LL_SPI_PHASE_2EDGE', 'LL_SPI_POLARITY_LOW',
    'LL_SPI_POLARITY_HIGH', 'LL_SPI_BAUDRATEPRESCALER_DIV2',
    'LL_SPI_BAUDRATEPRESCALER_DIV4', 'LL_SPI_BAUDRATEPRESCALER_DIV8',
    'LL_SPI_BAUDRATEPRESCALER_DIV16', 'LL_SPI_BAUDRATEPRESCALER_DIV32',
    'LL_SPI_BAUDRATEPRESCALER_DIV64', 'LL_SPI_BAUDRATEPRESCALER_DIV128',
    'LL_SPI_BAUDRATEPRESCALER_DIV256', 'LL_SPI_LSB_FIRST', 'LL_SPI_MSB_FIRST',
    'LL_SPI_FULL_DUPLEX', 'LL_SPI_SIMPLEX_RX', 'LL_SPI_HALF_DUPLEX_RX',
    'LL_SPI_HALF_DUPLEX_TX', 'LL_SPI_NSS_SOFT', 'LL_SPI_NSS_HARD_INPUT',
    'LL_SPI_NSS_HARD_OUTPUT', 'LL_SPI_DATAWIDTH_4BIT', 'LL_SPI_DATAWIDTH_5BIT',
    'LL_SPI_DATAWIDTH_6BIT', 'LL_SPI_DATAWIDTH_7BIT', 'LL_SPI_DATAWIDTH_8BIT',
    'LL_SPI_DATAWIDTH_9BIT', 'LL_SPI_DATAWIDTH_10BIT', 'LL_SPI_DATAWIDTH_11BIT',
    'LL_SPI_DATAWIDTH_12BIT', 'LL_SPI_DATAWIDTH_13BIT', 'LL_SPI_DATAWIDTH_14BIT',
    'LL_SPI_DATAWIDTH_15BIT', 'LL_SPI_DATAWIDTH_16BIT', 'LL_SPI_CRCCALCULATION_DISABLE',
    'LL_SPI_CRCCALCULATION_ENABLE', 'LL_SPI_CRC_8BIT', 'LL_SPI_CRC_16BIT',
    'LL_SPI_RX_FIFO_TH_HALF', 'LL_SPI_RX_FIFO_TH_QUARTER', 'LL_SPI_RX_FIFO_EMPTY',
    'LL_SPI_RX_FIFO_QUARTER_FULL', 'LL_SPI_RX_FIFO_HALF_FULL', 'LL_SPI_RX_FIFO_FULL',
    'LL_SPI_TX_FIFO_EMPTY', 'LL_SPI_TX_FIFO_QUARTER_FULL', 'LL_SPI_TX_FIFO_HALF_FULL',
    'LL_SPI_TX_FIFO_FULL', 'LL_SPI_DMA_PARITY_EVEN', 'LL_SPI_DMA_PARITY_ODD',
    'LL_I2S_SR_RXNE', 'LL_I2S_SR_TXE', 'LL_I2S_SR_BSY', 'LL_I2S_SR_UDR',
    'LL_I2S_SR_OVR', 'LL_I2S_SR_FRE', 'LL_I2S_CR2_RXNEIE', 'LL_I2S_CR2_TXEIE',
    'LL_I2S_CR2_ERRIE', 'LL_I2S_DATAFORMAT_16B', 'LL_I2S_DATAFORMAT_16B_EXTENDED',
    'LL_I2S_DATAFORMAT_24B', 'LL_I2S_DATAFORMAT_32B', 'LL_I2S_POLARITY_LOW',
    'LL_I2S_POLARITY_HIGH', 'LL_I2S_STANDARD_PHILIPS', 'LL_I2S_STANDARD_MSB',
    'LL_I2S_STANDARD_LSB', 'LL_I2S_STANDARD_PCM_SHORT', 'LL_I2S_STANDARD_PCM_LONG',
    'LL_I2S_MODE_SLAVE_TX', 'LL_I2S_MODE_SLAVE_RX', 'LL_I2S_MODE_MASTER_TX',
    'LL_I2S_MODE_MASTER_RX', 'LL_I2S_PRESCALER_PARITY_EVEN',
    'LL_I2S_PRESCALER_PARITY_ODD', 'LL_I2S_MCLK_OUTPUT_DISABLE',
    'LL_I2S_MCLK_OUTPUT_ENABLE', 'LL_I2S_AUDIOFREQ_192K', 'LL_I2S_AUDIOFREQ_96K',
    'LL_I2S_AUDIOFREQ_48K', 'LL_I2S_AUDIOFREQ_44K', 'LL_I2S_AUDIOFREQ_32K',
    'LL_I2S_AUDIOFREQ_22K', 'LL_I2S_AUDIOFREQ_16K', 'LL_I2S_AUDIOFREQ_11K',
    'LL_I2S_AUDIOFREQ_8K', 'LL_I2S_AUDIOFREQ_DEFAULT', 'LL_SPI_InitTypeDef',
    'LL_I2S_InitTypeDef', 'LL_CRC_POLYLENGTH_32B', 'LL_CRC_POLYLENGTH_16B',
    'LL_CRC_POLYLENGTH_8B', 'LL_CRC_POLYLENGTH_7B', 'LL_CRC_INDATA_REVERSE_NONE',
    'LL_CRC_INDATA_REVERSE_BYTE', 'LL_CRC_INDATA_REVERSE_HALFWORD',
    'LL_CRC_INDATA_REVERSE_WORD', 'LL_CRC_OUTDATA_REVERSE_NONE',
    'LL_CRC_OUTDATA_REVERSE_BIT', 'LL_CRC_DEFAULT_CRC32_POLY',
    'LL_CRC_DEFAULT_CRC_INITVALUE', 'TIMx_OR_RMP_SHIFT', 'TIMx_OR_RMP_MASK',
    'TIM2_OR_RMP_MASK', 'TIM5_OR_RMP_MASK', 'TIM11_OR_RMP_MASK', 'DT_DELAY_1',
    'DT_DELAY_2', 'DT_DELAY_3', 'DT_DELAY_4', 'DT_RANGE_1', 'DT_RANGE_2', 'DT_RANGE_3',
    'DT_RANGE_4', 'LL_TIM_SR_UIF', 'LL_TIM_SR_CC1IF', 'LL_TIM_SR_CC2IF',
    'LL_TIM_SR_CC3IF', 'LL_TIM_SR_CC4IF', 'LL_TIM_SR_CC5IF', 'LL_TIM_SR_CC6IF',
    'LL_TIM_SR_COMIF', 'LL_TIM_SR_TIF', 'LL_TIM_SR_BIF', 'LL_TIM_SR_B2IF',
    'LL_TIM_SR_CC1OF', 'LL_TIM_SR_CC2OF', 'LL_TIM_SR_CC3OF', 'LL_TIM_SR_CC4OF',
    'LL_TIM_SR_SBIF', 'LL_TIM_BREAK_DISABLE', 'LL_TIM_BREAK_ENABLE',
    'LL_TIM_BREAK2_DISABLE', 'LL_TIM_BREAK2_ENABLE', 'LL_TIM_AUTOMATICOUTPUT_DISABLE',
    'LL_TIM_AUTOMATICOUTPUT_ENABLE', 'LL_TIM_DIER_UIE', 'LL_TIM_DIER_CC1IE',
    'LL_TIM_DIER_CC2IE', 'LL_TIM_DIER_CC3IE', 'LL_TIM_DIER_CC4IE', 'LL_TIM_DIER_COMIE',
    'LL_TIM_DIER_TIE', 'LL_TIM_DIER_BIE', 'LL_TIM_UPDATESOURCE_REGULAR',
    'LL_TIM_UPDATESOURCE_COUNTER', 'LL_TIM_ONEPULSEMODE_SINGLE',
    'LL_TIM_ONEPULSEMODE_REPETITIVE', 'LL_TIM_COUNTERMODE_UP',
    'LL_TIM_COUNTERMODE_DOWN', 'LL_TIM_COUNTERMODE_CENTER_UP',
    'LL_TIM_COUNTERMODE_CENTER_DOWN', 'LL_TIM_COUNTERMODE_CENTER_UP_DOWN',
    'LL_TIM_CLOCKDIVISION_DIV1', 'LL_TIM_CLOCKDIVISION_DIV2',
    'LL_TIM_CLOCKDIVISION_DIV4', 'LL_TIM_COUNTERDIRECTION_UP',
    'LL_TIM_COUNTERDIRECTION_DOWN', 'LL_TIM_CCUPDATESOURCE_COMG_ONLY',
    'LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI', 'LL_TIM_CCDMAREQUEST_CC',
    'LL_TIM_CCDMAREQUEST_UPDATE', 'LL_TIM_LOCKLEVEL_OFF', 'LL_TIM_LOCKLEVEL_1',
    'LL_TIM_LOCKLEVEL_2', 'LL_TIM_LOCKLEVEL_3', 'LL_TIM_CHANNEL_CH1',
    'LL_TIM_CHANNEL_CH1N', 'LL_TIM_CHANNEL_CH2', 'LL_TIM_CHANNEL_CH2N',
    'LL_TIM_CHANNEL_CH3', 'LL_TIM_CHANNEL_CH3N', 'LL_TIM_CHANNEL_CH4',
    'LL_TIM_CHANNEL_CH5', 'LL_TIM_CHANNEL_CH6', 'LL_TIM_OCSTATE_DISABLE',
    'LL_TIM_OCSTATE_ENABLE', 'LL_TIM_OCMODE_FROZEN', 'LL_TIM_OCMODE_ACTIVE',
    'LL_TIM_OCMODE_INACTIVE', 'LL_TIM_OCMODE_TOGGLE', 'LL_TIM_OCMODE_FORCED_INACTIVE',
    'LL_TIM_OCMODE_FORCED_ACTIVE', 'LL_TIM_OCMODE_PWM1', 'LL_TIM_OCMODE_PWM2',
    'LL_TIM_OCMODE_RETRIG_OPM1', 'LL_TIM_OCMODE_RETRIG_OPM2',
    'LL_TIM_OCMODE_COMBINED_PWM1', 'LL_TIM_OCMODE_COMBINED_PWM2',
    'LL_TIM_OCMODE_ASSYMETRIC_PWM1', 'LL_TIM_OCMODE_ASSYMETRIC_PWM2',
    'LL_TIM_OCPOLARITY_HIGH', 'LL_TIM_OCPOLARITY_LOW', 'LL_TIM_OCIDLESTATE_LOW',
    'LL_TIM_OCIDLESTATE_HIGH', 'LL_TIM_GROUPCH5_NONE', 'LL_TIM_GROUPCH5_OC1REFC',
    'LL_TIM_GROUPCH5_OC2REFC', 'LL_TIM_GROUPCH5_OC3REFC', 'LL_TIM_ACTIVEINPUT_DIRECTTI',
    'LL_TIM_ACTIVEINPUT_INDIRECTTI', 'LL_TIM_ACTIVEINPUT_TRC', 'LL_TIM_ICPSC_DIV1',
    'LL_TIM_ICPSC_DIV2', 'LL_TIM_ICPSC_DIV4', 'LL_TIM_ICPSC_DIV8',
    'LL_TIM_IC_FILTER_FDIV1', 'LL_TIM_IC_FILTER_FDIV1_N2', 'LL_TIM_IC_FILTER_FDIV1_N4',
    'LL_TIM_IC_FILTER_FDIV1_N8', 'LL_TIM_IC_FILTER_FDIV2_N6',
    'LL_TIM_IC_FILTER_FDIV2_N8', 'LL_TIM_IC_FILTER_FDIV4_N6',
    'LL_TIM_IC_FILTER_FDIV4_N8', 'LL_TIM_IC_FILTER_FDIV8_N6',
    'LL_TIM_IC_FILTER_FDIV8_N8', 'LL_TIM_IC_FILTER_FDIV16_N5',
    'LL_TIM_IC_FILTER_FDIV16_N6', 'LL_TIM_IC_FILTER_FDIV16_N8',
    'LL_TIM_IC_FILTER_FDIV32_N5', 'LL_TIM_IC_FILTER_FDIV32_N6',
    'LL_TIM_IC_FILTER_FDIV32_N8', 'LL_TIM_IC_POLARITY_RISING',
    'LL_TIM_IC_POLARITY_FALLING', 'LL_TIM_IC_POLARITY_BOTHEDGE',
    'LL_TIM_CLOCKSOURCE_INTERNAL', 'LL_TIM_CLOCKSOURCE_EXT_MODE1',
    'LL_TIM_CLOCKSOURCE_EXT_MODE2', 'LL_TIM_ENCODERMODE_X2_TI1',
    'LL_TIM_ENCODERMODE_X2_TI2', 'LL_TIM_ENCODERMODE_X4_TI12', 'LL_TIM_TRGO_RESET',
    'LL_TIM_TRGO_ENABLE', 'LL_TIM_TRGO_UPDATE', 'LL_TIM_TRGO_CC1IF',
    'LL_TIM_TRGO_OC1REF', 'LL_TIM_TRGO_OC2REF', 'LL_TIM_TRGO_OC3REF',
    'LL_TIM_TRGO_OC4REF', 'LL_TIM_TRGO2_RESET', 'LL_TIM_TRGO2_ENABLE',
    'LL_TIM_TRGO2_UPDATE', 'LL_TIM_TRGO2_CC1F', 'LL_TIM_TRGO2_OC1', 'LL_TIM_TRGO2_OC2',
    'LL_TIM_TRGO2_OC3', 'LL_TIM_TRGO2_OC4', 'LL_TIM_TRGO2_OC5', 'LL_TIM_TRGO2_OC6',
    'LL_TIM_TRGO2_OC4_RISINGFALLING', 'LL_TIM_TRGO2_OC6_RISINGFALLING',
    'LL_TIM_TRGO2_OC4_RISING_OC6_RISING', 'LL_TIM_TRGO2_OC4_RISING_OC6_FALLING',
    'LL_TIM_TRGO2_OC5_RISING_OC6_RISING', 'LL_TIM_TRGO2_OC5_RISING_OC6_FALLING',
    'LL_TIM_SLAVEMODE_DISABLED', 'LL_TIM_SLAVEMODE_RESET', 'LL_TIM_SLAVEMODE_GATED',
    'LL_TIM_SLAVEMODE_TRIGGER', 'LL_TIM_SLAVEMODE_COMBINED_RESETTRIGGER',
    'LL_TIM_TS_ITR0', 'LL_TIM_TS_ITR1', 'LL_TIM_TS_ITR2', 'LL_TIM_TS_ITR3',
    'LL_TIM_TS_TI1F_ED', 'LL_TIM_TS_TI1FP1', 'LL_TIM_TS_TI2FP2', 'LL_TIM_TS_ETRF',
    'LL_TIM_ETR_POLARITY_NONINVERTED', 'LL_TIM_ETR_POLARITY_INVERTED',
    'LL_TIM_ETR_PRESCALER_DIV1', 'LL_TIM_ETR_PRESCALER_DIV2',
    'LL_TIM_ETR_PRESCALER_DIV4', 'LL_TIM_ETR_PRESCALER_DIV8', 'LL_TIM_ETR_FILTER_FDIV1',
    'LL_TIM_ETR_FILTER_FDIV1_N2', 'LL_TIM_ETR_FILTER_FDIV1_N4',
    'LL_TIM_ETR_FILTER_FDIV1_N8', 'LL_TIM_ETR_FILTER_FDIV2_N6',
    'LL_TIM_ETR_FILTER_FDIV2_N8', 'LL_TIM_ETR_FILTER_FDIV4_N6',
    'LL_TIM_ETR_FILTER_FDIV4_N8', 'LL_TIM_ETR_FILTER_FDIV8_N6',
    'LL_TIM_ETR_FILTER_FDIV8_N8', 'LL_TIM_ETR_FILTER_FDIV16_N5',
    'LL_TIM_ETR_FILTER_FDIV16_N6', 'LL_TIM_ETR_FILTER_FDIV16_N8',
    'LL_TIM_ETR_FILTER_FDIV32_N5', 'LL_TIM_ETR_FILTER_FDIV32_N6',
    'LL_TIM_ETR_FILTER_FDIV32_N8', 'LL_TIM_BREAK_POLARITY_LOW',
    'LL_TIM_BREAK_POLARITY_HIGH', 'LL_TIM_BREAK_FILTER_FDIV1',
    'LL_TIM_BREAK_FILTER_FDIV1_N2', 'LL_TIM_BREAK_FILTER_FDIV1_N4',
    'LL_TIM_BREAK_FILTER_FDIV1_N8', 'LL_TIM_BREAK_FILTER_FDIV2_N6',
    'LL_TIM_BREAK_FILTER_FDIV2_N8', 'LL_TIM_BREAK_FILTER_FDIV4_N6',
    'LL_TIM_BREAK_FILTER_FDIV4_N8', 'LL_TIM_BREAK_FILTER_FDIV8_N6',
    'LL_TIM_BREAK_FILTER_FDIV8_N8', 'LL_TIM_BREAK_FILTER_FDIV16_N5',
    'LL_TIM_BREAK_FILTER_FDIV16_N6', 'LL_TIM_BREAK_FILTER_FDIV16_N8',
    'LL_TIM_BREAK_FILTER_FDIV32_N5', 'LL_TIM_BREAK_FILTER_FDIV32_N6',
    'LL_TIM_BREAK_FILTER_FDIV32_N8', 'LL_TIM_BREAK2_POLARITY_LOW',
    'LL_TIM_BREAK2_POLARITY_HIGH', 'LL_TIM_BREAK2_FILTER_FDIV1',
    'LL_TIM_BREAK2_FILTER_FDIV1_N2', 'LL_TIM_BREAK2_FILTER_FDIV1_N4',
    'LL_TIM_BREAK2_FILTER_FDIV1_N8', 'LL_TIM_BREAK2_FILTER_FDIV2_N6',
    'LL_TIM_BREAK2_FILTER_FDIV2_N8', 'LL_TIM_BREAK2_FILTER_FDIV4_N6',
    'LL_TIM_BREAK2_FILTER_FDIV4_N8', 'LL_TIM_BREAK2_FILTER_FDIV8_N6',
    'LL_TIM_BREAK2_FILTER_FDIV8_N8', 'LL_TIM_BREAK2_FILTER_FDIV16_N5',
    'LL_TIM_BREAK2_FILTER_FDIV16_N6', 'LL_TIM_BREAK2_FILTER_FDIV16_N8',
    'LL_TIM_BREAK2_FILTER_FDIV32_N5', 'LL_TIM_BREAK2_FILTER_FDIV32_N6',
    'LL_TIM_BREAK2_FILTER_FDIV32_N8', 'LL_TIM_OSSI_DISABLE', 'LL_TIM_OSSI_ENABLE',
    'LL_TIM_OSSR_DISABLE', 'LL_TIM_OSSR_ENABLE', 'LL_TIM_DMABURST_BASEADDR_CR1',
    'LL_TIM_DMABURST_BASEADDR_CR2', 'LL_TIM_DMABURST_BASEADDR_SMCR',
    'LL_TIM_DMABURST_BASEADDR_DIER', 'LL_TIM_DMABURST_BASEADDR_SR',
    'LL_TIM_DMABURST_BASEADDR_EGR', 'LL_TIM_DMABURST_BASEADDR_CCMR1',
    'LL_TIM_DMABURST_BASEADDR_CCMR2', 'LL_TIM_DMABURST_BASEADDR_CCER',
    'LL_TIM_DMABURST_BASEADDR_CNT', 'LL_TIM_DMABURST_BASEADDR_PSC',
    'LL_TIM_DMABURST_BASEADDR_ARR', 'LL_TIM_DMABURST_BASEADDR_RCR',
    'LL_TIM_DMABURST_BASEADDR_CCR1', 'LL_TIM_DMABURST_BASEADDR_CCR2',
    'LL_TIM_DMABURST_BASEADDR_CCR3', 'LL_TIM_DMABURST_BASEADDR_CCR4',
    'LL_TIM_DMABURST_BASEADDR_BDTR', 'LL_TIM_DMABURST_BASEADDR_OR',
    'LL_TIM_DMABURST_BASEADDR_CCMR3', 'LL_TIM_DMABURST_BASEADDR_CCR5',
    'LL_TIM_DMABURST_BASEADDR_CCR6', 'LL_TIM_DMABURST_LENGTH_1TRANSFER',
    'LL_TIM_DMABURST_LENGTH_2TRANSFERS', 'LL_TIM_DMABURST_LENGTH_3TRANSFERS',
    'LL_TIM_DMABURST_LENGTH_4TRANSFERS', 'LL_TIM_DMABURST_LENGTH_5TRANSFERS',
    'LL_TIM_DMABURST_LENGTH_6TRANSFERS', 'LL_TIM_DMABURST_LENGTH_7TRANSFERS',
    'LL_TIM_DMABURST_LENGTH_8TRANSFERS', 'LL_TIM_DMABURST_LENGTH_9TRANSFERS',
    'LL_TIM_DMABURST_LENGTH_10TRANSFERS', 'LL_TIM_DMABURST_LENGTH_11TRANSFERS',
    'LL_TIM_DMABURST_LENGTH_12TRANSFERS', 'LL_TIM_DMABURST_LENGTH_13TRANSFERS',
    'LL_TIM_DMABURST_LENGTH_14TRANSFERS', 'LL_TIM_DMABURST_LENGTH_15TRANSFERS',
    'LL_TIM_DMABURST_LENGTH_16TRANSFERS', 'LL_TIM_DMABURST_LENGTH_17TRANSFERS',
    'LL_TIM_DMABURST_LENGTH_18TRANSFERS', 'LL_TIM_TIM2_ITR1_RMP_TIM8_TRGO',
    'LL_TIM_TIM2_ITR1_RMP_ETH_PTP', 'LL_TIM_TIM2_ITR1_RMP_OTG_FS_SOF',
    'LL_TIM_TIM2_ITR1_RMP_OTG_HS_SOF', 'LL_TIM_TIM5_TI4_RMP_GPIO',
    'LL_TIM_TIM5_TI4_RMP_LSI', 'LL_TIM_TIM5_TI4_RMP_LSE', 'LL_TIM_TIM5_TI4_RMP_RTC',
    'LL_TIM_TIM11_TI1_RMP_GPIO', 'LL_TIM_TIM11_TI1_RMP_SPDIFRX',
    'LL_TIM_TIM11_TI1_RMP_HSE', 'LL_TIM_TIM11_TI1_RMP_MCO1', 'LL_TIM_InitTypeDef',
    'LL_TIM_OC_InitTypeDef', 'LL_TIM_IC_InitTypeDef', 'LL_TIM_ENCODER_InitTypeDef',
    'LL_TIM_HALLSENSOR_InitTypeDef', 'LL_TIM_BDTR_InitTypeDef', 'LL_USART_ICR_PECF',
    'LL_USART_ICR_FECF', 'LL_USART_ICR_NCF', 'LL_USART_ICR_ORECF',
    'LL_USART_ICR_IDLECF', 'LL_USART_ICR_TCCF', 'LL_USART_ICR_LBDCF',
    'LL_USART_ICR_CTSCF', 'LL_USART_ICR_RTOCF', 'LL_USART_ICR_EOBCF',
    'LL_USART_ICR_CMCF', 'LL_USART_ISR_PE', 'LL_USART_ISR_FE', 'LL_USART_ISR_NE',
    'LL_USART_ISR_ORE', 'LL_USART_ISR_IDLE', 'LL_USART_ISR_RXNE', 'LL_USART_ISR_TC',
    'LL_USART_ISR_TXE', 'LL_USART_ISR_LBDF', 'LL_USART_ISR_CTSIF', 'LL_USART_ISR_CTS',
    'LL_USART_ISR_RTOF', 'LL_USART_ISR_EOBF', 'LL_USART_ISR_ABRE', 'LL_USART_ISR_ABRF',
    'LL_USART_ISR_BUSY', 'LL_USART_ISR_CMF', 'LL_USART_ISR_SBKF', 'LL_USART_ISR_RWU',
    'LL_USART_ISR_TEACK', 'LL_USART_CR1_IDLEIE', 'LL_USART_CR1_RXNEIE',
    'LL_USART_CR1_TCIE', 'LL_USART_CR1_TXEIE', 'LL_USART_CR1_PEIE', 'LL_USART_CR1_CMIE',
    'LL_USART_CR1_RTOIE', 'LL_USART_CR1_EOBIE', 'LL_USART_CR2_LBDIE',
    'LL_USART_CR3_EIE', 'LL_USART_CR3_CTSIE', 'LL_USART_DIRECTION_NONE',
    'LL_USART_DIRECTION_RX', 'LL_USART_DIRECTION_TX', 'LL_USART_DIRECTION_TX_RX',
    'LL_USART_PARITY_NONE', 'LL_USART_PARITY_EVEN', 'LL_USART_PARITY_ODD',
    'LL_USART_WAKEUP_IDLELINE', 'LL_USART_WAKEUP_ADDRESSMARK', 'LL_USART_DATAWIDTH_7B',
    'LL_USART_DATAWIDTH_8B', 'LL_USART_DATAWIDTH_9B', 'LL_USART_OVERSAMPLING_16',
    'LL_USART_OVERSAMPLING_8', 'LL_USART_CLOCK_DISABLE', 'LL_USART_CLOCK_ENABLE',
    'LL_USART_LASTCLKPULSE_NO_OUTPUT', 'LL_USART_LASTCLKPULSE_OUTPUT',
    'LL_USART_PHASE_1EDGE', 'LL_USART_PHASE_2EDGE', 'LL_USART_POLARITY_LOW',
    'LL_USART_POLARITY_HIGH', 'LL_USART_STOPBITS_0_5', 'LL_USART_STOPBITS_1',
    'LL_USART_STOPBITS_1_5', 'LL_USART_STOPBITS_2', 'LL_USART_TXRX_STANDARD',
    'LL_USART_TXRX_SWAPPED', 'LL_USART_RXPIN_LEVEL_STANDARD',
    'LL_USART_RXPIN_LEVEL_INVERTED', 'LL_USART_TXPIN_LEVEL_STANDARD',
    'LL_USART_TXPIN_LEVEL_INVERTED', 'LL_USART_BINARY_LOGIC_POSITIVE',
    'LL_USART_BINARY_LOGIC_NEGATIVE', 'LL_USART_BITORDER_LSBFIRST',
    'LL_USART_BITORDER_MSBFIRST', 'LL_USART_AUTOBAUD_DETECT_ON_STARTBIT',
    'LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE', 'LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME',
    'LL_USART_AUTOBAUD_DETECT_ON_55_FRAME', 'LL_USART_ADDRESS_DETECT_4B',
    'LL_USART_ADDRESS_DETECT_7B', 'LL_USART_HWCONTROL_NONE', 'LL_USART_HWCONTROL_RTS',
    'LL_USART_HWCONTROL_CTS', 'LL_USART_HWCONTROL_RTS_CTS',
    'LL_USART_IRDA_POWER_NORMAL', 'LL_USART_IRDA_POWER_LOW',
    'LL_USART_LINBREAK_DETECT_10B', 'LL_USART_LINBREAK_DETECT_11B',
    'LL_USART_DE_POLARITY_HIGH', 'LL_USART_DE_POLARITY_LOW',
    'LL_USART_DMA_REG_DATA_TRANSMIT', 'LL_USART_DMA_REG_DATA_RECEIVE',
    'LL_USART_InitTypeDef', 'LL_USART_ClockInitTypeDef', 'LL_SYSCFG_REMAP_BOOT0',
    'LL_SYSCFG_REMAP_BOOT1', 'LL_SYSCFG_PMC_ETHMII', 'LL_SYSCFG_PMC_ETHRMII',
    'LL_SYSCFG_EXTI_PORTA', 'LL_SYSCFG_EXTI_PORTB', 'LL_SYSCFG_EXTI_PORTC',
    'LL_SYSCFG_EXTI_PORTD', 'LL_SYSCFG_EXTI_PORTE', 'LL_SYSCFG_EXTI_PORTF',
    'LL_SYSCFG_EXTI_PORTG', 'LL_SYSCFG_EXTI_PORTH', 'LL_SYSCFG_EXTI_PORTI',
    'LL_SYSCFG_EXTI_PORTJ', 'LL_SYSCFG_EXTI_PORTK', 'LL_SYSCFG_EXTI_LINE0',
    'LL_SYSCFG_EXTI_LINE1', 'LL_SYSCFG_EXTI_LINE2', 'LL_SYSCFG_EXTI_LINE3',
    'LL_SYSCFG_EXTI_LINE4', 'LL_SYSCFG_EXTI_LINE5', 'LL_SYSCFG_EXTI_LINE6',
    'LL_SYSCFG_EXTI_LINE7', 'LL_SYSCFG_EXTI_LINE8', 'LL_SYSCFG_EXTI_LINE9',
    'LL_SYSCFG_EXTI_LINE10', 'LL_SYSCFG_EXTI_LINE11', 'LL_SYSCFG_EXTI_LINE12',
    'LL_SYSCFG_EXTI_LINE13', 'LL_SYSCFG_EXTI_LINE14', 'LL_SYSCFG_EXTI_LINE15',
    'LL_SYSCFG_DISABLE_CMP_PD', 'LL_SYSCFG_ENABLE_CMP_PD', 'LL_DBGMCU_TRACE_NONE',
    'LL_DBGMCU_TRACE_ASYNCH', 'LL_DBGMCU_TRACE_SYNCH_SIZE1',
    'LL_DBGMCU_TRACE_SYNCH_SIZE2', 'LL_DBGMCU_TRACE_SYNCH_SIZE4',
    'LL_DBGMCU_APB1_GRP1_TIM2_STOP', 'LL_DBGMCU_APB1_GRP1_TIM3_STOP',
    'LL_DBGMCU_APB1_GRP1_TIM4_STOP', 'LL_DBGMCU_APB1_GRP1_TIM5_STOP',
    'LL_DBGMCU_APB1_GRP1_TIM6_STOP', 'LL_DBGMCU_APB1_GRP1_TIM7_STOP',
    'LL_DBGMCU_APB1_GRP1_TIM12_STOP', 'LL_DBGMCU_APB1_GRP1_TIM13_STOP',
    'LL_DBGMCU_APB1_GRP1_TIM14_STOP', 'LL_DBGMCU_APB1_GRP1_LPTIM1_STOP',
    'LL_DBGMCU_APB1_GRP1_RTC_STOP', 'LL_DBGMCU_APB1_GRP1_WWDG_STOP',
    'LL_DBGMCU_APB1_GRP1_IWDG_STOP', 'LL_DBGMCU_APB1_GRP1_I2C1_STOP',
    'LL_DBGMCU_APB1_GRP1_I2C2_STOP', 'LL_DBGMCU_APB1_GRP1_I2C3_STOP',
    'LL_DBGMCU_APB1_GRP1_CAN1_STOP', 'LL_DBGMCU_APB1_GRP1_CAN2_STOP',
    'LL_DBGMCU_APB2_GRP1_TIM1_STOP', 'LL_DBGMCU_APB2_GRP1_TIM8_STOP',
    'LL_DBGMCU_APB2_GRP1_TIM9_STOP', 'LL_DBGMCU_APB2_GRP1_TIM10_STOP',
    'LL_DBGMCU_APB2_GRP1_TIM11_STOP', 'LL_FLASH_LATENCY_0', 'LL_FLASH_LATENCY_1',
    'LL_FLASH_LATENCY_2', 'LL_FLASH_LATENCY_3', 'LL_FLASH_LATENCY_4',
    'LL_FLASH_LATENCY_5', 'LL_FLASH_LATENCY_6', 'LL_FLASH_LATENCY_7',
    'LL_FLASH_LATENCY_8', 'LL_FLASH_LATENCY_9', 'LL_FLASH_LATENCY_10',
    'LL_FLASH_LATENCY_11', 'LL_FLASH_LATENCY_12', 'LL_FLASH_LATENCY_13',
    'LL_FLASH_LATENCY_14', 'LL_FLASH_LATENCY_15', 'LL_IWDG_KEY_RELOAD',
    'LL_IWDG_KEY_ENABLE', 'LL_IWDG_KEY_WR_ACCESS_ENABLE',
    'LL_IWDG_KEY_WR_ACCESS_DISABLE', 'LL_IWDG_SR_PVU', 'LL_IWDG_SR_RVU',
    'LL_IWDG_SR_WVU', 'LL_IWDG_PRESCALER_4', 'LL_IWDG_PRESCALER_8',
    'LL_IWDG_PRESCALER_16', 'LL_IWDG_PRESCALER_32', 'LL_IWDG_PRESCALER_64',
    'LL_IWDG_PRESCALER_128', 'LL_IWDG_PRESCALER_256', 'RTC_INIT_MASK', 'RTC_RSF_MASK',
    'RTC_WRITE_PROTECTION_DISABLE', 'RTC_WRITE_PROTECTION_ENABLE_1',
    'RTC_WRITE_PROTECTION_ENABLE_2', 'RTC_OFFSET_WEEKDAY', 'RTC_OFFSET_DAY',
    'RTC_OFFSET_MONTH', 'RTC_OFFSET_HOUR', 'RTC_OFFSET_MINUTE', 'LL_RTC_FORMAT_BIN',
    'LL_RTC_FORMAT_BCD', 'LL_RTC_ALMA_DATEWEEKDAYSEL_DATE',
    'LL_RTC_ALMA_DATEWEEKDAYSEL_WEEKDAY', 'LL_RTC_ALMB_DATEWEEKDAYSEL_DATE',
    'LL_RTC_ALMB_DATEWEEKDAYSEL_WEEKDAY', 'LL_RTC_ISR_ITSF', 'LL_RTC_ISR_RECALPF',
    'LL_RTC_ISR_TAMP3F', 'LL_RTC_ISR_TAMP2F', 'LL_RTC_ISR_TAMP1F', 'LL_RTC_ISR_TSOVF',
    'LL_RTC_ISR_TSF', 'LL_RTC_ISR_WUTF', 'LL_RTC_ISR_ALRBF', 'LL_RTC_ISR_ALRAF',
    'LL_RTC_ISR_INITF', 'LL_RTC_ISR_RSF', 'LL_RTC_ISR_INITS', 'LL_RTC_ISR_SHPF',
    'LL_RTC_ISR_WUTWF', 'LL_RTC_ISR_ALRBWF', 'LL_RTC_ISR_ALRAWF', 'LL_RTC_CR_TSIE',
    'LL_RTC_CR_WUTIE', 'LL_RTC_CR_ALRBIE', 'LL_RTC_CR_ALRAIE', 'LL_RTC_TAMPCR_TAMP3IE',
    'LL_RTC_TAMPCR_TAMP2IE', 'LL_RTC_TAMPCR_TAMP1IE', 'LL_RTC_TAMPCR_TAMPIE',
    'LL_RTC_WEEKDAY_MONDAY', 'LL_RTC_WEEKDAY_TUESDAY', 'LL_RTC_WEEKDAY_WEDNESDAY',
    'LL_RTC_WEEKDAY_THURSDAY', 'LL_RTC_WEEKDAY_FRIDAY', 'LL_RTC_WEEKDAY_SATURDAY',
    'LL_RTC_WEEKDAY_SUNDAY', 'LL_RTC_MONTH_JANUARY', 'LL_RTC_MONTH_FEBRUARY',
    'LL_RTC_MONTH_MARCH', 'LL_RTC_MONTH_APRIL', 'LL_RTC_MONTH_MAY', 'LL_RTC_MONTH_JUNE',
    'LL_RTC_MONTH_JULY', 'LL_RTC_MONTH_AUGUST', 'LL_RTC_MONTH_SEPTEMBER',
    'LL_RTC_MONTH_OCTOBER', 'LL_RTC_MONTH_NOVEMBER', 'LL_RTC_MONTH_DECEMBER',
    'LL_RTC_HOURFORMAT_24HOUR', 'LL_RTC_HOURFORMAT_AMPM', 'LL_RTC_ALARMOUT_DISABLE',
    'LL_RTC_ALARMOUT_ALMA', 'LL_RTC_ALARMOUT_ALMB', 'LL_RTC_ALARMOUT_WAKEUP',
    'LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN', 'LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL',
    'LL_RTC_OUTPUTPOLARITY_PIN_HIGH', 'LL_RTC_OUTPUTPOLARITY_PIN_LOW',
    'LL_RTC_TIME_FORMAT_AM_OR_24', 'LL_RTC_TIME_FORMAT_PM', 'LL_RTC_SHIFT_SECOND_DELAY',
    'LL_RTC_SHIFT_SECOND_ADVANCE', 'LL_RTC_ALMA_MASK_NONE',
    'LL_RTC_ALMA_MASK_DATEWEEKDAY', 'LL_RTC_ALMA_MASK_HOURS',
    'LL_RTC_ALMA_MASK_MINUTES', 'LL_RTC_ALMA_MASK_SECONDS', 'LL_RTC_ALMA_MASK_ALL',
    'LL_RTC_ALMA_TIME_FORMAT_AM', 'LL_RTC_ALMA_TIME_FORMAT_PM', 'LL_RTC_ALMB_MASK_NONE',
    'LL_RTC_ALMB_MASK_DATEWEEKDAY', 'LL_RTC_ALMB_MASK_HOURS',
    'LL_RTC_ALMB_MASK_MINUTES', 'LL_RTC_ALMB_MASK_SECONDS', 'LL_RTC_ALMB_MASK_ALL',
    'LL_RTC_ALMB_TIME_FORMAT_AM', 'LL_RTC_ALMB_TIME_FORMAT_PM',
    'LL_RTC_TIMESTAMP_EDGE_RISING', 'LL_RTC_TIMESTAMP_EDGE_FALLING',
    'LL_RTC_TS_TIME_FORMAT_AM', 'LL_RTC_TS_TIME_FORMAT_PM', 'LL_RTC_TAMPER_1',
    'LL_RTC_TAMPER_2', 'LL_RTC_TAMPER_3', 'LL_RTC_TAMPER_MASK_TAMPER1',
    'LL_RTC_TAMPER_MASK_TAMPER2', 'LL_RTC_TAMPER_MASK_TAMPER3',
    'LL_RTC_TAMPER_NOERASE_TAMPER1', 'LL_RTC_TAMPER_NOERASE_TAMPER2',
    'LL_RTC_TAMPER_NOERASE_TAMPER3', 'LL_RTC_TAMPER_DURATION_1RTCCLK',
    'LL_RTC_TAMPER_DURATION_2RTCCLK', 'LL_RTC_TAMPER_DURATION_4RTCCLK',
    'LL_RTC_TAMPER_DURATION_8RTCCLK', 'LL_RTC_TAMPER_FILTER_DISABLE',
    'LL_RTC_TAMPER_FILTER_2SAMPLE', 'LL_RTC_TAMPER_FILTER_4SAMPLE',
    'LL_RTC_TAMPER_FILTER_8SAMPLE', 'LL_RTC_TAMPER_SAMPLFREQDIV_32768',
    'LL_RTC_TAMPER_SAMPLFREQDIV_16384', 'LL_RTC_TAMPER_SAMPLFREQDIV_8192',
    'LL_RTC_TAMPER_SAMPLFREQDIV_4096', 'LL_RTC_TAMPER_SAMPLFREQDIV_2048',
    'LL_RTC_TAMPER_SAMPLFREQDIV_1024', 'LL_RTC_TAMPER_SAMPLFREQDIV_512',
    'LL_RTC_TAMPER_SAMPLFREQDIV_256', 'LL_RTC_TAMPER_ACTIVELEVEL_TAMP1',
    'LL_RTC_TAMPER_ACTIVELEVEL_TAMP2', 'LL_RTC_TAMPER_ACTIVELEVEL_TAMP3',
    'LL_RTC_WAKEUPCLOCK_DIV_16', 'LL_RTC_WAKEUPCLOCK_DIV_8', 'LL_RTC_WAKEUPCLOCK_DIV_4',
    'LL_RTC_WAKEUPCLOCK_DIV_2', 'LL_RTC_WAKEUPCLOCK_CKSPRE',
    'LL_RTC_WAKEUPCLOCK_CKSPRE_WUT', 'LL_RTC_BKP_DR0', 'LL_RTC_BKP_DR1',
    'LL_RTC_BKP_DR2', 'LL_RTC_BKP_DR3', 'LL_RTC_BKP_DR4', 'LL_RTC_BKP_DR5',
    'LL_RTC_BKP_DR6', 'LL_RTC_BKP_DR7', 'LL_RTC_BKP_DR8', 'LL_RTC_BKP_DR9',
    'LL_RTC_BKP_DR10', 'LL_RTC_BKP_DR11', 'LL_RTC_BKP_DR12', 'LL_RTC_BKP_DR13',
    'LL_RTC_BKP_DR14', 'LL_RTC_BKP_DR15', 'LL_RTC_BKP_DR16', 'LL_RTC_BKP_DR17',
    'LL_RTC_BKP_DR18', 'LL_RTC_BKP_DR19', 'LL_RTC_BKP_DR20', 'LL_RTC_BKP_DR21',
    'LL_RTC_BKP_DR22', 'LL_RTC_BKP_DR23', 'LL_RTC_BKP_DR24', 'LL_RTC_BKP_DR25',
    'LL_RTC_BKP_DR26', 'LL_RTC_BKP_DR27', 'LL_RTC_BKP_DR28', 'LL_RTC_BKP_DR29',
    'LL_RTC_BKP_DR30', 'LL_RTC_BKP_DR31', 'LL_RTC_CALIB_OUTPUT_NONE',
    'LL_RTC_CALIB_OUTPUT_1HZ', 'LL_RTC_CALIB_OUTPUT_512HZ',
    'LL_RTC_CALIB_INSERTPULSE_NONE', 'LL_RTC_CALIB_INSERTPULSE_SET',
    'LL_RTC_CALIB_PERIOD_32SEC', 'LL_RTC_CALIB_PERIOD_16SEC',
    'LL_RTC_CALIB_PERIOD_8SEC', 'LL_RTC_InitTypeDef', 'LL_RTC_TimeTypeDef',
    'LL_RTC_DateTypeDef', 'LL_I2C_ICR_ADDRCF', 'LL_I2C_ICR_NACKCF', 'LL_I2C_ICR_STOPCF',
    'LL_I2C_ICR_BERRCF', 'LL_I2C_ICR_ARLOCF', 'LL_I2C_ICR_OVRCF', 'LL_I2C_ICR_PECCF',
    'LL_I2C_ICR_TIMOUTCF', 'LL_I2C_ICR_ALERTCF', 'LL_I2C_ISR_TXE', 'LL_I2C_ISR_TXIS',
    'LL_I2C_ISR_RXNE', 'LL_I2C_ISR_ADDR', 'LL_I2C_ISR_NACKF', 'LL_I2C_ISR_STOPF',
    'LL_I2C_ISR_TC', 'LL_I2C_ISR_TCR', 'LL_I2C_ISR_BERR', 'LL_I2C_ISR_ARLO',
    'LL_I2C_ISR_OVR', 'LL_I2C_ISR_PECERR', 'LL_I2C_ISR_TIMEOUT', 'LL_I2C_ISR_ALERT',
    'LL_I2C_ISR_BUSY', 'LL_I2C_CR1_TXIE', 'LL_I2C_CR1_RXIE', 'LL_I2C_CR1_ADDRIE',
    'LL_I2C_CR1_NACKIE', 'LL_I2C_CR1_STOPIE', 'LL_I2C_CR1_TCIE', 'LL_I2C_CR1_ERRIE',
    'LL_I2C_MODE_I2C', 'LL_I2C_MODE_SMBUS_HOST', 'LL_I2C_MODE_SMBUS_DEVICE',
    'LL_I2C_MODE_SMBUS_DEVICE_ARP', 'LL_I2C_ANALOGFILTER_ENABLE',
    'LL_I2C_ANALOGFILTER_DISABLE', 'LL_I2C_ADDRESSING_MODE_7BIT',
    'LL_I2C_ADDRESSING_MODE_10BIT', 'LL_I2C_OWNADDRESS1_7BIT',
    'LL_I2C_OWNADDRESS1_10BIT', 'LL_I2C_OWNADDRESS2_NOMASK',
    'LL_I2C_OWNADDRESS2_MASK01', 'LL_I2C_OWNADDRESS2_MASK02',
    'LL_I2C_OWNADDRESS2_MASK03', 'LL_I2C_OWNADDRESS2_MASK04',
    'LL_I2C_OWNADDRESS2_MASK05', 'LL_I2C_OWNADDRESS2_MASK06',
    'LL_I2C_OWNADDRESS2_MASK07', 'LL_I2C_ACK', 'LL_I2C_NACK', 'LL_I2C_ADDRSLAVE_7BIT',
    'LL_I2C_ADDRSLAVE_10BIT', 'LL_I2C_REQUEST_WRITE', 'LL_I2C_REQUEST_READ',
    'LL_I2C_MODE_RELOAD', 'LL_I2C_MODE_AUTOEND', 'LL_I2C_MODE_SOFTEND',
    'LL_I2C_MODE_SMBUS_RELOAD', 'LL_I2C_MODE_SMBUS_AUTOEND_NO_PEC',
    'LL_I2C_MODE_SMBUS_SOFTEND_NO_PEC', 'LL_I2C_MODE_SMBUS_AUTOEND_WITH_PEC',
    'LL_I2C_MODE_SMBUS_SOFTEND_WITH_PEC', 'LL_I2C_GENERATE_NOSTARTSTOP',
    'LL_I2C_GENERATE_STOP', 'LL_I2C_GENERATE_START_READ', 'LL_I2C_GENERATE_START_WRITE',
    'LL_I2C_GENERATE_RESTART_7BIT_READ', 'LL_I2C_GENERATE_RESTART_7BIT_WRITE',
    'LL_I2C_GENERATE_RESTART_10BIT_READ', 'LL_I2C_GENERATE_RESTART_10BIT_WRITE',
    'LL_I2C_DIRECTION_WRITE', 'LL_I2C_DIRECTION_READ', 'LL_I2C_DMA_REG_DATA_TRANSMIT',
    'LL_I2C_DMA_REG_DATA_RECEIVE', 'LL_I2C_SMBUS_TIMEOUTA_MODE_SCL_LOW',
    'LL_I2C_SMBUS_TIMEOUTA_MODE_SDA_SCL_HIGH', 'LL_I2C_SMBUS_TIMEOUTA',
    'LL_I2C_SMBUS_TIMEOUTB', 'LL_I2C_SMBUS_ALL_TIMEOUT', 'LL_I2C_InitTypeDef',
    'LL_LPTIM_ISR_CMPM', 'LL_LPTIM_ISR_ARRM', 'LL_LPTIM_ISR_EXTTRIG',
    'LL_LPTIM_ISR_CMPOK', 'LL_LPTIM_ISR_ARROK', 'LL_LPTIM_ISR_UP', 'LL_LPTIM_ISR_DOWN',
    'LL_LPTIM_IER_CMPMIE', 'LL_LPTIM_IER_ARRMIE', 'LL_LPTIM_IER_EXTTRIGIE',
    'LL_LPTIM_IER_CMPOKIE', 'LL_LPTIM_IER_ARROKIE', 'LL_LPTIM_IER_UPIE',
    'LL_LPTIM_IER_DOWNIE', 'LL_LPTIM_OPERATING_MODE_CONTINUOUS',
    'LL_LPTIM_OPERATING_MODE_ONESHOT', 'LL_LPTIM_UPDATE_MODE_IMMEDIATE',
    'LL_LPTIM_UPDATE_MODE_ENDOFPERIOD', 'LL_LPTIM_COUNTER_MODE_INTERNAL',
    'LL_LPTIM_COUNTER_MODE_EXTERNAL', 'LL_LPTIM_OUTPUT_WAVEFORM_PWM',
    'LL_LPTIM_OUTPUT_WAVEFORM_SETONCE', 'LL_LPTIM_OUTPUT_POLARITY_REGULAR',
    'LL_LPTIM_OUTPUT_POLARITY_INVERSE', 'LL_LPTIM_PRESCALER_DIV1',
    'LL_LPTIM_PRESCALER_DIV2', 'LL_LPTIM_PRESCALER_DIV4', 'LL_LPTIM_PRESCALER_DIV8',
    'LL_LPTIM_PRESCALER_DIV16', 'LL_LPTIM_PRESCALER_DIV32', 'LL_LPTIM_PRESCALER_DIV64',
    'LL_LPTIM_PRESCALER_DIV128', 'LL_LPTIM_TRIG_SOURCE_GPIO',
    'LL_LPTIM_TRIG_SOURCE_RTCALARMA', 'LL_LPTIM_TRIG_SOURCE_RTCALARMB',
    'LL_LPTIM_TRIG_SOURCE_RTCTAMP1', 'LL_LPTIM_TRIG_SOURCE_RTCTAMP2',
    'LL_LPTIM_TRIG_SOURCE_RTCTAMP3', 'LL_LPTIM_TRIG_SOURCE_COMP1',
    'LL_LPTIM_TRIG_SOURCE_COMP2', 'LL_LPTIM_TRIG_FILTER_NONE', 'LL_LPTIM_TRIG_FILTER_2',
    'LL_LPTIM_TRIG_FILTER_4', 'LL_LPTIM_TRIG_FILTER_8', 'LL_LPTIM_TRIG_POLARITY_RISING',
    'LL_LPTIM_TRIG_POLARITY_FALLING', 'LL_LPTIM_TRIG_POLARITY_RISING_FALLING',
    'LL_LPTIM_CLK_SOURCE_INTERNAL', 'LL_LPTIM_CLK_SOURCE_EXTERNAL',
    'LL_LPTIM_CLK_FILTER_NONE', 'LL_LPTIM_CLK_FILTER_2', 'LL_LPTIM_CLK_FILTER_4',
    'LL_LPTIM_CLK_FILTER_8', 'LL_LPTIM_CLK_POLARITY_RISING',
    'LL_LPTIM_CLK_POLARITY_FALLING', 'LL_LPTIM_CLK_POLARITY_RISING_FALLING',
    'LL_LPTIM_ENCODER_MODE_RISING', 'LL_LPTIM_ENCODER_MODE_FALLING',
    'LL_LPTIM_ENCODER_MODE_RISING_FALLING', 'LL_LPTIM_InitTypeDef',
    'DAC_CR_CH1_BITOFFSET', 'DAC_CR_CH2_BITOFFSET', 'DAC_CR_CHX_BITOFFSET_MASK',
    'DAC_SWTR_CH1', 'DAC_SWTR_CH2', 'DAC_SWTR_CHX_MASK', 'DAC_REG_DHR12R1_REGOFFSET',
    'DAC_REG_DHR12L1_REGOFFSET', 'DAC_REG_DHR8R1_REGOFFSET',
    'DAC_REG_DHR12R2_REGOFFSET', 'DAC_REG_DHR12L2_REGOFFSET',
    'DAC_REG_DHR8R2_REGOFFSET', 'DAC_REG_DHR12RX_REGOFFSET_MASK',
    'DAC_REG_DHR12LX_REGOFFSET_MASK', 'DAC_REG_DHR8RX_REGOFFSET_MASK',
    'DAC_REG_DHRX_REGOFFSET_MASK', 'DAC_REG_DOR1_REGOFFSET', 'DAC_REG_DOR2_REGOFFSET',
    'DAC_REG_DORX_REGOFFSET_MASK', 'DAC_DHR12RD_DACC2DHR_BITOFFSET_POS',
    'DAC_DHR12LD_DACC2DHR_BITOFFSET_POS', 'DAC_DHR8RD_DACC2DHR_BITOFFSET_POS',
    'DAC_DIGITAL_SCALE_12BITS', 'LL_DAC_FLAG_DMAUDR1', 'LL_DAC_FLAG_DMAUDR2',
    'LL_DAC_IT_DMAUDRIE1', 'LL_DAC_IT_DMAUDRIE2', 'LL_DAC_CHANNEL_1',
    'LL_DAC_CHANNEL_2', 'LL_DAC_TRIG_SOFTWARE', 'LL_DAC_TRIG_EXT_TIM2_TRGO',
    'LL_DAC_TRIG_EXT_TIM8_TRGO', 'LL_DAC_TRIG_EXT_TIM4_TRGO',
    'LL_DAC_TRIG_EXT_TIM6_TRGO', 'LL_DAC_TRIG_EXT_TIM7_TRGO',
    'LL_DAC_TRIG_EXT_TIM5_TRGO', 'LL_DAC_TRIG_EXT_EXTI_LINE9',
    'LL_DAC_WAVE_AUTO_GENERATION_NONE', 'LL_DAC_WAVE_AUTO_GENERATION_NOISE',
    'LL_DAC_WAVE_AUTO_GENERATION_TRIANGLE', 'LL_DAC_NOISE_LFSR_UNMASK_BIT0',
    'LL_DAC_NOISE_LFSR_UNMASK_BITS1_0', 'LL_DAC_NOISE_LFSR_UNMASK_BITS2_0',
    'LL_DAC_NOISE_LFSR_UNMASK_BITS3_0', 'LL_DAC_NOISE_LFSR_UNMASK_BITS4_0',
    'LL_DAC_NOISE_LFSR_UNMASK_BITS5_0', 'LL_DAC_NOISE_LFSR_UNMASK_BITS6_0',
    'LL_DAC_NOISE_LFSR_UNMASK_BITS7_0', 'LL_DAC_NOISE_LFSR_UNMASK_BITS8_0',
    'LL_DAC_NOISE_LFSR_UNMASK_BITS9_0', 'LL_DAC_NOISE_LFSR_UNMASK_BITS10_0',
    'LL_DAC_NOISE_LFSR_UNMASK_BITS11_0', 'LL_DAC_TRIANGLE_AMPLITUDE_1',
    'LL_DAC_TRIANGLE_AMPLITUDE_3', 'LL_DAC_TRIANGLE_AMPLITUDE_7',
    'LL_DAC_TRIANGLE_AMPLITUDE_15', 'LL_DAC_TRIANGLE_AMPLITUDE_31',
    'LL_DAC_TRIANGLE_AMPLITUDE_63', 'LL_DAC_TRIANGLE_AMPLITUDE_127',
    'LL_DAC_TRIANGLE_AMPLITUDE_255', 'LL_DAC_TRIANGLE_AMPLITUDE_511',
    'LL_DAC_TRIANGLE_AMPLITUDE_1023', 'LL_DAC_TRIANGLE_AMPLITUDE_2047',
    'LL_DAC_TRIANGLE_AMPLITUDE_4095', 'LL_DAC_OUTPUT_BUFFER_ENABLE',
    'LL_DAC_OUTPUT_BUFFER_DISABLE', 'LL_DAC_RESOLUTION_12B', 'LL_DAC_RESOLUTION_8B',
    'LL_DAC_DMA_REG_DATA_12BITS_RIGHT_ALIGNED',
    'LL_DAC_DMA_REG_DATA_12BITS_LEFT_ALIGNED',
    'LL_DAC_DMA_REG_DATA_8BITS_RIGHT_ALIGNED',
    'LL_DAC_DELAY_STARTUP_VOLTAGE_SETTLING_US', 'LL_DAC_DELAY_VOLTAGE_SETTLING_US',
    'LL_DAC_InitTypeDef', 'LL_RNG_SR_DRDY', 'LL_RNG_SR_CECS', 'LL_RNG_SR_SECS',
    'LL_RNG_SR_CEIS', 'LL_RNG_SR_SEIS', 'LL_RNG_CR_IE', 'LL_AHB1_GRP1_PERIPH_ALL',
    'LL_AHB1_GRP1_PERIPH_GPIOA', 'LL_AHB1_GRP1_PERIPH_GPIOB',
    'LL_AHB1_GRP1_PERIPH_GPIOC', 'LL_AHB1_GRP1_PERIPH_GPIOD',
    'LL_AHB1_GRP1_PERIPH_GPIOE', 'LL_AHB1_GRP1_PERIPH_GPIOF',
    'LL_AHB1_GRP1_PERIPH_GPIOG', 'LL_AHB1_GRP1_PERIPH_GPIOH',
    'LL_AHB1_GRP1_PERIPH_GPIOI', 'LL_AHB1_GRP1_PERIPH_GPIOJ',
    'LL_AHB1_GRP1_PERIPH_GPIOK', 'LL_AHB1_GRP1_PERIPH_CRC',
    'LL_AHB1_GRP1_PERIPH_BKPSRAM', 'LL_AHB1_GRP1_PERIPH_DTCMRAM',
    'LL_AHB1_GRP1_PERIPH_DMA1', 'LL_AHB1_GRP1_PERIPH_DMA2', 'LL_AHB1_GRP1_PERIPH_DMA2D',
    'LL_AHB1_GRP1_PERIPH_ETHMAC', 'LL_AHB1_GRP1_PERIPH_ETHMACTX',
    'LL_AHB1_GRP1_PERIPH_ETHMACRX', 'LL_AHB1_GRP1_PERIPH_ETHMACPTP',
    'LL_AHB1_GRP1_PERIPH_OTGHS', 'LL_AHB1_GRP1_PERIPH_OTGHSULPI',
    'LL_AHB1_GRP1_PERIPH_AXI', 'LL_AHB1_GRP1_PERIPH_FLITF', 'LL_AHB1_GRP1_PERIPH_SRAM1',
    'LL_AHB1_GRP1_PERIPH_SRAM2', 'LL_AHB2_GRP1_PERIPH_ALL', 'LL_AHB2_GRP1_PERIPH_DCMI',
    'LL_AHB2_GRP1_PERIPH_CRYP', 'LL_AHB2_GRP1_PERIPH_HASH', 'LL_AHB2_GRP1_PERIPH_RNG',
    'LL_AHB2_GRP1_PERIPH_OTGFS', 'LL_AHB3_GRP1_PERIPH_ALL', 'LL_AHB3_GRP1_PERIPH_FMC',
    'LL_AHB3_GRP1_PERIPH_QSPI', 'LL_APB1_GRP1_PERIPH_ALL', 'LL_APB1_GRP1_PERIPH_TIM2',
    'LL_APB1_GRP1_PERIPH_TIM3', 'LL_APB1_GRP1_PERIPH_TIM4', 'LL_APB1_GRP1_PERIPH_TIM5',
    'LL_APB1_GRP1_PERIPH_TIM6', 'LL_APB1_GRP1_PERIPH_TIM7', 'LL_APB1_GRP1_PERIPH_TIM12',
    'LL_APB1_GRP1_PERIPH_TIM13', 'LL_APB1_GRP1_PERIPH_TIM14',
    'LL_APB1_GRP1_PERIPH_LPTIM1', 'LL_APB1_GRP1_PERIPH_WWDG',
    'LL_APB1_GRP1_PERIPH_SPI2', 'LL_APB1_GRP1_PERIPH_SPI3',
    'LL_APB1_GRP1_PERIPH_SPDIFRX', 'LL_APB1_GRP1_PERIPH_USART2',
    'LL_APB1_GRP1_PERIPH_USART3', 'LL_APB1_GRP1_PERIPH_UART4',
    'LL_APB1_GRP1_PERIPH_UART5', 'LL_APB1_GRP1_PERIPH_I2C1', 'LL_APB1_GRP1_PERIPH_I2C2',
    'LL_APB1_GRP1_PERIPH_I2C3', 'LL_APB1_GRP1_PERIPH_I2C4', 'LL_APB1_GRP1_PERIPH_CAN1',
    'LL_APB1_GRP1_PERIPH_CAN2', 'LL_APB1_GRP1_PERIPH_CEC', 'LL_APB1_GRP1_PERIPH_PWR',
    'LL_APB1_GRP1_PERIPH_DAC1', 'LL_APB1_GRP1_PERIPH_UART7',
    'LL_APB1_GRP1_PERIPH_UART8', 'LL_APB2_GRP1_PERIPH_ALL', 'LL_APB2_GRP1_PERIPH_TIM1',
    'LL_APB2_GRP1_PERIPH_TIM8', 'LL_APB2_GRP1_PERIPH_USART1',
    'LL_APB2_GRP1_PERIPH_USART6', 'LL_APB2_GRP1_PERIPH_ADC1',
    'LL_APB2_GRP1_PERIPH_ADC2', 'LL_APB2_GRP1_PERIPH_ADC3',
    'LL_APB2_GRP1_PERIPH_SDMMC1', 'LL_APB2_GRP1_PERIPH_SPI1',
    'LL_APB2_GRP1_PERIPH_SPI4', 'LL_APB2_GRP1_PERIPH_SYSCFG',
    'LL_APB2_GRP1_PERIPH_TIM9', 'LL_APB2_GRP1_PERIPH_TIM10',
    'LL_APB2_GRP1_PERIPH_TIM11', 'LL_APB2_GRP1_PERIPH_SPI5', 'LL_APB2_GRP1_PERIPH_SPI6',
    'LL_APB2_GRP1_PERIPH_SAI1', 'LL_APB2_GRP1_PERIPH_SAI2', 'LL_APB2_GRP1_PERIPH_LTDC',
    'LL_APB2_GRP1_PERIPH_ADC', 'LL_DMA2D_FLAG_CEIF', 'LL_DMA2D_FLAG_CTCIF',
    'LL_DMA2D_FLAG_CAEIF', 'LL_DMA2D_FLAG_TWIF', 'LL_DMA2D_FLAG_TCIF',
    'LL_DMA2D_FLAG_TEIF', 'LL_DMA2D_IT_CEIE', 'LL_DMA2D_IT_CTCIE', 'LL_DMA2D_IT_CAEIE',
    'LL_DMA2D_IT_TWIE', 'LL_DMA2D_IT_TCIE', 'LL_DMA2D_IT_TEIE', 'LL_DMA2D_MODE_M2M',
    'LL_DMA2D_MODE_M2M_PFC', 'LL_DMA2D_MODE_M2M_BLEND', 'LL_DMA2D_MODE_R2M',
    'LL_DMA2D_OUTPUT_MODE_ARGB8888', 'LL_DMA2D_OUTPUT_MODE_RGB888',
    'LL_DMA2D_OUTPUT_MODE_RGB565', 'LL_DMA2D_OUTPUT_MODE_ARGB1555',
    'LL_DMA2D_OUTPUT_MODE_ARGB4444', 'LL_DMA2D_INPUT_MODE_ARGB8888',
    'LL_DMA2D_INPUT_MODE_RGB888', 'LL_DMA2D_INPUT_MODE_RGB565',
    'LL_DMA2D_INPUT_MODE_ARGB1555', 'LL_DMA2D_INPUT_MODE_ARGB4444',
    'LL_DMA2D_INPUT_MODE_L8', 'LL_DMA2D_INPUT_MODE_AL44', 'LL_DMA2D_INPUT_MODE_AL88',
    'LL_DMA2D_INPUT_MODE_L4', 'LL_DMA2D_INPUT_MODE_A8', 'LL_DMA2D_INPUT_MODE_A4',
    'LL_DMA2D_ALPHA_MODE_NO_MODIF', 'LL_DMA2D_ALPHA_MODE_REPLACE',
    'LL_DMA2D_ALPHA_MODE_COMBINE', 'LL_DMA2D_CLUT_COLOR_MODE_ARGB8888',
    'LL_DMA2D_CLUT_COLOR_MODE_RGB888', 'LL_DMA2D_InitTypeDef',
    'LL_DMA2D_LayerCfgTypeDef', 'LL_DMA2D_ColorTypeDef', 'LL_GPIO_PIN_0',
    'LL_GPIO_PIN_1', 'LL_GPIO_PIN_2', 'LL_GPIO_PIN_3', 'LL_GPIO_PIN_4', 'LL_GPIO_PIN_5',
    'LL_GPIO_PIN_6', 'LL_GPIO_PIN_7', 'LL_GPIO_PIN_8', 'LL_GPIO_PIN_9',
    'LL_GPIO_PIN_10', 'LL_GPIO_PIN_11', 'LL_GPIO_PIN_12', 'LL_GPIO_PIN_13',
    'LL_GPIO_PIN_14', 'LL_GPIO_PIN_15', 'LL_GPIO_PIN_ALL', 'LL_GPIO_MODE_INPUT',
    'LL_GPIO_MODE_OUTPUT', 'LL_GPIO_MODE_ALTERNATE', 'LL_GPIO_MODE_ANALOG',
    'LL_GPIO_OUTPUT_PUSHPULL', 'LL_GPIO_OUTPUT_OPENDRAIN', 'LL_GPIO_SPEED_FREQ_LOW',
    'LL_GPIO_SPEED_FREQ_MEDIUM', 'LL_GPIO_SPEED_FREQ_HIGH',
    'LL_GPIO_SPEED_FREQ_VERY_HIGH', 'LL_GPIO_PULL_NO', 'LL_GPIO_PULL_UP',
    'LL_GPIO_PULL_DOWN', 'LL_GPIO_AF_0', 'LL_GPIO_AF_1', 'LL_GPIO_AF_2', 'LL_GPIO_AF_3',
    'LL_GPIO_AF_4', 'LL_GPIO_AF_5', 'LL_GPIO_AF_6', 'LL_GPIO_AF_7', 'LL_GPIO_AF_8',
    'LL_GPIO_AF_9', 'LL_GPIO_AF_10', 'LL_GPIO_AF_11', 'LL_GPIO_AF_12', 'LL_GPIO_AF_13',
    'LL_GPIO_AF_14', 'LL_GPIO_AF_15', 'LL_GPIO_InitTypeDef', 'LL_MAX_DELAY',
    'UID_BASE_ADDRESS', 'FLASHSIZE_BASE_ADDRESS', 'PACKAGE_BASE_ADDRESS',
    'LL_UTILS_HSEBYPASS_OFF', 'LL_UTILS_HSEBYPASS_ON', 'LL_UTILS_PACKAGETYPE_LQFP100',
    'LL_UTILS_PACKAGETYPE_LQFP144_WLCSP143',
    'LL_UTILS_PACKAGETYPE_WLCSP180_LQFP176_UFBGA176',
    'LL_UTILS_PACKAGETYPE_LQFP176_LQFP208_TFBGA216',
    'LL_UTILS_PACKAGETYPE_TFBGA216_LQFP176_LQFP208',
    'LL_UTILS_PACKAGETYPE_LQFP176_TFBGA216_LQFP208',
    'LL_UTILS_PACKAGETYPE_LQFP208_LQFP176_TFBGA216', 'LL_UTILS_PLLInitTypeDef',
    'LL_UTILS_ClkInitTypeDef', 'LL_WWDG_CFR_EWI', 'LL_WWDG_PRESCALER_1',
    'LL_WWDG_PRESCALER_2', 'LL_WWDG_PRESCALER_4', 'LL_WWDG_PRESCALER_8',
    'LL_EXTI_LINE_0', 'LL_EXTI_LINE_1', 'LL_EXTI_LINE_2', 'LL_EXTI_LINE_3',
    'LL_EXTI_LINE_4', 'LL_EXTI_LINE_5', 'LL_EXTI_LINE_6', 'LL_EXTI_LINE_7',
    'LL_EXTI_LINE_8', 'LL_EXTI_LINE_9', 'LL_EXTI_LINE_10', 'LL_EXTI_LINE_11',
    'LL_EXTI_LINE_12', 'LL_EXTI_LINE_13', 'LL_EXTI_LINE_14', 'LL_EXTI_LINE_15',
    'LL_EXTI_LINE_16', 'LL_EXTI_LINE_17', 'LL_EXTI_LINE_18', 'LL_EXTI_LINE_19',
    'LL_EXTI_LINE_20', 'LL_EXTI_LINE_21', 'LL_EXTI_LINE_22', 'LL_EXTI_LINE_23',
    'LL_EXTI_LINE_ALL_0_31', 'LL_EXTI_LINE_ALL', 'LL_EXTI_LINE_NONE', 'LL_EXTI_MODE_IT',
    'LL_EXTI_MODE_EVENT', 'LL_EXTI_MODE_IT_EVENT', 'LL_EXTI_TRIGGER_NONE',
    'LL_EXTI_TRIGGER_RISING', 'LL_EXTI_TRIGGER_FALLING',
    'LL_EXTI_TRIGGER_RISING_FALLING', 'LL_EXTI_InitTypeDef', 'SDMMC_InitTypeDef',
    'SDMMC_CmdInitTypeDef', 'SDMMC_DataInitTypeDef', 'LL_DMA_STREAM_0',
    'LL_DMA_STREAM_1', 'LL_DMA_STREAM_2', 'LL_DMA_STREAM_3', 'LL_DMA_STREAM_4',
    'LL_DMA_STREAM_5', 'LL_DMA_STREAM_6', 'LL_DMA_STREAM_7', 'LL_DMA_STREAM_ALL',
    'LL_DMA_DIRECTION_PERIPH_TO_MEMORY', 'LL_DMA_DIRECTION_MEMORY_TO_PERIPH',
    'LL_DMA_DIRECTION_MEMORY_TO_MEMORY', 'LL_DMA_MODE_NORMAL', 'LL_DMA_MODE_CIRCULAR',
    'LL_DMA_MODE_PFCTRL', 'LL_DMA_DOUBLEBUFFER_MODE_DISABLE',
    'LL_DMA_DOUBLEBUFFER_MODE_ENABLE', 'LL_DMA_PERIPH_NOINCREMENT',
    'LL_DMA_PERIPH_INCREMENT', 'LL_DMA_MEMORY_NOINCREMENT', 'LL_DMA_MEMORY_INCREMENT',
    'LL_DMA_PDATAALIGN_BYTE', 'LL_DMA_PDATAALIGN_HALFWORD', 'LL_DMA_PDATAALIGN_WORD',
    'LL_DMA_MDATAALIGN_BYTE', 'LL_DMA_MDATAALIGN_HALFWORD', 'LL_DMA_MDATAALIGN_WORD',
    'LL_DMA_OFFSETSIZE_PSIZE', 'LL_DMA_OFFSETSIZE_FIXEDTO4', 'LL_DMA_PRIORITY_LOW',
    'LL_DMA_PRIORITY_MEDIUM', 'LL_DMA_PRIORITY_HIGH', 'LL_DMA_PRIORITY_VERYHIGH',
    'LL_DMA_CHANNEL_0', 'LL_DMA_CHANNEL_1', 'LL_DMA_CHANNEL_2', 'LL_DMA_CHANNEL_3',
    'LL_DMA_CHANNEL_4', 'LL_DMA_CHANNEL_5', 'LL_DMA_CHANNEL_6', 'LL_DMA_CHANNEL_7',
    'LL_DMA_MBURST_SINGLE', 'LL_DMA_MBURST_INC4', 'LL_DMA_MBURST_INC8',
    'LL_DMA_MBURST_INC16', 'LL_DMA_PBURST_SINGLE', 'LL_DMA_PBURST_INC4',
    'LL_DMA_PBURST_INC8', 'LL_DMA_PBURST_INC16', 'LL_DMA_FIFOMODE_DISABLE',
    'LL_DMA_FIFOMODE_ENABLE', 'LL_DMA_FIFOSTATUS_0_25', 'LL_DMA_FIFOSTATUS_25_50',
    'LL_DMA_FIFOSTATUS_50_75', 'LL_DMA_FIFOSTATUS_75_100', 'LL_DMA_FIFOSTATUS_EMPTY',
    'LL_DMA_FIFOSTATUS_FULL', 'LL_DMA_FIFOTHRESHOLD_1_4', 'LL_DMA_FIFOTHRESHOLD_1_2',
    'LL_DMA_FIFOTHRESHOLD_3_4', 'LL_DMA_FIFOTHRESHOLD_FULL', 'LL_DMA_CURRENTTARGETMEM0',
    'LL_DMA_CURRENTTARGETMEM1', 'LL_DMA_InitTypeDef']
